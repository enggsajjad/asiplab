-----------------------------------------------------
  (C) ASIP Solutions 2011
      ASIP Meister 2.3.4 Standard
      2011年10月
-----------------------------------------------------

ASIP Meister Standard Ver.2.3.4 リリースノート

                エイシップ・ソリューションズ株式会社


[リリース履歴]

2011年10月 -- バージョン 2.3.4
2011年10月 -- バージョン 2.3.3
2011年 2月 -- バージョン 2.3.2d
2011年 1月 -- バージョン 2.3.2c
2010年 6月 -- バージョン 2.3.2b
2010年 4月 -- バージョン 2.3.2a
2009年 7月 -- バージョン 2.3.2
2009年 4月 -- バージョン 2.3.1
2008年10月 -- バージョン 2.3.0
2008年 4月 -- 初期リリース(バージョン 2.2.0)


[バージョン 2.3.4での変更点]

・フローティングライセンスに対応


[バージョン 2.3.3での変更点]

・ライセンス新方式の導入(ノードロック専用)


[バージョン 2.3.2dでの変更点]

・英語版ドキュメントの更新


[バージョン 2.3.2cでの変更点]

・Java 1.6 Update 18以降で発生していた不具合を修正


[バージョン 2.3.2bでの変更点]

・Brownie STD 32用GDBの改修


[バージョン 2.3.2aでの変更点]

・SystemC FHMガイド，FPGA用サンプルの追加


[バージョン 2.3.2での変更点]

・機能拡張
HDL生成: SystemCの生成に対応


[バージョン 2.3.1での変更点]

・機能拡張
AP開発環境生成: GDBの生成に対応


[known bugs list]
1.AP環境生成：オペランドの数が0の拡張命令をCKFで定義した場合，
	コンパイラ生成時にエラーが出る．
対策：オペランドの数が0の拡張命令は追加しないでください．


2.GDB:
現バージョンのBrownie用GDBには、スタック情報の取得部に不具合が存在します。
そのため、nextコマンドなど、関数呼び出し文を含む行を現在の関数内で実行すると例外を発生します。

例として、以下のコードをBrownie用GDBを用いてデバッグする場合、
7行目でブレークされている状態で、7行目の処理をnextコマンドで実行すると例外が発生します。

1: int func(int x) {
2:     return x * x;
3: }
4: 
5: int main() {
6:     int i = 5;
7:     return func(i);
8: }

回避方法として、関数呼び出し文を含む行を実行する場合には
以下の手順で実行していただけますようお願いいたします。

１．stepコマンドでその関数内に入る
２．returnコマンドでその関数内から呼び出し元に戻る

例の場合ですと、7行目でブレークされている状態でstepコマンドを実行し、
2行目（func()の先頭部）に処理を移し、returnコマンドで7行目に戻ります。
こうすることで、例外の発生を防ぐことが可能です。

現在この不具合に関しては、最優先事項として修正を進めております。
修正でき次第、直ちにご連絡いたします。


[その他]
1.Compiler Generatorの動作時間が長い。制御がGUIに戻る
まで、数１０分かかる場合がある。

対策：申し訳ありませんが、終了までお待ちください。

2.生成されるプロセッサの応用プログラム開発環境のコマンド名が
"brownie32-elf-XX"の固定となる。

対策：コマンドは、brownie32-elf-XXのままお使いください。


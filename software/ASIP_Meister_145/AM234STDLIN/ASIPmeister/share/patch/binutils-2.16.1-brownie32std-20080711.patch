Index: config.sub
===================================================================
RCS file: /home/prj/asip/cvs/binutils/config.sub,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- config.sub	31 Jul 2007 11:39:31 -0000	1.1.1.1
+++ config.sub	8 Aug 2007 08:44:28 -0000	1.2
@@ -232,7 +232,7 @@ case $basic_machine in
 	| am33_2.0 \
 	| arc | arm | arm[bl]e | arme[lb] | armv[2345] | armv[345][lb] | avr \
 	| c4x | clipper \
-	| d10v | d30v | dlx | dsp16xx \
+	| d10v | d30v | dlx | brownie32 | dsp16xx \
 	| fr30 | frv \
 	| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \
 	| i370 | i860 | i960 | ia64 \
@@ -301,7 +301,7 @@ case $basic_machine in
 	| bs2000-* \
 	| c[123]* | c30-* | [cjt]90-* | c4x-* | c54x-* | c55x-* | c6x-* \
 	| clipper-* | craynv-* | cydra-* \
-	| d10v-* | d30v-* | dlx-* \
+	| d10v-* | d30v-* | dlx-* | brownie32-* \
 	| elxsi-* \
 	| f30[01]-* | f700-* | fr30-* | frv-* | fx80-* \
 	| h8300-* | h8500-* \
Index: bfd/Makefile.am
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/Makefile.am,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/Makefile.am	31 Jul 2007 11:39:34 -0000	1.1.1.1
+++ bfd/Makefile.am	8 Aug 2007 08:44:28 -0000	1.2
@@ -64,6 +64,7 @@ ALL_MACHINES = \
 	cpu-d10v.lo \
 	cpu-d30v.lo \
 	cpu-dlx.lo \
+	cpu-brownie32.lo \
 	cpu-fr30.lo \
 	cpu-frv.lo \
 	cpu-h8300.lo \
@@ -122,6 +123,7 @@ ALL_MACHINES_CFILES = \
 	cpu-d10v.c \
 	cpu-d30v.c \
 	cpu-dlx.c \
+	cpu-brownie32.c \
 	cpu-fr30.c \
 	cpu-frv.c \
 	cpu-h8300.c \
@@ -228,6 +230,7 @@ BFD32_BACKENDS = \
 	elf32-d10v.lo \
 	elf32-d30v.lo \
 	elf32-dlx.lo \
+	elf32-brownie32.lo \
 	elf32-fr30.lo \
 	elf32-frv.lo \
 	elf32-gen.lo \
@@ -397,6 +400,7 @@ BFD32_BACKENDS_CFILES = \
 	elf32-d10v.c \
 	elf32-d30v.c \
 	elf32-dlx.c \
+	elf32-brownie32.c \
 	elf32-fr30.c \
 	elf32-frv.c \
 	elf32-gen.c \
@@ -950,6 +954,7 @@ cpu-crx.lo: cpu-crx.c $(INCDIR)/filename
 cpu-d10v.lo: cpu-d10v.c $(INCDIR)/filenames.h
 cpu-d30v.lo: cpu-d30v.c $(INCDIR)/filenames.h
 cpu-dlx.lo: cpu-dlx.c $(INCDIR)/filenames.h
+cpu-brownie32.lo: cpu-brownie32.c $(INCDIR)/filenames.h
 cpu-fr30.lo: cpu-fr30.c $(INCDIR)/filenames.h
 cpu-frv.lo: cpu-frv.c $(INCDIR)/filenames.h
 cpu-h8300.lo: cpu-h8300.c $(INCDIR)/filenames.h
@@ -1189,10 +1194,19 @@ elf32-d30v.lo: elf32-d30v.c $(INCDIR)/fi
   $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
   $(INCDIR)/bfdlink.h $(INCDIR)/elf/d30v.h $(INCDIR)/elf/reloc-macros.h \
   elf32-target.h
+
+
 elf32-dlx.lo: elf32-dlx.c $(INCDIR)/filenames.h elf-bfd.h \
   $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
   $(INCDIR)/bfdlink.h $(INCDIR)/elf/dlx.h $(INCDIR)/elf/reloc-macros.h \
   elf32-target.h
+
+elf32-brownie32.lo: elf32-brownie32.c $(INCDIR)/filenames.h elf-bfd.h \
+  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
+  $(INCDIR)/bfdlink.h $(INCDIR)/elf/brownie32.h $(INCDIR)/elf/reloc-macros.h \
+  elf32-target.h
+
+
 elf32-fr30.lo: elf32-fr30.c $(INCDIR)/filenames.h elf-bfd.h \
   $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
   $(INCDIR)/bfdlink.h $(INCDIR)/elf/fr30.h $(INCDIR)/elf/reloc-macros.h \
Index: bfd/Makefile.in
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/Makefile.in,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/Makefile.in	31 Jul 2007 11:39:36 -0000	1.1.1.1
+++ bfd/Makefile.in	8 Aug 2007 08:44:28 -0000	1.2
@@ -1,4 +1,4 @@
-# Makefile.in generated by automake 1.9.5 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
@@ -15,8 +15,6 @@
 @SET_MAKE@
 
 
-SOURCES = $(libbfd_a_SOURCES) $(libbfd_la_SOURCES)
-
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
 VPATH = @srcdir@
@@ -40,6 +38,7 @@ POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
 target_triplet = @target@
+LIBOBJDIR =
 DIST_COMMON = $(srcdir)/../config.guess $(srcdir)/../config.sub README \
 	ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
 	$(top_srcdir)/configure $(am__configure_deps) \
@@ -250,7 +249,7 @@ wordsize = @wordsize@
 AUTOMAKE_OPTIONS = 1.9 cygnus
 
 # Uncomment the following line when doing a release.
-RELEASE=y
+RELEASE = y
 INCDIR = $(srcdir)/../include
 CSEARCH = -I. -I$(srcdir) -I$(INCDIR)
 MKDEP = gcc -MM
@@ -302,6 +301,7 @@ ALL_MACHINES = \
 	cpu-d10v.lo \
 	cpu-d30v.lo \
 	cpu-dlx.lo \
+	cpu-brownie32.lo \
 	cpu-fr30.lo \
 	cpu-frv.lo \
 	cpu-h8300.lo \
@@ -360,6 +360,7 @@ ALL_MACHINES_CFILES = \
 	cpu-d10v.c \
 	cpu-d30v.c \
 	cpu-dlx.c \
+	cpu-brownie32.c \
 	cpu-fr30.c \
 	cpu-frv.c \
 	cpu-h8300.c \
@@ -467,6 +468,7 @@ BFD32_BACKENDS = \
 	elf32-d10v.lo \
 	elf32-d30v.lo \
 	elf32-dlx.lo \
+	elf32-brownie32.lo \
 	elf32-fr30.lo \
 	elf32-frv.lo \
 	elf32-gen.lo \
@@ -636,6 +638,7 @@ BFD32_BACKENDS_CFILES = \
 	elf32-d10v.c \
 	elf32-d30v.c \
 	elf32-dlx.c \
+	elf32-brownie32.c \
 	elf32-fr30.c \
 	elf32-frv.c \
 	elf32-gen.c \
@@ -1518,6 +1521,7 @@ cpu-crx.lo: cpu-crx.c $(INCDIR)/filename
 cpu-d10v.lo: cpu-d10v.c $(INCDIR)/filenames.h
 cpu-d30v.lo: cpu-d30v.c $(INCDIR)/filenames.h
 cpu-dlx.lo: cpu-dlx.c $(INCDIR)/filenames.h
+cpu-brownie32.lo: cpu-brownie32.c $(INCDIR)/filenames.h
 cpu-fr30.lo: cpu-fr30.c $(INCDIR)/filenames.h
 cpu-frv.lo: cpu-frv.c $(INCDIR)/filenames.h
 cpu-h8300.lo: cpu-h8300.c $(INCDIR)/filenames.h
@@ -1757,10 +1761,17 @@ elf32-d30v.lo: elf32-d30v.c $(INCDIR)/fi
   $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
   $(INCDIR)/bfdlink.h $(INCDIR)/elf/d30v.h $(INCDIR)/elf/reloc-macros.h \
   elf32-target.h
+
 elf32-dlx.lo: elf32-dlx.c $(INCDIR)/filenames.h elf-bfd.h \
   $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
   $(INCDIR)/bfdlink.h $(INCDIR)/elf/dlx.h $(INCDIR)/elf/reloc-macros.h \
   elf32-target.h
+
+elf32-brownie32.lo: elf32-brownie32.c $(INCDIR)/filenames.h elf-bfd.h \
+  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
+  $(INCDIR)/bfdlink.h $(INCDIR)/elf/brownie32.h $(INCDIR)/elf/reloc-macros.h \
+  elf32-target.h
+
 elf32-fr30.lo: elf32-fr30.c $(INCDIR)/filenames.h elf-bfd.h \
   $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
   $(INCDIR)/bfdlink.h $(INCDIR)/elf/fr30.h $(INCDIR)/elf/reloc-macros.h \
Index: bfd/aclocal.m4
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/aclocal.m4,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/aclocal.m4	31 Jul 2007 11:39:34 -0000	1.1.1.1
+++ bfd/aclocal.m4	8 Aug 2007 08:44:28 -0000	1.2
@@ -1,4 +1,4 @@
-# generated automatically by aclocal 1.9.5 -*- Autoconf -*-
+# generated automatically by aclocal 1.9.6 -*- Autoconf -*-
 
 # Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
 # 2005  Free Software Foundation, Inc.
@@ -28,7 +28,7 @@ AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api
 # Call AM_AUTOMAKE_VERSION so it can be traced.
 # This function is AC_REQUIREd by AC_INIT_AUTOMAKE.
 AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],
-	 [AM_AUTOMAKE_VERSION([1.9.5])])
+	 [AM_AUTOMAKE_VERSION([1.9.6])])
 
 # AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-
 
Index: bfd/archures.c
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/archures.c,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/archures.c	31 Jul 2007 11:39:37 -0000	1.1.1.1
+++ bfd/archures.c	8 Aug 2007 08:44:28 -0000	1.2
@@ -219,7 +219,10 @@ DESCRIPTION
 .#define bfd_mach_d10v_ts2	2
 .#define bfd_mach_d10v_ts3	3
 .  bfd_arch_d30v,      {* Mitsubishi D30V *}
+
 .  bfd_arch_dlx,       {* DLX *}
+.  bfd_arch_brownie32,       {* Brownies32 *}
+
 .  bfd_arch_m68hc11,   {* Motorola 68HC11 *}
 .  bfd_arch_m68hc12,   {* Motorola 68HC12 *}
 .#define bfd_mach_m6812_default 0
@@ -407,6 +410,7 @@ extern const bfd_arch_info_type bfd_crx_
 extern const bfd_arch_info_type bfd_d10v_arch;
 extern const bfd_arch_info_type bfd_d30v_arch;
 extern const bfd_arch_info_type bfd_dlx_arch;
+extern const bfd_arch_info_type bfd_brownie32_arch;
 extern const bfd_arch_info_type bfd_fr30_arch;
 extern const bfd_arch_info_type bfd_frv_arch;
 extern const bfd_arch_info_type bfd_h8300_arch;
@@ -470,6 +474,7 @@ static const bfd_arch_info_type * const 
     &bfd_d10v_arch,
     &bfd_d30v_arch,
     &bfd_dlx_arch,
+    &bfd_brownie32_arch,
     &bfd_fr30_arch,
     &bfd_frv_arch,
     &bfd_h8300_arch,
Index: bfd/bfd-in2.h
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/bfd-in2.h,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/bfd-in2.h	31 Jul 2007 11:39:37 -0000	1.1.1.1
+++ bfd/bfd-in2.h	8 Aug 2007 08:44:28 -0000	1.2
@@ -1664,7 +1664,10 @@ enum bfd_architecture
 #define bfd_mach_d10v_ts2      2
 #define bfd_mach_d10v_ts3      3
   bfd_arch_d30v,      /* Mitsubishi D30V */
+
   bfd_arch_dlx,       /* DLX */
+  bfd_arch_brownie32,       /* Brownie32 */
+
   bfd_arch_m68hc11,   /* Motorola 68HC11 */
   bfd_arch_m68hc12,   /* Motorola 68HC12 */
 #define bfd_mach_m6812_default 0
@@ -2886,12 +2889,19 @@ of the container.  */
 
 /* DLX relocs  */
   BFD_RELOC_DLX_HI16_S,
+/* Brownie32 relocs  */
+  BFD_RELOC_BROWNIE32_HI16_S,
 
 /* DLX relocs  */
   BFD_RELOC_DLX_LO16,
+/* Brownie32 relocs  */
+  BFD_RELOC_BROWNIE32_LO16,
 
 /* DLX relocs  */
   BFD_RELOC_DLX_JMP26,
+/* Brownie32 relocs  */
+  BFD_RELOC_BROWNIE32_JMP26,
+
 
 /* Renesas M32R (formerly Mitsubishi M32R) relocs.
 This is a 24 bit absolute address.  */
Index: bfd/config.bfd
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/config.bfd,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/config.bfd	31 Jul 2007 11:39:36 -0000	1.1.1.1
+++ bfd/config.bfd	8 Aug 2007 08:44:28 -0000	1.2
@@ -64,6 +64,7 @@ c54x*)		 targ_archs=bfd_tic54x_arch ;;
 crisv32)	 targ_archs=bfd_cris_arch ;;
 crx*)		 targ_archs=bfd_crx_arch ;;
 dlx*)		 targ_archs=bfd_dlx_arch ;;
+brownie32*)	 targ_archs=bfd_brownie32_arch ;;
 hppa*)		 targ_archs=bfd_hppa_arch ;;
 i[3-7]86)	 targ_archs=bfd_i386_arch ;;
 i370)		 targ_archs=bfd_i370_arch ;;
@@ -346,11 +347,26 @@ case "${targ}" in
     targ_defvec=bfd_elf32_d10v_vec
     ;;
 
+  brownie32-*-elf*)
+    targ_defvec=bfd_elf32_brownie32_big_vec
+    targ_selvecs="bfd_elf32_brownie32_big_vec"
+    ;;
+
+  brownie32-*-elf*)
+    targ_defvec=bfd_elf32_brownie32_big_vec
+    targ_selvecs="bfd_elf32_brownie32_big_vec"
+    ;;
+
   dlx-*-elf*)
     targ_defvec=bfd_elf32_dlx_big_vec
     targ_selvecs="bfd_elf32_dlx_big_vec"
     ;;
 
+  brownie32-*-elf*)
+    targ_defvec=bfd_elf32_brownie32_big_vec
+    targ_selvecs="bfd_elf32_brownie32_big_vec"
+    ;;
+
   d30v-*-*)
     targ_defvec=bfd_elf32_d30v_vec
     ;;
Index: bfd/configure
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/configure,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/configure	31 Jul 2007 11:39:34 -0000	1.1.1.1
+++ bfd/configure	8 Aug 2007 08:44:28 -0000	1.2
@@ -11546,6 +11546,7 @@ do
     bfd_elf32_d10v_vec)		tb="$tb elf32-d10v.lo elf32.lo $elf" ;;
     bfd_elf32_d30v_vec)		tb="$tb elf32-d30v.lo elf32.lo $elf" ;;
     bfd_elf32_dlx_big_vec)	tb="$tb elf32-dlx.lo elf32.lo $elf" ;;
+    bfd_elf32_brownie32_big_vec)	tb="$tb elf32-brownie32.lo elf32.lo $elf" ;;
     bfd_elf32_fr30_vec)		tb="$tb elf32-fr30.lo elf32.lo $elf" ;;
     bfd_elf32_frv_vec)		tb="$tb elf32-frv.lo elf32.lo $elf" ;;
     bfd_elf32_frvfdpic_vec)	tb="$tb elf32-frv.lo elf32.lo $elf" ;;
@@ -12715,9 +12716,10 @@ for ac_i in : $LIBOBJS; do test "x$ac_i"
   # 1. Remove the extension, and $U if already installed.
   ac_i=`echo "$ac_i" |
 	 sed 's/\$U\././;s/\.o$//;s/\.obj$//'`
-  # 2. Add them.
-  ac_libobjs="$ac_libobjs $ac_i\$U.$ac_objext"
-  ac_ltlibobjs="$ac_ltlibobjs $ac_i"'$U.lo'
+  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
+  #    will be set to the directory where LIBOBJS objects are built.
+  ac_libobjs="$ac_libobjs \${LIBOBJDIR}$ac_i\$U.$ac_objext"
+  ac_ltlibobjs="$ac_ltlibobjs \${LIBOBJDIR}$ac_i"'$U.lo'
 done
 LIBOBJS=$ac_libobjs
 
Index: bfd/configure.in
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/configure.in,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/configure.in	31 Jul 2007 11:39:34 -0000	1.1.1.1
+++ bfd/configure.in	8 Aug 2007 08:44:28 -0000	1.2
@@ -593,6 +593,7 @@ do
     bfd_elf32_d10v_vec)		tb="$tb elf32-d10v.lo elf32.lo $elf" ;;
     bfd_elf32_d30v_vec)		tb="$tb elf32-d30v.lo elf32.lo $elf" ;;
     bfd_elf32_dlx_big_vec)	tb="$tb elf32-dlx.lo elf32.lo $elf" ;;
+    bfd_elf32_brownie32_big_vec)	tb="$tb elf32-brownie32.lo elf32.lo $elf" ;;
     bfd_elf32_fr30_vec)		tb="$tb elf32-fr30.lo elf32.lo $elf" ;;
     bfd_elf32_frv_vec)		tb="$tb elf32-frv.lo elf32.lo $elf" ;;
     bfd_elf32_frvfdpic_vec)	tb="$tb elf32-frv.lo elf32.lo $elf" ;;
Index: bfd/cpu-brownie32.c
===================================================================
RCS file: bfd/cpu-brownie32.c
diff -N bfd/cpu-brownie32.c
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ bfd/cpu-brownie32.c	8 Aug 2007 08:44:28 -0000	1.1
@@ -0,0 +1,41 @@
+/* BFD support for the BROWNIE32 Microprocessor architecture.
+   Copyright 2002 Free Software Foundation, Inc.
+   Hacked by Kuang Hwa Lin <kuang@sbcglobal.net>
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+
+#include "bfd.h"
+#include "sysdep.h"
+#include "libbfd.h"
+
+
+const bfd_arch_info_type bfd_brownie32_arch =
+  {
+    32,	/* 32 bits in a word.  */
+    32,	/* 32 bits in an address.  */
+    8,	/* 8 bits in a byte.  */
+    bfd_arch_brownie32,
+    0,	/* Only 1 machine.  */
+    "brownie32",
+    "brownie32",
+    4,
+    TRUE, /* The one and only.  */
+    bfd_default_compatible,
+    bfd_default_scan ,
+    0,
+};
+
Index: bfd/elf32-brownie32.c
===================================================================
RCS file: bfd/elf32-brownie32.c
diff -N bfd/elf32-brownie32.c
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ bfd/elf32-brownie32.c	19 Oct 2007 10:51:40 -0000	1.2
@@ -0,0 +1,644 @@
+/* brownie32 specific support for 32-bit ELF
+   Copyright 2002, 2003, 2004, 2005 Free Software Foundation, Inc.
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+
+#include "bfd.h"
+#include "sysdep.h"
+#include "libbfd.h"
+#include "elf-bfd.h"
+#include "elf/brownie32.h"
+
+int    set_brownie32_skip_hi16_flag PARAMS ((int));
+
+static bfd_boolean elf32_brownie32_check_relocs
+  PARAMS ((bfd *, struct bfd_link_info *, asection *,
+	   const Elf_Internal_Rela *));
+static void elf32_brownie32_info_to_howto
+  PARAMS ((bfd *, arelent *, Elf_Internal_Rela *));
+static void elf32_brownie32_info_to_howto_rel
+  PARAMS ((bfd *, arelent *, Elf_Internal_Rela *));
+static bfd_reloc_status_type elf32_brownie32_relocate16
+  PARAMS ((bfd *, arelent *, asymbol *, PTR, asection *, bfd *, char **));
+static bfd_reloc_status_type elf32_brownie32_relocate26
+  PARAMS ((bfd *, arelent *, asymbol *, PTR, asection *, bfd *, char **));
+static reloc_howto_type *elf32_brownie32_reloc_type_lookup
+  PARAMS ((bfd *, bfd_reloc_code_real_type));
+static bfd_reloc_status_type _bfd_brownie32_elf_hi16_reloc
+  PARAMS ((bfd *, arelent *, asymbol *, PTR, asection *, bfd *, char **));
+static reloc_howto_type * brownie32_rtype_to_howto
+  PARAMS ((unsigned int));
+
+
+#define USE_REL 1
+
+#define bfd_elf32_bfd_reloc_type_lookup elf32_brownie32_reloc_type_lookup
+#define elf_info_to_howto               elf32_brownie32_info_to_howto
+#define elf_info_to_howto_rel           elf32_brownie32_info_to_howto_rel
+#define elf_backend_check_relocs        elf32_brownie32_check_relocs
+
+static reloc_howto_type brownie32_elf_howto_table[]=
+  {
+    /* No relocation.  */
+    HOWTO (R_BROWNIE32_NONE,            /* type */
+	   0,                     /* rightshift */
+	   0,                     /* size (0 = byte, 1 = short, 2 = long) */
+	   0,                     /* bitsize */
+	   FALSE,                 /* pc_relative */
+	   0,                     /* bitpos */
+	   complain_overflow_dont,/* complain_on_overflow */
+	   bfd_elf_generic_reloc, /* special_function */
+	   "R_BROWNIE32_NONE",          /* name */
+	   FALSE,                 /* partial_inplace */
+	   0,                     /* src_mask */
+	   0,                     /* dst_mask */
+	   FALSE),                /* pcrel_offset */
+
+    /* 8 bit relocation.  */
+    HOWTO (R_BROWNIE32_RELOC_8,         /* type */
+	   0,                     /* rightshift */
+	   0,                     /* size (0 = byte, 1 = short, 2 = long) */
+	   8,                     /* bitsize */
+	   FALSE,                 /* pc_relative */
+	   0,                     /* bitpos */
+	   complain_overflow_dont,/* complain_on_overflow */
+	   bfd_elf_generic_reloc, /* special_function */
+	   "R_BROWNIE32_RELOC_8",       /* name */
+	   TRUE,                  /* partial_inplace */
+	   0xff,                  /* src_mask */
+	   0xff,                  /* dst_mask */
+	   FALSE),                /* pcrel_offset */
+
+    /* 16 bit relocation.  */
+    HOWTO (R_BROWNIE32_RELOC_16,        /* type */
+	   0,                     /* rightshift */
+	   1,                     /* size (0 = byte, 1 = short, 2 = long) */
+	   16,                    /* bitsize */
+	   FALSE,                 /* pc_relative */
+	   0,                     /* bitpos */
+	   complain_overflow_dont,/* complain_on_overflow */
+	   bfd_elf_generic_reloc, /* special_function */
+	   "R_BROWNIE32_RELOC_16",      /* name */
+	   TRUE,                  /* partial_inplace */
+	   0xffff,                /* src_mask */
+	   0xffff,                /* dst_mask */
+	   FALSE),                /* pcrel_offset */
+
+    /* 32 bit relocation.  */
+    HOWTO (R_BROWNIE32_RELOC_32,        /* type */
+	   0,                     /* rightshift */
+	   2,                     /* size (0 = byte, 1 = short, 2 = long) */
+	   32,                    /* bitsize */
+	   FALSE,                 /* pc_relative */
+	   0,                     /* bitpos */
+	   complain_overflow_dont,/* complain_on_overflow */
+	   bfd_elf_generic_reloc, /* special_function */
+	   "R_BROWNIE32_RELOC_32",      /* name */
+	   TRUE,                  /* partial_inplace */
+	   0xffffffff,            /* src_mask */
+	   0xffffffff,            /* dst_mask */
+	   FALSE),                /* pcrel_offset */
+
+    /* GNU extension to record C++ vtable hierarchy */
+    HOWTO (R_BROWNIE32_GNU_VTINHERIT,   /* type */
+	   0,			  /* rightshift */
+	   2,			  /* size (0 = byte, 1 = short, 2 = long) */
+	   0,			  /* bitsize */
+	   FALSE,		  /* pc_relative */
+	   0,			  /* bitpos */
+	   complain_overflow_dont,/* complain_on_overflow */
+	   NULL,		  /* special_function */
+	   "R_BROWNIE32_GNU_VTINHERIT", /* name */
+	   FALSE,		  /* partial_inplace */
+	   0,			  /* src_mask */
+	   0,			  /* dst_mask */
+	   FALSE),		  /* pcrel_offset */
+
+    /* GNU extension to record C++ vtable member usage */
+    HOWTO (R_BROWNIE32_GNU_VTENTRY,     /* type */
+	   0,			  /* rightshift */
+	   2,			  /* size (0 = byte, 1 = short, 2 = long) */
+	   0,			  /* bitsize */
+	   FALSE,		  /* pc_relative */
+	   0,			  /* bitpos */
+	   complain_overflow_dont,/* complain_on_overflow */
+	   _bfd_elf_rel_vtable_reloc_fn,/* special_function */
+	   "R_BROWNIE32_GNU_VTENTRY",	  /* name */
+	   FALSE,		  /* partial_inplace */
+	   0,			  /* src_mask */
+	   0,			  /* dst_mask */
+	   FALSE)		  /* pcrel_offset */
+  };
+
+/* 16 bit offset for pc-relative branches.  */
+static reloc_howto_type elf_brownie32_gnu_rel16_s2 =
+HOWTO (R_BROWNIE32_RELOC_16_PCREL,  /* type */
+       0,                     /* rightshift */
+       1,                     /* size (0 = byte, 1 = short, 2 = long) */
+       16,                    /* bitsize */
+       TRUE,                  /* pc_relative */
+       0,                     /* bitpos */
+       complain_overflow_signed, /* complain_on_overflow */
+       elf32_brownie32_relocate16,  /* special_function */
+       "R_BROWNIE32_RELOC_16_PCREL",/* name */
+       TRUE,                  /* partial_inplace */
+       0xffff,                /* src_mask */
+       0xffff,                /* dst_mask */
+       TRUE);                 /* pcrel_offset */
+
+/* 26 bit offset for pc-relative branches.  */
+static reloc_howto_type elf_brownie32_gnu_rel26_s2 =
+HOWTO (R_BROWNIE32_RELOC_26_PCREL,  /* type */
+       0,                     /* rightshift */
+       2,                     /* size (0 = byte, 1 = short, 2 = long) */
+       26,                    /* bitsize */
+       TRUE,                  /* pc_relative */
+       0,                     /* bitpos */
+       complain_overflow_dont,/* complain_on_overflow */
+       elf32_brownie32_relocate26,  /* special_function */
+       "R_BROWNIE32_RELOC_26_PCREL",/* name */
+       TRUE,                  /* partial_inplace */
+       0xffff,                /* src_mask */
+       0xffff,                /* dst_mask */
+       TRUE);                 /* pcrel_offset */
+
+/* High 16 bits of symbol value.  */
+static reloc_howto_type elf_brownie32_reloc_16_hi =
+HOWTO (R_BROWNIE32_RELOC_16_HI,     /* type */
+       16,                    /* rightshift */
+       2,                     /* size (0 = byte, 1 = short, 2 = long) */
+       32,                    /* bitsize */
+       FALSE,                 /* pc_relative */
+       0,                     /* bitpos */
+       complain_overflow_dont, /* complain_on_overflow */
+       _bfd_brownie32_elf_hi16_reloc,/* special_function */
+       "R_BROWNIE32_RELOC_16_HI",   /* name */
+       TRUE,                  /* partial_inplace */
+       0xFFFF,                /* src_mask */
+       0xffff,                /* dst_mask */
+       FALSE);                /* pcrel_offset */
+
+  /* Low 16 bits of symbol value.  */
+static reloc_howto_type elf_brownie32_reloc_16_lo =
+HOWTO (R_BROWNIE32_RELOC_16_LO,     /* type */
+       0,                     /* rightshift */
+       1,                     /* size (0 = byte, 1 = short, 2 = long) */
+       16,                    /* bitsize */
+       FALSE,                 /* pc_relative */
+       0,                     /* bitpos */
+       complain_overflow_dont,/* complain_on_overflow */
+       bfd_elf_generic_reloc, /* special_function */
+       "R_BROWNIE32_RELOC_16_LO",   /* name */
+       TRUE,                  /* partial_inplace */
+       0xffff,                /* src_mask */
+       0xffff,                /* dst_mask */
+       FALSE);                /* pcrel_offset */
+
+
+/* The gas default behavior is not to preform the %hi modifier so that the
+   GNU assembler can have the lower 16 bits offset placed in the insn, BUT
+   we do like the gas to indicate it is %hi reloc type so when we in the link
+   loader phase we can have the corrected hi16 vale replace the buggous lo16
+   value that was placed there by gas.  */
+
+static int skip_brownie32_elf_hi16_reloc = 0;
+
+int
+set_brownie32_skip_hi16_flag (flag)
+     int flag;
+{
+  skip_brownie32_elf_hi16_reloc = flag;
+  return flag;
+}
+
+static bfd_reloc_status_type
+_bfd_brownie32_elf_hi16_reloc (abfd, reloc_entry, symbol, data,
+			 input_section, output_bfd, error_message)
+     bfd *abfd;
+     arelent *reloc_entry;
+     asymbol *symbol;
+     PTR data;
+     asection *input_section;
+     bfd *output_bfd;
+     char **error_message;
+{
+  bfd_reloc_status_type ret;
+  bfd_vma relocation;
+
+  /* If the skip flag is set then we simply do the generic relocating, this
+     is more of a hack for brownie32 gas/gld, so we do not need to do the %hi/%lo
+     fixup like mips gld did.   */
+
+
+//
+// AO_comment comment out for brownie32
+  if (skip_brownie32_elf_hi16_reloc)
+    return bfd_elf_generic_reloc (abfd, reloc_entry, symbol, data,
+                          input_section, output_bfd, error_message);
+
+
+ /* If we're relocating, and this an external symbol, we don't want
+     to change anything.  */
+  if (output_bfd != (bfd *) NULL
+      && (symbol->flags & BSF_SECTION_SYM) == 0
+      && reloc_entry->addend == 0)
+    {
+      reloc_entry->address += input_section->output_offset;
+      return bfd_reloc_ok;
+    }
+
+  ret = bfd_reloc_ok;
+
+  if (bfd_is_und_section (symbol->section)
+      && output_bfd == (bfd *) NULL)
+    ret = bfd_reloc_undefined;
+
+  relocation = (bfd_is_com_section (symbol->section)) ? 0 : symbol->value;
+  relocation += symbol->section->output_section->vma;
+  relocation += symbol->section->output_offset;
+  relocation += reloc_entry->addend;
+  relocation += bfd_get_signed_16 (abfd, (bfd_byte *)data + reloc_entry->address+4);
+
+  if (reloc_entry->address > bfd_get_section_limit (abfd, input_section))
+    return bfd_reloc_outofrange;
+
+  bfd_put_16 (abfd, (short)((relocation >> 16) & 0xFFFF),
+              (bfd_byte *)data + reloc_entry->address);
+
+  return ret;
+}
+
+/* ELF relocs are against symbols.  If we are producing relocatable
+   output, and the reloc is against an external symbol, and nothing
+   has given us any additional addend, the resulting reloc will also
+   be against the same symbol.  In such a case, we don't want to
+   change anything about the way the reloc is handled, since it will
+   all be done at final link time.  Rather than put special case code
+   into bfd_perform_relocation, all the reloc types use this howto
+   function.  It just short circuits the reloc if producing
+   relocatable output against an external symbol.  */
+
+static bfd_reloc_status_type
+elf32_brownie32_relocate16  (abfd, reloc_entry, symbol, data,
+                       input_section, output_bfd, error_message)
+     bfd *abfd;
+     arelent *reloc_entry;
+     asymbol *symbol;
+     PTR data;
+     asection *input_section;
+     bfd *output_bfd;
+     char **error_message ATTRIBUTE_UNUSED;
+{
+  unsigned long insn, vallo, allignment;
+  int           val;
+
+  /* HACK: I think this first condition is necessary when producing
+     relocatable output.  After the end of HACK, the code is identical
+     to abfd_elf_generic_reloc().  I would _guess_ the first change
+     belongs there rather than here.  martindo 1998-10-23.  */
+
+  if (skip_brownie32_elf_hi16_reloc)
+    return bfd_elf_generic_reloc (abfd, reloc_entry, symbol, data,
+                                 input_section, output_bfd, error_message);
+
+  /* Check undefined section and undefined symbols  */
+  if (bfd_is_und_section (symbol->section)
+      && output_bfd == (bfd *) NULL)
+    return bfd_reloc_undefined;
+
+  /* Can not support a long jump to sections other then .text   */
+  if (strcmp (input_section->name, symbol->section->output_section->name) != 0)
+    {
+      fprintf (stderr,
+	       "BFD Link Error: branch (PC rel16) to section (%s) not supported\n",
+	       symbol->section->output_section->name);
+      return bfd_reloc_undefined;
+    }
+
+  insn  = bfd_get_32 (abfd, (bfd_byte *)data + reloc_entry->address);
+  allignment = 1 << (input_section->output_section->alignment_power - 1);
+
+
+// AO_debug
+//   printf("Debug Rol16_a vallo = %x\n",vallo);
+
+
+// AO_comment
+//  vallo = insn & 0x0000FFFF;
+    vallo = ( insn & 0xFFFF0000 ) >> 16 ;
+
+
+// AO_debug
+//   printf("Debug Rol16_b vallo = %x\n",vallo);
+
+
+  if (vallo & 0x8000)
+    vallo = ~(vallo | 0xFFFF0000) + 1;
+
+
+  /* vallo points to the vma of next instruction.  */
+  vallo += (((unsigned long)(input_section->output_section->vma +
+                           input_section->output_offset) +
+            allignment) & ~allignment);
+
+  /* val is the displacement (PC relative to next instruction).  */
+  val =  (symbol->section->output_offset +
+	  symbol->section->output_section->vma +
+	  symbol->value) - vallo;
+
+
+// AO_debug
+//   printf("Debug Rol16 val = %x\n",vallo);
+
+
+
+  if (abs ((int) val) > 0x00007FFF)
+    return bfd_reloc_outofrange;
+
+
+// AO_comment
+//  insn  = (insn & 0xFFFF0000) | (val & 0x0000FFFF);
+    insn  = (insn & 0x0000FFFF) | ( (val & 0x0000FFFF) << 16 );
+
+
+  bfd_put_32 (abfd, insn,
+              (bfd_byte *) data + reloc_entry->address);
+
+  return bfd_reloc_ok;
+}
+
+static bfd_reloc_status_type
+elf32_brownie32_relocate26  (abfd, reloc_entry, symbol, data,
+                       input_section, output_bfd, error_message)
+     bfd *abfd;
+     arelent *reloc_entry;
+     asymbol *symbol;
+     PTR data;
+     asection *input_section;
+     bfd *output_bfd;
+     char **error_message ATTRIBUTE_UNUSED;
+{
+  unsigned long insn, vallo, allignment;
+  int           val;
+
+  /* HACK: I think this first condition is necessary when producing
+     relocatable output.  After the end of HACK, the code is identical
+     to bfd_elf_generic_reloc().  I would _guess_ the first change
+     belongs there rather than here.  martindo 1998-10-23.  */
+
+  if (skip_brownie32_elf_hi16_reloc)
+    return bfd_elf_generic_reloc (abfd, reloc_entry, symbol, data,
+                                 input_section, output_bfd, error_message);
+
+  /* Check undefined section and undefined symbols.  */
+  if (bfd_is_und_section (symbol->section)
+      && output_bfd == (bfd *) NULL)
+    return bfd_reloc_undefined;
+
+  /* Can not support a long jump to sections other then .text   */
+  if (strcmp (input_section->name, symbol->section->output_section->name) != 0)
+    {
+      fprintf (stderr,
+	       "BFD Link Error: jump (PC rel26) to section (%s) not supported\n",
+	       symbol->section->output_section->name);
+      return bfd_reloc_undefined;
+    }
+
+  insn  = bfd_get_32 (abfd, (bfd_byte *)data + reloc_entry->address);
+  allignment = 1 << (input_section->output_section->alignment_power - 1);
+
+
+// AO_comment
+//    vallo = insn & 0x03FFFFFF;
+//      vallo = ( insn & 0xFFFFFFC0 ) >> 6;
+      vallo = (long)insn >> 6;        //C.Katano
+
+
+// AO_debug
+//   printf("Debug Rol26_a vallo = %x\n",vallo);
+
+
+//  if (vallo & 0x03000000)
+  if (vallo & 0x02000000)  //C.Katano
+    vallo = ~(vallo | 0xFC000000) + 1;
+
+
+  /* vallo is the vma for the next instruction.  */
+  vallo += (((unsigned long) (input_section->output_section->vma +
+			      input_section->output_offset) +
+	     allignment) & ~allignment);
+
+
+
+// AO_debug
+//   printf("Debug Rol26_b vallo = %x\n",vallo);
+
+
+
+  /* val is the displacement (PC relative to next instruction).  */
+  val = (symbol->section->output_offset +
+	 symbol->section->output_section->vma + symbol->value)
+    - vallo;
+
+  if (abs ((int) val) > 0x01FFFFFF)
+    return bfd_reloc_outofrange;
+
+
+// AO_debug
+//   printf("Debug Rol26  val = %x\n",vallo);
+
+
+// AO_comment
+//  insn  = (insn & 0xFC000000) | (val & 0x03FFFFFF);
+//    insn  = (insn & 0x0000003F) | ( (val & 0x3CFFFFFF ) << 6 ); //Katano
+    insn  = (insn & 0x0000003F) | (val << 6 ); //Katano
+
+
+
+  bfd_put_32 (abfd, insn,
+              (bfd_byte *) data + reloc_entry->address);
+
+  return bfd_reloc_ok;
+}
+
+/* A mapping from BFD reloc types to BROWNIE32 ELF reloc types.
+   Stolen from elf32-mips.c.
+
+   More about this table - for brownie32 elf relocation we do not really
+   need this table, if we have a rtype defined in this table will
+   caused tc_gen_relocate confused and die on us, but if we remove
+   this table it will caused more problem, so for now simple solution
+   is to remove those entries which may cause problem.  */
+struct elf_reloc_map
+{
+  bfd_reloc_code_real_type bfd_reloc_val;
+  enum elf_brownie32_reloc_type elf_reloc_val;
+};
+
+static const struct elf_reloc_map brownie32_reloc_map[] =
+  {
+    { BFD_RELOC_NONE,           R_BROWNIE32_NONE },
+    { BFD_RELOC_16,             R_BROWNIE32_RELOC_16 },
+    { BFD_RELOC_32,             R_BROWNIE32_RELOC_32 },
+    { BFD_RELOC_BROWNIE32_HI16_S,     R_BROWNIE32_RELOC_16_HI },
+    { BFD_RELOC_BROWNIE32_LO16,       R_BROWNIE32_RELOC_16_LO },
+    { BFD_RELOC_VTABLE_INHERIT,	R_BROWNIE32_GNU_VTINHERIT },
+    { BFD_RELOC_VTABLE_ENTRY,	R_BROWNIE32_GNU_VTENTRY }
+  };
+
+
+/* Look through the relocs for a section during the first phase.
+   Since we don't do .gots or .plts, we just need to consider the
+   virtual table relocs for gc.  */
+
+static bfd_boolean
+elf32_brownie32_check_relocs (abfd, info, sec, relocs)
+     bfd *abfd;
+     struct bfd_link_info *info;
+     asection *sec;
+     const Elf_Internal_Rela *relocs;
+{
+  Elf_Internal_Shdr *symtab_hdr;
+  struct elf_link_hash_entry **sym_hashes, **sym_hashes_end;
+  const Elf_Internal_Rela *rel;
+  const Elf_Internal_Rela *rel_end;
+
+  if (info->relocatable)
+    return TRUE;
+
+  symtab_hdr = &elf_tdata (abfd)->symtab_hdr;
+  sym_hashes = elf_sym_hashes (abfd);
+  sym_hashes_end = sym_hashes + symtab_hdr->sh_size / sizeof (Elf32_External_Sym);
+  if (!elf_bad_symtab (abfd))
+    sym_hashes_end -= symtab_hdr->sh_info;
+
+  rel_end = relocs + sec->reloc_count;
+  for (rel = relocs; rel < rel_end; rel++)
+    {
+      struct elf_link_hash_entry *h;
+      unsigned long r_symndx;
+
+      r_symndx = ELF32_R_SYM (rel->r_info);
+      if (r_symndx < symtab_hdr->sh_info)
+        h = NULL;
+      else
+        h = sym_hashes[r_symndx - symtab_hdr->sh_info];
+
+      switch (ELF32_R_TYPE (rel->r_info))
+        {
+        /* This relocation describes the C++ object vtable hierarchy.
+           Reconstruct it for later use during GC.  */
+        case R_BROWNIE32_GNU_VTINHERIT:
+          if (!bfd_elf_gc_record_vtinherit (abfd, sec, h, rel->r_offset))
+            return FALSE;
+          break;
+
+        /* This relocation describes which C++ vtable entries are actually
+           used.  Record for later use during GC.  */
+        case R_BROWNIE32_GNU_VTENTRY:
+          if (!bfd_elf_gc_record_vtentry (abfd, sec, h, rel->r_addend))
+            return FALSE;
+          break;
+        }
+    }
+
+  return TRUE;
+}
+
+/* Given a BFD reloc type, return a howto structure.  */
+
+static reloc_howto_type *
+elf32_brownie32_reloc_type_lookup (abfd, code)
+     bfd *abfd ATTRIBUTE_UNUSED;
+     bfd_reloc_code_real_type code;
+{
+  unsigned int i;
+
+  for (i = 0; i < sizeof (brownie32_reloc_map) / sizeof (struct elf_reloc_map); i++)
+    if (brownie32_reloc_map[i].bfd_reloc_val == code)
+      return &brownie32_elf_howto_table[(int) brownie32_reloc_map[i].elf_reloc_val];
+
+  switch (code)
+    {
+    default:
+      bfd_set_error (bfd_error_bad_value);
+      return NULL;
+    case BFD_RELOC_16_PCREL_S2:
+      return &elf_brownie32_gnu_rel16_s2;
+    case BFD_RELOC_BROWNIE32_JMP26:
+      return &elf_brownie32_gnu_rel26_s2;
+    case BFD_RELOC_HI16_S:
+      return &elf_brownie32_reloc_16_hi;
+    case BFD_RELOC_LO16:
+      return &elf_brownie32_reloc_16_lo;
+    }
+}
+
+static reloc_howto_type *
+brownie32_rtype_to_howto (r_type)
+     unsigned int r_type;
+{
+  switch (r_type)
+    {
+    case R_BROWNIE32_RELOC_16_PCREL:
+      return & elf_brownie32_gnu_rel16_s2;
+      break;
+    case R_BROWNIE32_RELOC_26_PCREL:
+      return & elf_brownie32_gnu_rel26_s2;
+      break;
+    case R_BROWNIE32_RELOC_16_HI:
+      return & elf_brownie32_reloc_16_hi;
+      break;
+    case R_BROWNIE32_RELOC_16_LO:
+      return & elf_brownie32_reloc_16_lo;
+      break;
+    default:
+      BFD_ASSERT (r_type < (unsigned int) R_BROWNIE32_max);
+      return & brownie32_elf_howto_table[r_type];
+      break;
+    }
+}
+
+static void
+elf32_brownie32_info_to_howto (abfd, cache_ptr, dst)
+     bfd * abfd ATTRIBUTE_UNUSED;
+     arelent * cache_ptr ATTRIBUTE_UNUSED;
+     Elf_Internal_Rela * dst ATTRIBUTE_UNUSED;
+{
+  abort ();
+}
+
+static void
+elf32_brownie32_info_to_howto_rel (abfd, cache_ptr, dst)
+     bfd *abfd ATTRIBUTE_UNUSED;
+     arelent *cache_ptr;
+     Elf_Internal_Rela *dst;
+{
+  unsigned int r_type;
+
+  r_type = ELF32_R_TYPE (dst->r_info);
+  cache_ptr->howto = brownie32_rtype_to_howto (r_type);
+  return;
+}
+
+#define TARGET_BIG_SYM          bfd_elf32_brownie32_big_vec
+#define TARGET_BIG_NAME         "elf32-brownie32"
+#define ELF_ARCH                bfd_arch_brownie32
+#define ELF_MACHINE_CODE        EM_BROWNIE32
+#define ELF_MAXPAGESIZE         1 /* FIXME: This number is wrong,  It should be the page size in bytes.  */
+
+#include "elf32-target.h"
Index: bfd/libbfd.h
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/libbfd.h,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/libbfd.h	31 Jul 2007 11:39:34 -0000	1.1.1.1
+++ bfd/libbfd.h	8 Aug 2007 08:44:28 -0000	1.2
@@ -1291,6 +1291,9 @@ static const char *const bfd_reloc_code_
   "BFD_RELOC_DLX_HI16_S",
   "BFD_RELOC_DLX_LO16",
   "BFD_RELOC_DLX_JMP26",
+  "BFD_RELOC_BROWNIE32_HI16_S",
+  "BFD_RELOC_BROWNIE32_LO16",
+  "BFD_RELOC_BROWNIE32_JMP26",
   "BFD_RELOC_M32R_24",
   "BFD_RELOC_M32R_10_PCREL",
   "BFD_RELOC_M32R_18_PCREL",
Index: bfd/reloc.c
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/reloc.c,v
retrieving revision 1.1.1.1
retrieving revision 1.3
diff -u -p -r1.1.1.1 -r1.3
--- bfd/reloc.c	31 Jul 2007 11:39:37 -0000	1.1.1.1
+++ bfd/reloc.c	24 Feb 2008 15:49:59 -0000	1.3
@@ -3011,6 +3011,19 @@ ENUMDOC
   DLX relocs
 
 ENUM
+  BFD_RELOC_BROWNIE32_HI16_S
+ENUMDOC
+  BROWNIE32 relocs
+ENUM
+  BFD_RELOC_BROWNIE32_LO16
+ENUMDOC
+  BROWNIE32 relocs
+ENUM
+  BFD_RELOC_BROWNIE32_JMP26
+ENUMDOC
+  BROWNIE32 relocs
+
+ENUM
   BFD_RELOC_M32R_24
 ENUMDOC
   Renesas M32R (formerly Mitsubishi M32R) relocs.
Index: bfd/targets.c
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/targets.c,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/targets.c	31 Jul 2007 11:39:34 -0000	1.1.1.1
+++ bfd/targets.c	8 Aug 2007 08:44:28 -0000	1.2
@@ -551,7 +551,10 @@ extern const bfd_target bfd_elf32_cris_v
 extern const bfd_target bfd_elf32_crx_vec;
 extern const bfd_target bfd_elf32_d10v_vec;
 extern const bfd_target bfd_elf32_d30v_vec;
+
 extern const bfd_target bfd_elf32_dlx_big_vec;
+extern const bfd_target bfd_elf32_brownie32_big_vec;
+
 extern const bfd_target bfd_elf32_fr30_vec;
 extern const bfd_target bfd_elf32_frv_vec;
 extern const bfd_target bfd_elf32_frvfdpic_vec;
@@ -850,7 +853,10 @@ static const bfd_target * const _bfd_tar
 	&bfd_elf32_crx_vec,
 	&bfd_elf32_d10v_vec,
 	&bfd_elf32_d30v_vec,
+
 	&bfd_elf32_dlx_big_vec,
+	&bfd_elf32_brownie32_big_vec,
+
 	&bfd_elf32_fr30_vec,
 	&bfd_elf32_frv_vec,
 	&bfd_elf32_frvfdpic_vec,
Index: bfd/doc/Makefile.in
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/doc/Makefile.in,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/doc/Makefile.in	31 Jul 2007 11:39:37 -0000	1.1.1.1
+++ bfd/doc/Makefile.in	8 Aug 2007 08:44:28 -0000	1.2
@@ -1,4 +1,4 @@
-# Makefile.in generated by automake 1.9.5 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
@@ -36,6 +36,7 @@ POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
 target_triplet = @target@
+LIBOBJDIR =
 subdir = doc
 DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -360,9 +361,11 @@ distclean-libtool:
 	restore=: && backupdir="$(am__leading_dot)am$$$$" && \
 	am__cwd=`pwd` && cd $(srcdir) && \
 	rm -rf $$backupdir && mkdir $$backupdir && \
-	for f in $@ $@-[0-9] $@-[0-9][0-9] $(@:.info=).i[0-9] $(@:.info=).i[0-9][0-9]; do \
-	  if test -f $$f; then mv $$f $$backupdir; restore=mv; else :; fi; \
-	done; \
+	if ($(MAKEINFO) --version) >/dev/null 2>&1; then \
+	  for f in $@ $@-[0-9] $@-[0-9][0-9] $(@:.info=).i[0-9] $(@:.info=).i[0-9][0-9]; do \
+	    if test -f $$f; then mv $$f $$backupdir; restore=mv; else :; fi; \
+	  done; \
+	else :; fi && \
 	cd "$$am__cwd"; \
 	if $(MAKEINFO) $(AM_MAKEINFOFLAGS) $(MAKEINFOFLAGS) -I $(srcdir) \
 	 -o $@ $<; \
@@ -404,6 +407,7 @@ bfd.dvi: bfd.texinfo 
 bfd.pdf: bfd.texinfo 
 bfd.html: bfd.texinfo 
 .dvi.ps:
+	TEXINPUTS="$(am__TEXINFO_TEX_DIR)$(PATH_SEPARATOR)$$TEXINPUTS" \
 	$(DVIPS) -o $@ $<
 
 uninstall-info-am:
Index: bfd/doc/archures.texi
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/doc/archures.texi,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/doc/archures.texi	31 Jul 2007 11:39:37 -0000	1.1.1.1
+++ bfd/doc/archures.texi	8 Aug 2007 08:44:28 -0000	1.2
@@ -185,7 +185,10 @@ enum bfd_architecture
 #define bfd_mach_d10v_ts2      2
 #define bfd_mach_d10v_ts3      3
   bfd_arch_d30v,      /* Mitsubishi D30V */
+
   bfd_arch_dlx,       /* DLX */
+  bfd_arch_brownie32,       /* BROWNIE32 */
+
   bfd_arch_m68hc11,   /* Motorola 68HC11 */
   bfd_arch_m68hc12,   /* Motorola 68HC12 */
 #define bfd_mach_m6812_default 0
Index: bfd/doc/reloc.texi
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/doc/reloc.texi,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/doc/reloc.texi	31 Jul 2007 11:39:37 -0000	1.1.1.1
+++ bfd/doc/reloc.texi	8 Aug 2007 08:44:28 -0000	1.2
@@ -1309,15 +1309,28 @@ This is a 32-bit absolute reloc.
 @deffn {} BFD_RELOC_D30V_32_PCREL
 This is a 32-bit pc-relative reloc.
 @end deffn
+
 @deffn {} BFD_RELOC_DLX_HI16_S
 DLX relocs
 @end deffn
+@deffn {} BFD_RELOC_BROWNIE32_HI16_S
+BROWNIE32 relocs
+@end deffn
+
 @deffn {} BFD_RELOC_DLX_LO16
 DLX relocs
 @end deffn
+@deffn {} BFD_RELOC_BROWNIE32_LO16
+DLX relocs
+@end deffn
+
 @deffn {} BFD_RELOC_DLX_JMP26
 DLX relocs
 @end deffn
+@deffn {} BFD_RELOC_BROWNIE32_JMP26
+BROWNIE32 relocs
+@end deffn
+
 @deffn {} BFD_RELOC_M32R_24
 Renesas M32R (formerly Mitsubishi M32R) relocs.
 This is a 24 bit absolute address.
Index: bfd/po/SRC-POTFILES.in
===================================================================
RCS file: /home/prj/asip/cvs/binutils/bfd/po/SRC-POTFILES.in,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- bfd/po/SRC-POTFILES.in	31 Jul 2007 11:39:37 -0000	1.1.1.1
+++ bfd/po/SRC-POTFILES.in	8 Aug 2007 08:44:28 -0000	1.2
@@ -71,7 +71,10 @@ cpu-cris.c
 cpu-crx.c
 cpu-d10v.c
 cpu-d30v.c
+
 cpu-dlx.c
+cpu-brownie32.c
+
 cpu-fr30.c
 cpu-frv.c
 cpu-h8300.c
@@ -135,7 +138,10 @@ elf32-cris.c
 elf32-crx.c
 elf32-d10v.c
 elf32-d30v.c
+
 elf32-dlx.c
+elf32-brownie32.c
+
 elf32-fr30.c
 elf32-frv.c
 elf32-gen.c
Index: binutils/Makefile.am
===================================================================
RCS file: /home/prj/asip/cvs/binutils/binutils/Makefile.am,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- binutils/Makefile.am	31 Jul 2007 11:39:32 -0000	1.1.1.1
+++ binutils/Makefile.am	8 Aug 2007 08:44:28 -0000	1.2
@@ -468,6 +468,7 @@ readelf.o: readelf.c ../bfd/bfd.h $(INCD
   $(INCDIR)/elf/reloc-macros.h $(INCDIR)/elf/arc.h $(INCDIR)/elf/arm.h \
   $(INCDIR)/elf/avr.h $(INCDIR)/elf/cris.h $(INCDIR)/elf/d10v.h \
   $(INCDIR)/elf/d30v.h $(INCDIR)/elf/dlx.h $(INCDIR)/elf/fr30.h \
+  $(INCDIR)/elf/d30v.h $(INCDIR)/elf/brownie32.h $(INCDIR)/elf/fr30.h \
   $(INCDIR)/elf/frv.h $(INCDIR)/elf/h8.h $(INCDIR)/elf/hppa.h \
   $(INCDIR)/elf/i386.h $(INCDIR)/elf/i370.h $(INCDIR)/elf/i860.h \
   $(INCDIR)/elf/i960.h $(INCDIR)/elf/ia64.h $(INCDIR)/elf/ip2k.h \
Index: binutils/readelf.c
===================================================================
RCS file: /home/prj/asip/cvs/binutils/binutils/readelf.c,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- binutils/readelf.c	31 Jul 2007 11:39:32 -0000	1.1.1.1
+++ binutils/readelf.c	8 Aug 2007 08:44:28 -0000	1.2
@@ -75,7 +75,10 @@
 #include "elf/cris.h"
 #include "elf/d10v.h"
 #include "elf/d30v.h"
+
 #include "elf/dlx.h"
+#include "elf/brownie32.h"
+
 #include "elf/fr30.h"
 #include "elf/frv.h"
 #include "elf/h8.h"
@@ -676,6 +679,7 @@ guess_is_rela (unsigned long e_machine)
     case EM_486:
     case EM_960:
     case EM_DLX:
+    case EM_BROWNIE32:
     case EM_OPENRISC:
     case EM_OR32:
     case EM_CYGNUS_M32R:
@@ -1097,6 +1101,10 @@ dump_relocations (FILE *file,
 	  rtype = elf_dlx_reloc_type (type);
 	  break;
 
+	case EM_BROWNIE32:
+	  rtype = elf_brownie32_reloc_type (type);
+	  break;
+
 	case EM_SH:
 	  rtype = elf_sh_reloc_type (type);
 	  break;
@@ -1714,7 +1722,10 @@ get_machine_name (unsigned e_machine)
     case EM_OPENRISC:
     case EM_OR32:		return "OpenRISC";
     case EM_CRX:		return "National Semiconductor CRX microprocessor";
+
     case EM_DLX:		return "OpenDLX";
+    case EM_BROWNIE32:		return "OpenBROWNIE32";
+
     case EM_IP2K_OLD:
     case EM_IP2K:		return "Ubicom IP2xxx 8-bit microcontrollers";
     case EM_IQ2000:       	return "Vitesse IQ2000";
Index: binutils/po/POTFILES.in
===================================================================
RCS file: /home/prj/asip/cvs/binutils/binutils/po/POTFILES.in,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- binutils/po/POTFILES.in	31 Jul 2007 11:39:33 -0000	1.1.1.1
+++ binutils/po/POTFILES.in	8 Aug 2007 08:44:28 -0000	1.2
@@ -1,60 +1,221 @@
-addr2line.c
-ar.c
-arsup.c
-arsup.h
-binemul.c
-binemul.h
-bucomm.c
-bucomm.h
-budbg.h
-budemang.c
-budemang.h
-coffdump.c
-coffgrok.c
-coffgrok.h
-cxxfilt.c
-debug.c
-debug.c
-debug.h
-dlltool.c
-dlltool.h
-dllwrap.c
-emul_aix.c
-emul_vanilla.c
-filemode.c
-ieee.c
-ieee.c
-is-ranlib.c
-is-strip.c
-maybe-ranlib.c
-maybe-strip.c
-nlmconv.c
-nlmconv.h
-nm.c
-not-ranlib.c
-not-strip.c
-objcopy.c
-objdump.c
-prdbg.c
-rdcoff.c
-rdcoff.c
-rddbg.c
-rddbg.c
-readelf.c
-rename.c
-resbin.c
-rescoff.c
-resrc.c
-resres.c
-size.c
-srconv.c
+app.c
+app.c
+as.c
+as.c
+as.h
+asintl.h
+atof-generic.c
+atof-generic.c
+bignum-copy.c
+bignum-copy.c
+bignum.h
+bit_fix.h
+cgen.h
+cond.c
+cond.c
+config/e-crisaout.c
+config/e-criself.c
+config/e-i386aout.c
+config/e-i386coff.c
+config/e-i386elf.c
+config/e-mipsecoff.c
+config/e-mipself.c
+config/obj-aout.c
+config/obj-aout.h
+config/obj-bout.c
+config/obj-bout.h
+config/obj-coff.c
+config/obj-coff.h
+config/obj-ecoff.c
+config/obj-ecoff.h
+config/obj-elf.c
+config/obj-elf.h
+config/obj-evax.c
+config/obj-evax.h
+config/obj-hp300.c
+config/obj-hp300.h
+config/obj-ieee.c
+config/obj-ieee.h
+config/obj-som.c
+config/obj-som.h
+config/obj-vms.c
+config/obj-vms.h
+config/tc-a29k.c
+config/tc-a29k.h
+config/tc-alpha.c
+config/tc-alpha.h
+config/tc-arc.c
+config/tc-arc.h
+config/tc-arm.c
+config/tc-arm.h
+config/tc-avr.c
+config/tc-avr.h
+config/tc-cris.c
+config/tc-cris.h
+config/tc-crx.c
+config/tc-crx.h
+config/tc-d10v.c
+config/tc-d10v.h
+config/tc-d30v.c
+config/tc-d30v.h
+
+config/tc-dlx.c
+config/tc-brownie32.c
+
+config/tc-dlx.h
+config/tc-brownie32.h
+
+config/tc-fr30.c
+config/tc-fr30.h
+config/tc-frv.c
+config/tc-frv.h
+config/tc-h8300.c
+config/tc-h8300.h
+config/tc-h8500.c
+config/tc-h8500.h
+config/tc-hppa.c
+config/tc-hppa.h
+config/tc-i370.c
+config/tc-i370.h
+config/tc-i386.c
+config/tc-i386.h
+config/tc-i860.c
+config/tc-i860.h
+config/tc-i960.c
+config/tc-i960.h
+config/tc-ia64.c
+config/tc-ia64.h
+config/tc-ip2k.c
+config/tc-ip2k.h
+config/tc-m32r.c
+config/tc-m32r.h
+config/tc-m68hc11.c
+config/tc-m68hc11.h
+config/tc-m68k.c
+config/tc-m68k.h
+config/tc-m88k.c
+config/tc-m88k.h
+config/tc-mcore.c
+config/tc-mcore.h
+config/tc-mips.c
+config/tc-mips.h
+config/tc-mmix.c
+config/tc-mmix.h
+config/tc-mn10200.c
+config/tc-mn10200.h
+config/tc-mn10300.c
+config/tc-mn10300.h
+config/tc-msp430.c
+config/tc-msp430.h
+config/tc-ns32k.c
+config/tc-ns32k.h
+config/tc-openrisc.c
+config/tc-openrisc.h
+config/tc-or32.c
+config/tc-or32.h
+config/tc-pdp11.c
+config/tc-pdp11.h
+config/tc-pj.c
+config/tc-pj.h
+config/tc-ppc.c
+config/tc-ppc.h
+config/tc-s390.c
+config/tc-s390.h
+config/tc-sh64.c
+config/tc-sh64.h
+config/tc-sh.c
+config/tc-sh.h
+config/tc-sparc.c
+config/tc-sparc.h
+config/tc-tahoe.c
+config/tc-tahoe.h
+config/tc-tic30.c
+config/tc-tic30.h
+config/tc-tic54x.c
+config/tc-tic54x.h
+config/tc-tic80.c
+config/tc-tic80.h
+config/tc-v850.c
+config/tc-v850.h
+config/tc-vax.c
+config/tc-vax.h
+config/tc-w65.c
+config/tc-w65.h
+config/tc-xstormy16.c
+config/tc-xstormy16.h
+config/tc-xtensa.c
+config/tc-xtensa.h
+config/tc-z8k.c
+config/tc-z8k.h
+depend.c
+depend.c
+dw2gencfi.c
+dw2gencfi.c
+dw2gencfi.h
+dwarf2dbg.c
+dwarf2dbg.c
+dwarf2dbg.h
+ecoff.c
+ecoff.c
+ecoff.h
+ehopt.c
+ehopt.c
+emul.h
+emul-target.h
+expr.c
+expr.c
+expr.h
+flonum-copy.c
+flonum-copy.c
+flonum.h
+flonum-konst.c
+flonum-konst.c
+flonum-mult.c
+flonum-mult.c
+frags.c
+frags.c
+frags.h
+hash.c
+hash.c
+hash.h
+input-file.c
+input-file.c
+input-file.h
+input-scrub.c
+input-scrub.c
+itbl-lex.h
+itbl-ops.c
+itbl-ops.h
+listing.c
+listing.c
+listing.h
+literal.c
+literal.c
+macro.c
+macro.c
+macro.h
+messages.c
+messages.c
+obj.h
+output-file.c
+output-file.c
+output-file.h
+read.c
+read.c
+read.h
+sb.c
+sb.c
+sb.h
 stabs.c
 stabs.c
-strings.c
-sysdump.c
-version.c
-windres.c
-windres.h
-winduni.c
-winduni.h
-wrstabs.c
+struc-symbol.h
+subsegs.c
+subsegs.c
+subsegs.h
+symbols.c
+symbols.c
+symbols.h
+tc.h
+write.c
+write.c
+write.h
Index: gas/Makefile.am
===================================================================
RCS file: /home/prj/asip/cvs/binutils/gas/Makefile.am,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- gas/Makefile.am	31 Jul 2007 11:39:31 -0000	1.1.1.1
+++ gas/Makefile.am	8 Aug 2007 08:44:28 -0000	1.2
@@ -1090,10 +1090,18 @@ DEPTC_dlx_coff = $(INCDIR)/safe-ctype.h 
   $(srcdir)/config/obj-coff.h $(srcdir)/config/tc-dlx.h \
   $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h \
   $(INCDIR)/opcode/dlx.h
+DEPTC_brownie32_coff = $(INCDIR)/safe-ctype.h $(INCDIR)/symcat.h \
+  $(srcdir)/config/obj-coff.h $(srcdir)/config/tc-brownie32.h \
+  $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h \
+  $(INCDIR)/opcode/brownie32.h
 DEPTC_dlx_elf = $(INCDIR)/safe-ctype.h $(INCDIR)/symcat.h \
   $(srcdir)/config/obj-elf.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
   $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h \
   $(srcdir)/config/tc-dlx.h $(INCDIR)/opcode/dlx.h
+DEPTC_brownie32_elf = $(INCDIR)/safe-ctype.h $(INCDIR)/symcat.h \
+  $(srcdir)/config/obj-elf.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
+  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h \
+  $(srcdir)/config/tc-brownie32.h $(INCDIR)/opcode/brownie32.h
 DEPTC_fr30_coff = $(INCDIR)/symcat.h $(srcdir)/config/obj-coff.h \
   $(srcdir)/config/tc-fr30.h $(INCDIR)/coff/internal.h \
   $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h $(INCDIR)/safe-ctype.h \
@@ -1674,11 +1682,21 @@ DEPOBJ_dlx_coff = $(INCDIR)/symcat.h $(s
   $(srcdir)/config/tc-dlx.h $(INCDIR)/coff/internal.h \
   $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h $(INCDIR)/obstack.h \
   subsegs.h
+DEPOBJ_brownie32_coff = $(INCDIR)/symcat.h $(srcdir)/config/obj-coff.h \
+  $(srcdir)/config/tc-brownie32.h $(INCDIR)/coff/internal.h \
+  $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h $(INCDIR)/obstack.h \
+  subsegs.h
 DEPOBJ_dlx_elf = $(INCDIR)/symcat.h $(srcdir)/config/obj-elf.h \
   $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h \
   $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h $(srcdir)/config/tc-dlx.h \
   $(INCDIR)/safe-ctype.h subsegs.h $(INCDIR)/obstack.h \
   struc-symbol.h dwarf2dbg.h $(INCDIR)/aout/aout64.h
+DEPOBJ_brownie32_elf = $(INCDIR)/symcat.h $(srcdir)/config/obj-elf.h \
+  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h \
+  $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h $(srcdir)/config/tc-brownie32.h \
+  $(INCDIR)/safe-ctype.h subsegs.h $(INCDIR)/obstack.h \
+  struc-symbol.h dwarf2dbg.h $(INCDIR)/aout/aout64.h
+
 DEPOBJ_fr30_coff = $(INCDIR)/symcat.h $(srcdir)/config/obj-coff.h \
   $(srcdir)/config/tc-fr30.h $(INCDIR)/coff/internal.h \
   $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h $(INCDIR)/obstack.h \
@@ -2161,9 +2179,15 @@ DEP_d30v_elf = $(srcdir)/config/obj-elf.
 DEP_dlx_coff = $(srcdir)/config/obj-coff.h $(srcdir)/config/tc-dlx.h \
   $(INCDIR)/symcat.h $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h \
   $(INCDIR)/bfdlink.h
+DEP_brownie32_coff = $(srcdir)/config/obj-coff.h $(srcdir)/config/tc-brownie32.h \
+  $(INCDIR)/symcat.h $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h \
+  $(INCDIR)/bfdlink.h
 DEP_dlx_elf = $(srcdir)/config/obj-elf.h $(INCDIR)/symcat.h \
   $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h \
   $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h $(srcdir)/config/tc-dlx.h
+DEP_brownie32_elf = $(srcdir)/config/obj-elf.h $(INCDIR)/symcat.h \
+  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h \
+  $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h $(srcdir)/config/tc-brownie32.h
 DEP_fr30_coff = $(srcdir)/config/obj-coff.h $(srcdir)/config/tc-fr30.h \
   $(INCDIR)/symcat.h $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h \
   $(INCDIR)/bfdlink.h
Index: gas/as.c
===================================================================
RCS file: /home/prj/asip/cvs/binutils/gas/as.c,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- gas/as.c	31 Jul 2007 11:39:31 -0000	1.1.1.1
+++ gas/as.c	8 Aug 2007 08:44:28 -0000	1.2
@@ -349,6 +349,11 @@ Options:\n\
   fprintf (stream, _("\
   --listing-cont-lines    set the maximum number of continuation lines used\n\
                           for the output data column of the listing\n"));
+  fprintf (stream, _("\
+  -LE or -le              select little endian \n"));
+
+  fprintf (stream, _("\
+  -BE or -be              select big   endian \n"));
 
   md_show_usage (stream);
 
@@ -426,9 +431,11 @@ parse_args (int * pargc, char *** pargv)
       OPTION_EXECSTACK,
       OPTION_NOEXECSTACK,
       OPTION_ALTERNATE,
-      OPTION_WARN_FATAL
+      OPTION_WARN_FATAL,
     /* When you add options here, check that they do
        not collide with OPTION_MD_BASE.  See as.h.  */
+      OPTION_BigEndian,			// for brwonie32
+      OPTION_LittleEndian		// for brwonie32
     };
   
   static const struct option std_longopts[] =
@@ -485,6 +492,10 @@ parse_args (int * pargc, char *** pargv)
     ,{"target-help", no_argument, NULL, OPTION_TARGET_HELP}
     ,{"traditional-format", no_argument, NULL, OPTION_TRADITIONAL_FORMAT}
     ,{"warn", no_argument, NULL, OPTION_WARN}
+    ,{"BE", no_argument, NULL, OPTION_BigEndian}		// add for brownie32
+    ,{"be", no_argument, NULL, OPTION_BigEndian}                // add for brownie32
+    ,{"LE", no_argument, NULL, OPTION_LittleEndian}             // add for brownie32
+    ,{"le", no_argument, NULL, OPTION_LittleEndian}             // add for brownie32
   };
 
   /* Construct the option lists from the standard list and the target
@@ -514,7 +525,6 @@ parse_args (int * pargc, char *** pargv)
       int longind;
       int optc = getopt_long_only (old_argc, old_argv, shortopts, longopts,
 				   &longind);
-
       if (optc == -1)
 	break;
 
@@ -750,6 +760,14 @@ the GNU General Public License.  This pr
 	  flag_no_warnings = 1;
 	  break;
 
+	case OPTION_BigEndian:		// for brwonie32
+	  flag_LittleEndian = 0;
+	  break;
+
+	case OPTION_LittleEndian:	// for brwonie32
+	  flag_LittleEndian = 1;
+	  break;
+
 	case OPTION_WARN:
 	  flag_no_warnings = 0;
 	  flag_fatal_warnings = 0;
Index: gas/as.h
===================================================================
RCS file: /home/prj/asip/cvs/binutils/gas/as.h,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- gas/as.h	31 Jul 2007 11:39:31 -0000	1.1.1.1
+++ gas/as.h	8 Aug 2007 08:44:28 -0000	1.2
@@ -461,6 +461,9 @@ COMMON int linkrelax;
 /* TRUE if we should produce a listing.  */
 extern int listing;
 
+/* TRUE if use LittleEndian type  FALSE if use BigEndian*/
+COMMON int flag_LittleEndian;
+
 /* Type of debugging information we should generate.  We currently support
    stabs, ECOFF, and DWARF2.
 
Index: gas/configure.tgt
===================================================================
RCS file: /home/prj/asip/cvs/binutils/gas/configure.tgt,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- gas/configure.tgt	31 Jul 2007 11:39:31 -0000	1.1.1.1
+++ gas/configure.tgt	8 Aug 2007 08:44:28 -0000	1.2
@@ -136,7 +136,9 @@ case ${generic_target} in
 
   d10v-*-*)				fmt=elf ;;
   d30v-*-*)				fmt=elf ;;
+
   dlx-*-*)				fmt=elf ;;
+  brownie32-*-*)				fmt=elf ;;
 
   fr30-*-*)				fmt=elf ;;
   frv-*-*linux*)			fmt=elf em=linux;;
Index: gas/write.c
===================================================================
RCS file: /home/prj/asip/cvs/binutils/gas/write.c,v
retrieving revision 1.1.1.1
retrieving revision 1.3
diff -u -p -r1.1.1.1 -r1.3
--- gas/write.c	31 Jul 2007 11:39:31 -0000	1.1.1.1
+++ gas/write.c	24 Feb 2008 16:02:50 -0000	1.3
@@ -2580,6 +2580,8 @@ fixup_segment (fixS *fixP, segT this_seg
 #ifdef TC_VALIDATE_FIX
       TC_VALIDATE_FIX (fixP, this_segment, skip);
 #endif
+
+// Set Local Symbol Value
       add_number = fixP->fx_offset;
 
       if (fixP->fx_addsy != NULL
@@ -2639,6 +2641,7 @@ fixup_segment (fixS *fixP, segT this_seg
 		  || 1
 #endif
 		  || !fixP->fx_pcrel)
+// AO_comment for Brownie32
 		add_number += MD_PCREL_FROM_SECTION (fixP, this_segment);
 	      fixP->fx_subsy = NULL;
 	      fixP->fx_pcrel = 1;
@@ -2665,6 +2668,7 @@ fixup_segment (fixS *fixP, segT this_seg
 	      add_number += S_GET_VALUE (fixP->fx_addsy);
 	      fixP->fx_offset = add_number;
 	      if (fixP->fx_pcrel)
+// AO_comment for Brownie32
 		add_number -= MD_PCREL_FROM_SECTION (fixP, this_segment);
 	      fixP->fx_addsy = NULL;
 	      fixP->fx_pcrel = 0;
@@ -2686,6 +2690,7 @@ fixup_segment (fixS *fixP, segT this_seg
 
       if (fixP->fx_pcrel)
 	{
+// AO_comment for Brownie32
 	  add_number -= MD_PCREL_FROM_SECTION (fixP, this_segment);
 	  if (!fixP->fx_done && fixP->fx_addsy == NULL)
 	    {
Index: gas/config/tc-brownie32.c
===================================================================
RCS file: gas/config/tc-brownie32.c
diff -N gas/config/tc-brownie32.c
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ gas/config/tc-brownie32.c	11 Feb 2008 14:04:14 -0000	1.2
@@ -0,0 +1,1536 @@
+/* tc-brownie32.c -- Assemble for the BROWNIE32
+   Copyright 2002, 2003, 2004, 2005 Free Software Foundation, Inc.
+
+   This file is part of GAS, the GNU Assembler.
+
+
+   GAS is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
+   GAS is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with GAS; see the file COPYING.  If not, write to the Free
+   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+   02111-1307, USA.  */
+
+/* Initially created by Kuang Hwa Lin, 3/20/2002.  */
+
+#include "safe-ctype.h"
+#include "as.h"
+#include "tc-brownie32.h"
+#include "opcode/brownie32.h"
+
+/* Make it easier to clone this machine desc into another one.  */
+#define	machine_opcode      brownie32_opcode
+#define	machine_opcodes     brownie32_opcodes
+#define	machine_ip          brownie32_ip
+#define	machine_it          brownie32_it
+
+#define NO_RELOC            BFD_RELOC_NONE
+#define RELOC_BROWNIE32_REL26     BFD_RELOC_BROWNIE32_JMP26
+#define RELOC_BROWNIE32_16        BFD_RELOC_16
+#define RELOC_BROWNIE32_REL16     BFD_RELOC_16_PCREL_S2
+#define RELOC_BROWNIE32_HI16      BFD_RELOC_HI16_S
+#define RELOC_BROWNIE32_LO16      BFD_RELOC_LO16
+#define RELOC_BROWNIE32_VTINHERIT BFD_RELOC_VTABLE_INHERIT
+#define RELOC_BROWNIE32_VTENTRY   BFD_RELOC_VTABLE_ENTRY
+
+/* handle of the OPCODE hash table */
+static struct hash_control *op_hash = NULL;
+
+struct machine_it
+{
+  char *error;
+  unsigned long opcode;
+  struct nlist *nlistp;
+  expressionS exp;
+  int pcrel;
+  int size;
+  int reloc_offset;		/* Offset of reloc within insn.  */
+  int reloc;
+  int HI;
+  int LO;
+}
+the_insn;
+
+/* static void print_insn PARAMS ((struct machine_it *)); */
+char * parse_operand    PARAMS ((char *, expressionS *));
+int md_chars_to_number  PARAMS ((unsigned char *, int));
+
+static void machine_ip          PARAMS ((char *));
+static void s_proc              PARAMS ((int));
+static void insert_sreg         PARAMS ((char *, int));
+static int  hilo_modifier_ok    PARAMS ((char *));
+static int  is_ldst_registers   PARAMS ((char *));
+static int  match_sft_register  PARAMS ((char *));
+static void define_some_regs    PARAMS ((void));
+
+static char * brownie32_parse_loadop  PARAMS ((char *));
+static char * brownie32_parse_storeop PARAMS ((char *));
+static char * fix_ld_st_operand PARAMS ((unsigned long, char *));
+
+const pseudo_typeS
+
+brownie32_pseudo_table[] =
+  {
+    /* Some additional ops that are used by gcc-brownie32.  */
+    {"asciiz", stringer, 1},
+    {"half", cons, 2},
+    {"dword", cons, 8},
+    {"word", cons, 4},
+    {"proc", s_proc, 0},
+    {"endproc", s_proc, 1},
+    {NULL, 0, 0},
+  };
+
+/* This array holds the chars that always start a comment.  If the
+   pre-processor is disabled, these aren't very useful.  */
+const char comment_chars[] = ";";
+
+/* This array holds the chars that only start a comment at the beginning of
+   a line.  If the line seems to have the form '# 123 filename'
+   .line and .file directives will appear in the pre-processed output.  */
+/* Note that input_file.c hand checks for '#' at the beginning of the
+   first line of the input file.  This is because the compiler outputs
+   #NO_APP at the beginning of its output.  */
+/* Also note that comments like this one will always work.  */
+const char line_comment_chars[] = "#";
+
+/* We needed an unused char for line separation to work around the
+   lack of macros, using sed and such.  */
+const char line_separator_chars[] = "@";
+
+/* Chars that can be used to separate mant from exp in floating point nums.  */
+const char EXP_CHARS[] = "eE";
+
+/* Chars that mean this number is a floating point constant.
+   As in 0f12.456
+   or    0d1.2345e12.  */
+const char FLT_CHARS[] = "rRsSfFdDxXpP";
+
+static void
+insert_sreg (regname, regnum)
+     char *regname;
+     int regnum;
+{
+  /* Must be large enough to hold the names of the special registers.  */
+  char buf[80];
+  int i;
+
+  symbol_table_insert (symbol_new (regname, reg_section, (valueT) regnum,
+				   &zero_address_frag));
+  for (i = 0; regname[i]; i++)
+    buf[i] = ISLOWER (regname[i]) ? TOUPPER (regname[i]) : regname[i];
+  buf[i] = '\0';
+
+  symbol_table_insert (symbol_new (buf, reg_section, (valueT) regnum,
+				   &zero_address_frag));
+}
+
+/* Install symbol definitions for assorted special registers.
+   See MIPS Assembly Language Programmer's Guide page 1-4   */
+
+static void
+define_some_regs ()
+{
+  /* Software representation.  */
+  insert_sreg ("rg00",    0);
+  insert_sreg ("rg01",    1);
+  insert_sreg ("rg02",    2);
+  insert_sreg ("rg03",    3);
+  insert_sreg ("rg04",    4);
+  insert_sreg ("rg05",    5);
+  insert_sreg ("rg06",    6);
+  insert_sreg ("rg07",    7);
+  insert_sreg ("rg08",    8);
+  insert_sreg ("rg09",    9);
+  insert_sreg ("rg10",    10);
+  insert_sreg ("rg11",    11);
+  insert_sreg ("rg12",    12);
+  insert_sreg ("rg13",    13);
+  insert_sreg ("rg14",    14);
+  insert_sreg ("rg15",    15);
+  insert_sreg ("rg16",    16);
+  insert_sreg ("rg17",    17);
+  insert_sreg ("rg18",     18);
+  insert_sreg ("rg19",    19);
+  insert_sreg ("rg20",    20);
+  insert_sreg ("rg21",    21);
+  insert_sreg ("rg22",    22);
+  insert_sreg ("rg23",    23);
+  insert_sreg ("rg24",    24);
+  insert_sreg ("rg25",    25);
+  insert_sreg ("rg26",    26);
+  insert_sreg ("rg27",    27);
+  insert_sreg ("rg28",    28);
+  insert_sreg ("rg29",    29);
+  insert_sreg ("rg30",    30);
+  insert_sreg ("rg31",    31);
+/*  special register                    */
+  insert_sreg ("zero",  0);
+  insert_sreg ("sr",    1);
+  insert_sreg ("irr",   2);
+  insert_sreg ("lr",    3);
+  insert_sreg ("rr",    4);
+  insert_sreg ("fp",    5);
+  insert_sreg ("sp",    6);
+}
+
+/* Subroutine check the string to match an register, */
+
+static int
+match_sft_register (name)
+     char *name;
+{
+#define MAX_REG_NO  39
+  static char *soft_reg[] =
+    { "rg00", "rg01", "rg02", "rg03", "rg04", "rg05", "rg06", "rg07",
+      "rg08", "rg09", "rg10", "rg11", "rg12", "rg13", "rg14", "rg15",
+      "rg16", "rg17", "rg18", "rg19", "rg20", "rg21", "rg22", "rg23",
+      "rg24", "rg25", "rg26", "rg27", "rg28", "rg29", "rg30", "rg31",
+      "zero", "sr", "irr", "lr", "rr", "fp", "sp",
+      "EndofTab"  /* End of the Table indicator */
+    };
+
+  char low_name[21], *ptr;
+  int idx;
+
+  for (ptr = name,idx = 0; *ptr != '\0'; ptr++)
+    low_name[idx++] = TOLOWER (*ptr);
+
+  low_name[idx] = '\0';
+  idx = 0;
+
+  while (idx < MAX_REG_NO && strcmp (soft_reg[idx], & low_name [0]))
+    idx += 1;
+
+  return idx < MAX_REG_NO;
+}
+
+/* Subroutine check the string to match an register.  */
+
+static int
+is_ldst_registers (name)
+     char *name;
+{
+  char *ptr = name;
+
+  /* The first character of the register name got to be either %, $, r of R.  */
+  if ((ptr[0] == '%' || ptr[0] == '$' || ptr[0] == 'r' || ptr[0] == 'R')
+      && ISDIGIT ((unsigned char) ptr[1]))
+    return 1;
+
+  /* Now check the software register representation.  */
+  return match_sft_register (ptr);
+}
+
+/* Subroutine of s_proc so targets can choose a different default prefix.
+   If DEFAULT_PREFIX is NULL, use the target's "leading char".  */
+
+static void
+s_proc (end_p)
+     int end_p;
+{
+  /* Record the current function so that we can issue an error message for
+     misplaced .func,.endfunc, and also so that .endfunc needs no
+     arguments.  */
+  static char *current_name;
+  static char *current_label;
+
+  if (end_p)
+    {
+      if (current_name == NULL)
+	{
+	  as_bad (_("missing .proc"));
+	  ignore_rest_of_line ();
+	  return;
+	}
+
+      current_name = current_label = NULL;
+      SKIP_WHITESPACE ();
+      while (!is_end_of_line[(unsigned char) *input_line_pointer])
+        input_line_pointer++;
+    }
+  else
+    {
+      char *name, *label;
+      char delim1, delim2;
+
+      if (current_name != NULL)
+	{
+	  as_bad (_(".endfunc missing for previous .proc"));
+	  ignore_rest_of_line ();
+	  return;
+	}
+
+      name = input_line_pointer;
+      delim1 = get_symbol_end ();
+      name = xstrdup (name);
+      *input_line_pointer = delim1;
+      SKIP_WHITESPACE ();
+
+      if (*input_line_pointer != ',')
+	{
+	  char leading_char = 0;
+
+	  leading_char = bfd_get_symbol_leading_char (stdoutput);
+	  /* Missing entry point, use function's name with the leading
+	     char prepended.  */
+	  if (leading_char)
+	    asprintf (&label, "%c%s", leading_char, name);
+	  else
+	    label = name;
+	}
+      else
+	{
+	  ++input_line_pointer;
+	  SKIP_WHITESPACE ();
+	  label = input_line_pointer;
+	  delim2 = get_symbol_end ();
+	  label = xstrdup (label);
+	  *input_line_pointer = delim2;
+	}
+
+      current_name = name;
+      current_label = label;
+    }
+  demand_empty_rest_of_line ();
+}
+
+/* This function is called once, at assembler startup time.  It should
+   set up all the tables, etc., that the MD part of the assembler will
+   need.  */
+
+void
+md_begin ()
+{
+  const char *retval = NULL;
+  int lose = 0;
+  unsigned int i;
+
+  /* Create a new hash table.  */
+  op_hash = hash_new ();
+
+  /* Hash up all the opcodes for fast use later.  */
+  for (i = 0; i < num_brownie32_opcodes; i++)
+    {
+      const char *name = machine_opcodes[i].name;
+
+      retval = hash_insert (op_hash, name, (PTR) &machine_opcodes[i]);
+
+      if (retval != NULL)
+	{
+	  fprintf (stderr, "internal error: can't hash `%s': %s\n",
+		   machine_opcodes[i].name, retval);
+	  lose = 1;
+	}
+    }
+
+  if (lose)
+    as_fatal (_("Broken assembler.  No assembly attempted."));
+
+  define_some_regs ();
+}
+
+/* Assemble a single instruction.  Its label has already been handled
+   by the generic front end.  We just parse opcode and operands, and
+   produce the bytes of data and relocation.  */
+
+void
+md_assemble (str)
+     char *str;
+{
+  char *toP;
+  fixS *fixP;
+  bit_fixS *bitP;
+
+  know (str);
+  machine_ip (str);
+  toP = frag_more (4);
+  /* Put out the opcode.  */
+  md_number_to_chars (toP, the_insn.opcode, 4);
+
+  /* Put out the symbol-dependent stuff.  */
+  if (the_insn.reloc != NO_RELOC)
+    {
+      fixP = fix_new_exp (frag_now,
+			  (toP - frag_now->fr_literal + the_insn.reloc_offset),
+			  the_insn.size, & the_insn.exp, the_insn.pcrel,
+			  the_insn.reloc);
+
+      /* Turn off complaints that the addend is
+	 too large for things like foo+100000@ha.  */
+      switch (the_insn.reloc)
+	{
+	case RELOC_BROWNIE32_HI16:
+	case RELOC_BROWNIE32_LO16:
+	  fixP->fx_no_overflow = 1;
+	  break;
+	default:
+	  break;
+	}
+
+      switch (fixP->fx_r_type)
+	{
+	case RELOC_BROWNIE32_REL26:
+	  bitP = malloc (sizeof (bit_fixS));
+	  bitP->fx_bit_size = 26;
+	  bitP->fx_bit_offset = 25;
+// AO_comment
+//	  bitP->fx_bit_base = the_insn.opcode & 0xFC000000;
+	  bitP->fx_bit_base = the_insn.opcode & 0x0000003F;
+	  bitP->fx_bit_base_adj = 0;
+	  bitP->fx_bit_max = 0;
+	  bitP->fx_bit_min = 0;
+	  bitP->fx_bit_add = 0x03FFFFFF;
+	  fixP->fx_bit_fixP = bitP;
+	  break;
+	case RELOC_BROWNIE32_LO16:
+	case RELOC_BROWNIE32_REL16:
+	  bitP = malloc (sizeof (bit_fixS));
+	  bitP->fx_bit_size = 16;
+	  bitP->fx_bit_offset = 15;
+// AO_comment
+//	  bitP->fx_bit_base = the_insn.opcode & 0xFFFF0000;
+	  bitP->fx_bit_base = the_insn.opcode & 0x0000FFFF;
+	  bitP->fx_bit_base_adj = 0;
+	  bitP->fx_bit_max = 0;
+	  bitP->fx_bit_min = 0;
+	  bitP->fx_bit_add = 0x0000FFFF;
+	  fixP->fx_bit_fixP = bitP;
+	  break;
+	case RELOC_BROWNIE32_HI16:
+	  bitP = malloc (sizeof (bit_fixS));
+	  bitP->fx_bit_size = 16;
+	  bitP->fx_bit_offset = 15;
+// AO_comment
+//	  bitP->fx_bit_base = the_insn.opcode & 0xFFFF0000;
+	  bitP->fx_bit_base = the_insn.opcode & 0x0000FFFF;
+	  bitP->fx_bit_base_adj = 0;
+	  bitP->fx_bit_max = 0;
+	  bitP->fx_bit_min = 0;
+	  bitP->fx_bit_add = 0x0000FFFF;
+	  fixP->fx_bit_fixP = bitP;
+	  break;
+	default:
+	  fixP->fx_bit_fixP = (bit_fixS *)NULL;
+	  break;
+	}
+    }
+}
+
+
+static int
+hilo_modifier_ok (s)
+     char *s;
+{
+  char *ptr = s;
+  int   idx, count = 1;
+
+  if (*ptr != '(')
+    return 1;
+
+  for (idx = 1; ptr[idx] != '\0' && ptr[idx] != '[' && idx < 73; idx += 1)
+    {
+      if (count == 0)
+	return count;
+
+      if (ptr[idx] == '(')
+	count += 1;
+
+      if (ptr[idx] == ')')
+	count -= 1;
+    }
+
+  return (count == 0) ? 1:0;
+}
+
+char *
+parse_operand (s, operandp)
+     char *s;
+     expressionS *operandp;
+{
+  char *save = input_line_pointer;
+  char *new;
+
+  /* for Brownie32 format is %hi.imm or %lo.immm */
+  the_insn.HI = the_insn.LO = 0;
+
+  /* Search for %hi and %lo, make a mark and skip it.  */
+  if (strncmp (s, "%hi", 3) == 0)
+    {
+      s += 3;
+      the_insn.HI = 1;
+    }
+  else
+    {
+      if (strncmp (s, "%lo", 3) == 0)
+	{
+	  s += 3;
+	  the_insn.LO = 1;
+	}
+      else
+	the_insn.LO = 0;
+    }
+
+  if (the_insn.HI || the_insn.LO)
+    {
+      if (!hilo_modifier_ok (s))
+	as_bad (_("Expression Error for operand modifier %%hi/%%lo\n"));
+    }
+
+  /* Check for the "%","$","r" and "R" register representation   */
+  if ((s[0] == '%' || s[0] == '$' || s[0] == 'r' || s[0] == 'R')
+      && ISDIGIT ((unsigned char) s[1]))
+    {
+      /* We have a numeric register expression.  No biggy.  */
+      s += 1;
+      input_line_pointer = s;
+      (void) expression (operandp);
+      if (operandp->X_op != O_constant
+	  || operandp->X_add_number > 31)
+	as_bad (_("Invalid expression after %%%%\n"));
+      operandp->X_op = O_register;
+    }
+//
+/* AO_comment add for Brownie32 : check '#'*/
+      else if( s[0] == '#')
+    {
+      /* check for "#" immediate representation  */
+      s += 1;
+      input_line_pointer = s;
+      (void) expression (operandp);
+    }
+      else
+    {
+      /* Normal operand parsing.  */
+      input_line_pointer = s;
+      (void) expression (operandp);
+    }
+  new = input_line_pointer;
+  input_line_pointer = save;
+  return new;
+}
+
+
+/* This function will check the opcode and return 1 if the opcode is one
+   of the load/store instruction, and it will fix the operand string to
+   the standard form so we can use the standard parse_operand routine.  */
+
+#define READ_OP     0x100
+#define WRITE_OP    0x200
+static char iBuf[81];
+
+static char *
+brownie32_parse_loadop (str)
+     char * str;
+{
+  char *ptr = str;
+  int   idx = 0;
+
+  /* The last pair of () is the register, all other are the
+     reloc displacement, and if there is a register then it ought
+     to have a pair of () */
+
+  for (idx = 0; idx < 72 && ptr[idx] != '\0'; idx++)
+    ;
+
+  if (idx == 72)
+    {
+    badoperand_load:
+      as_bad (_("Bad operand for a load instruction: <%s>"), str);
+      return NULL;
+    }
+  else
+    {
+      int i, pb = 0;
+      int m2 = 0;
+      char rs1[7], rd[7], endm, match = '0';
+      char imm[72];
+
+      idx -= 1;
+      switch (str[idx])
+	{
+	case ')':
+	  match = '(';
+	  endm  = ')';
+	  break;
+	default:
+	  /* No register indicated, fill in zero.  */
+	  rs1[0] = 'r';
+	  rs1[1] = '0';
+	  rs1[2] = '\0';
+	  match  = 0;
+	  endm = 0;
+	  m2 = 1;
+	}
+
+      if (!m2)
+	{
+	  /* Searching for "("  */
+	  for ( pb = idx - 1; str[pb] != match; pb -= 1 )
+	    if ( str[pb] == endm || pb < (idx - 5) )
+	      goto load_no_rs1;
+	  pb += 1;
+
+	  for (i = 0; (pb + i) < idx; i++)
+	    rs1[i] = str[pb+i];
+
+	  rs1[i] = '\0';
+
+	  if (is_ldst_registers (& rs1[0]))
+	    /* Point to the last character of the imm.  */
+	    pb -= 1;
+	  else
+	    {
+	    load_no_rs1:
+	      if (match == '[')
+		goto badoperand_load;
+	      /* No register indicated, fill in zero and restore the imm.  */
+	      rs1[0] = 'r';
+	      rs1[1] = '0';
+	      rs1[2] = '\0';
+	      m2 = 1;
+	    }
+	}
+
+      /* Duplicate the first register.  */
+      for (i = 0; i < 7 && str[i] != ','; i++)
+	rd[i] = ptr[i];
+      if (str[i] != ',')
+	goto badoperand_load;
+      else
+	rd[i] = '\0';
+
+      /* Copy the immd.  */
+      if (m2)
+	/* Put the '\0' back in.  */
+	pb = idx + 1;
+
+      for (i++, m2 = 0; i < pb; m2++,i++)
+	imm[m2] = ptr[i];
+
+      imm[m2] = '\0';
+
+      /* Assemble the instruction to gas internal format.  */
+      for (i = 0; rd[i] != '\0'; i++)
+	iBuf[i] = rd[i];
+
+      iBuf[i++] = ',';
+
+      for (pb = 0 ; rs1[pb] != '\0'; i++, pb++)
+	iBuf[i] = rs1[pb];
+
+      iBuf[i++] = ',';
+
+      for (pb = 0; imm[pb] != '\0'; i++, pb++)
+	iBuf[i] = imm[pb];
+
+      iBuf[i] = '\0';
+
+      return iBuf;
+    }
+}
+
+
+static char *
+brownie32_parse_storeop (str)
+     char * str;
+{
+  char *ptr = str;
+  int   idx = 0;
+
+  /* Search for the ','.  */
+  for (idx = 0; idx < 72 && ptr[idx] != ','; idx++)
+    ;
+
+  if (idx == 72)
+    {
+    badoperand_store:
+      as_bad (_("Bad operand for a store instruction: <%s>"), str);
+      return NULL;
+    }
+  else
+    {
+      /* idx now points to the ','.  */
+      int i, pb = 0;
+      int comma = idx;
+      int m2 = 0;
+      char rs1[7], rd[7], endm, match = '0';
+      char imm[72];
+
+      /* Now parse the '(' and ')', and make idx point to ')'.  */
+      idx -= 1;
+      switch (str[idx])
+	{
+	case ')':
+	  match = '(';
+	  endm  = ')';
+	  break;
+	default:
+	  /* No register indicated, fill in zero.  */
+	  rs1[0] = 'r';
+	  rs1[1] = '0';
+	  rs1[2] = '\0';
+	  match  = 0;
+	  endm = 0;
+	  m2 = 1;
+	}
+
+      if (!m2)
+	{
+	  /* Searching for (/[ which will match the ]/).  */
+	  for (pb = idx - 1; str[pb] != match; pb -= 1)
+	    if (pb < (idx - 5) || str[pb] == endm)
+	      goto store_no_rs1;
+	  pb += 1;
+
+	  for (i = 0; (pb + i) < idx; i++)
+	    rs1[i] = str[pb + i];
+
+	  rs1[i] = '\0';
+
+	  if (is_ldst_registers (& rs1[0]))
+	    /* Point to the last character of the imm.  */
+	    pb -= 1;
+	  else
+	    {
+	    store_no_rs1:
+	      if (match == '[')
+		goto badoperand_store;
+
+	      /* No register indicated, fill in zero and restore the imm.  */
+	      rs1[0] = 'r';
+	      rs1[1] = '0';
+	      rs1[2] = '\0';
+	      pb = comma;
+	    }
+	}
+      else
+	/* No register was specified.  */
+	pb = comma;
+
+      /* Duplicate the first register.  */
+      for (i = comma + 1; (str[i] == ' ' || str[i] == '\t'); i++)
+	;
+
+      for (m2 = 0; (m2 < 7 && str[i] != '\0'); i++, m2++)
+	{
+	  if (str[i] != ' ' && str[i] != '\t')
+	    rd[m2] = str[i];
+	  else
+	    goto badoperand_store;
+	}
+
+      if (str[i] != '\0')
+	goto badoperand_store;
+      else
+	rd[m2] = '\0';
+
+      /* Copy the immd.  */
+      for (i = 0; i < pb; i++)
+	imm[i] = ptr[i];
+
+      imm[i] = '\0';
+
+      /* Assemble the instruction to gas internal format.  */
+      for (i = 0; rd[i] != '\0'; i++)
+	iBuf[i] = rd[i];
+      iBuf[i++] = ',';
+      for (pb = 0 ; rs1[pb] != '\0'; i++, pb++)
+	iBuf[i] = rs1[pb];
+      iBuf[i++] = ',';
+      for (pb = 0; imm[pb] != '\0'; i++, pb++)
+	iBuf[i] = imm[pb];
+      iBuf[i] = '\0';
+
+      return iBuf;
+    }
+}
+
+
+static char *
+fix_ld_st_operand (opcode, str)
+     unsigned long opcode;
+     char* str;
+{
+  /* Check the opcode.  */
+  switch ((int) opcode)
+    {
+    case LBOP:
+    case LHOP:
+    case LWOP:
+      return brownie32_parse_loadop (str);
+    case SBOP:
+    case SHOP:
+    case SWOP:
+      return brownie32_parse_storeop (str);
+    default:
+      return str;
+    }
+}
+
+
+/* Instruction parsing.  Takes a string containing the opcode.
+   Operands are at input_line_pointer.  Output is in the_insn.
+   Warnings or errors are generated.  */
+
+static void
+machine_ip (str)
+     char *str;
+{
+  char *s;
+  const char *args;
+  struct machine_opcode *insn;
+  char *argsStart;
+  unsigned long opcode;
+  expressionS the_operand;
+  expressionS *operand = &the_operand;
+  unsigned int reg, reg_shift = 0;
+
+  /* Fixup the opcode string to all lower cases, and also
+     allow numerical digits.  */
+  s = str;
+
+  if (ISALPHA (*s))
+    for (; ISALNUM (*s); ++s)
+      if (ISUPPER (*s))
+	*s = TOLOWER (*s);
+
+  switch (*s)
+    {
+    case '\0':
+      break;
+
+      /* FIXME-SOMEDAY more whitespace.  */
+    case ' ':
+      *s++ = '\0';
+      break;
+
+    default:
+      as_bad (_("Unknown opcode: `%s'"), str);
+      return;
+    }
+
+  /* Hash the opcode, insn will have the string from opcode table.
+     also initialized the_insn struct.  */
+
+  if ((insn = (struct machine_opcode *) hash_find (op_hash, str)) == NULL)
+    {
+      as_bad (_("Unknown opcode `%s'."), str);
+      return;
+    }
+
+  argsStart = s;
+  opcode = insn->opcode;
+  memset (&the_insn, '\0', sizeof (the_insn));
+  the_insn.reloc = NO_RELOC;
+  the_insn.pcrel = 0;
+
+
+// AO_debug
+//	printf( " \n->->-> opcode=%x\n",opcode);
+
+
+  /* Set the skip reloc HI16 flag.  */
+  if (!set_brownie32_skip_hi16_flag (1))
+    as_bad (_("Can not set brownie32_skip_hi16_flag"));
+
+  /* Fix the operand string if it is one of load store instructions.  */
+  s = fix_ld_st_operand (opcode, s);
+
+  /* Build the opcode, checking as we go to make sure that the operands match.
+     If an operand matches, we modify the_insn or opcode appropriately,
+     and do a "continue".  If an operand fails to match, we "break".  */
+  if (insn->args[0] != '\0' && insn->args[0] != 'N')
+    {
+      /* Prime the pump.  */
+      if (*s == '\0')
+	{
+	  as_bad (_("Missing arguments for opcode <%s>."), str);
+	  return;
+	}
+      else
+	s = parse_operand (s, operand);
+    }
+  else if (insn->args[0] == 'N')
+    {
+      /* Clean up the insn and done!  */
+      the_insn.opcode = opcode;
+      return;
+    }
+
+  /* Parse through the args (this is from opcode table), *s point to
+     the current character of the instruction stream.  */
+  for (args = insn->args;; ++args)
+    {
+      switch (*args)
+	{
+	  /* End of Line.  */
+	case '\0':
+	  /* End of args.  */
+	  if (*s == '\0')
+	    {
+	      /* We are truly done.  */
+	      the_insn.opcode = opcode;
+	      /* Clean up the HI and LO mark.  */
+	      the_insn.HI = 0;
+	      the_insn.LO = 0;
+	      return;
+	    }
+	  the_insn.HI = 0;
+	  the_insn.LO = 0;
+	  as_bad (_("Too many operands: %s"), s);
+	  break;
+
+	  /* ',' Args separator */
+	case ',':
+	  /* Must match a comma.  */
+	  if (*s++ == ',')
+	    {
+	      /* Parse next operand.  */
+	      s = parse_operand (s, operand);
+	      continue;
+	    }
+	  break;
+
+	  /* 'rs1' rolcate bit27-31 */
+	case 'a':
+	      reg_shift = 27;
+	      goto general_reg;
+
+	  /* 'rs1' rolcate bit11-15 */
+	case 'b':
+	      reg_shift = 11;
+	      goto general_reg;
+
+	  /* 'rs1' rolcate bit6-10 */
+	case 'c':
+	      reg_shift = 6;
+      	      goto general_reg;
+
+	  /* 'rs2' rolcate bit22-26 */
+	case 'd':
+	      reg_shift = 22;
+	      goto general_reg;
+
+	  /* 'rd' rolcate bit17-21 */
+	case 'e':
+	      reg_shift = 17;
+	      goto general_reg;
+
+	  /* 'rd' rolcate bit6-10 */
+	case 'f':
+	      reg_shift = 6;
+	      goto general_reg;
+
+	  /* 'rs1' rolcate bit22-26 */
+	case 'p':
+	      reg_shift = 22;
+	      goto general_reg;
+
+	  /* 'rd' rolcate bit27-31 */
+	case 'q':
+	      reg_shift = 27;
+	      goto general_reg;
+
+	  /* Type 'i' 16bit immediate value  bit 16-31 */
+        case 'i': 
+	  if (operand->X_op == O_constant)
+	    {
+// AO_Change
+	      if (the_insn.HI)
+		operand->X_add_number >>= 16;
+
+    	        opcode |= ( operand->X_add_number & 0xFFFF ) << 16 ;
+
+	      if (the_insn.HI && the_insn.LO)
+		as_bad (_("Both the_insn.HI and the_insn.LO are set : %s"), s);
+	      else
+		{
+		  the_insn.HI = 0;
+		  the_insn.LO = 0;
+		}
+
+	      continue;
+	    }
+
+// AO_change
+	  the_insn.reloc        = RELOC_BROWNIE32_16;
+ 	  if (the_insn.HI)
+         	 the_insn.reloc        = RELOC_BROWNIE32_HI16;
+ 	  if (the_insn.LO)
+	  the_insn.reloc        = RELOC_BROWNIE32_16;
+	  //the_insn.reloc        = RELOC_BROWNIE32_LO16;
+
+	  the_insn.reloc_offset = 0;
+	  the_insn.size         = 2;
+	  the_insn.pcrel        = 0;
+	  the_insn.exp          = *operand;
+	  the_insn.HI = 0;
+          the_insn.LO = 0;
+	  continue;
+
+	  /* Type 'I' 16bit immediate(unsign) value  bit 16-31 */
+        case 'I': 
+	  if (operand->X_op == O_constant)
+	    {
+// AO_Change
+	      if (the_insn.HI)
+		operand->X_add_number >>= 16;
+	      opcode |= ( operand->X_add_number & 0xFFFF ) << 16 ;
+
+	      if (the_insn.HI && the_insn.LO)
+		as_bad (_("Both the_insn.HI and the_insn.LO are set : %s"), s);
+	      else
+		{
+		  the_insn.HI = 0;
+		  the_insn.LO = 0;
+		}
+
+	      continue;
+	    }
+
+	  the_insn.reloc        = (the_insn.HI) ? RELOC_BROWNIE32_HI16 
+	    : (the_insn.LO ? RELOC_BROWNIE32_LO16 : RELOC_BROWNIE32_16);
+//
+//	  the_insn.reloc_offset = 2;
+//	  the_insn.size         = 2;
+//	  the_insn.pcrel        = 0;
+//	  the_insn.exp          = * operand;
+//	  the_insn.HI           = 0;
+//	  the_insn.LO           = 0;
+//	  continue;
+//
+	  the_insn.reloc        = RELOC_BROWNIE32_REL16;
+	  the_insn.reloc_offset = 0;    /* BIG-ENDIAN Byte 3 of insn.  */
+	  the_insn.size         = 4;
+	  the_insn.pcrel        = 1;
+	  the_insn.exp          = *operand;
+	  continue;
+
+	  /* Type 'o' 16bit offset(signed) value  bit 16-31 */
+        case 'o': 
+	  if (operand->X_op == O_constant)
+	    {
+// AO_Change
+	      opcode |= ( operand->X_add_number & 0xFFFF ) << 16 ;
+	      continue;
+	    }
+	  the_insn.reloc        = RELOC_BROWNIE32_REL16;
+//	  the_insn.reloc        = RELOC_BROWNIE32_16;
+	  the_insn.reloc_offset = 0;
+	  the_insn.size         = 4;
+	  the_insn.pcrel        = 1;
+	  the_insn.exp          = *operand;
+	  continue;
+
+	  /* Type 'O' 26bit offset(signed) value  bit 6-31 */
+        case 'O': 
+	  if (operand->X_op == O_constant)
+	    {
+// AO_Change
+	      opcode |= ( operand->X_add_number & 0x3FFFFFF ) << 6 ;
+	      continue;
+	    }
+	  the_insn.reloc = RELOC_BROWNIE32_REL26;
+	  the_insn.reloc_offset = 0;    /* BIG-ENDIAN Byte 3 of insn.  */
+	  the_insn.size  = 4;
+	  the_insn.pcrel = 1;
+	  the_insn.exp = *operand;
+	  continue;
+
+// AO_add this line
+	  /* Type 'A' 16bit Absolute address */
+        case 'A': 
+	  if (operand->X_op == O_constant)
+	    {
+	      opcode |= ( operand->X_add_number & 0xFFFF ) << 16 ;
+	      continue;
+	    }
+	  the_insn.reloc        = RELOC_BROWNIE32_16;
+	  the_insn.reloc_offset = 0;
+	  the_insn.size         = 2;
+	  the_insn.pcrel        = 0;
+	  the_insn.exp          = *operand;
+	  continue;
+
+
+
+
+/*****************************/
+/*      DLX old version     */
+/*****************************/
+
+        case 'g': 
+//	case 'd':
+	  /* offset, signed.  */
+	  if (operand->X_op == O_constant)
+	    {
+	      opcode |= operand->X_add_number & 0xFFFF;
+	      continue;
+	    }
+	  the_insn.reloc        = RELOC_BROWNIE32_REL16;
+	  the_insn.reloc_offset = 0;    /* BIG-ENDIAN Byte 3 of insn.  */
+	  the_insn.size         = 4;
+	  the_insn.pcrel        = 1;
+	  the_insn.exp          = *operand;
+	  continue;
+
+	  /* The immediate 26 bits literal, bit 0-25.  */
+        case 'h': 
+//	case 'e':
+	  /* offset, signed.  */
+	  if (operand->X_op == O_constant)
+	    {
+	      opcode |= operand->X_add_number & 0x3FFFFFF;
+	      continue;
+	    }
+	  the_insn.reloc = RELOC_BROWNIE32_REL26;
+	  the_insn.reloc_offset = 0;    /* BIG-ENDIAN Byte 3 of insn.  */
+	  the_insn.size  = 4;
+	  the_insn.pcrel = 1;
+	  the_insn.exp = *operand;
+	  continue;
+
+
+	general_reg:
+          /*  check illegal register expression */
+          if(operand->X_op != O_register)
+          {
+             as_bad ("Illegal register expression");
+             return;
+          }
+
+	  know (operand->X_add_symbol == 0);
+	  know (operand->X_op_symbol == 0);
+	  reg = operand->X_add_number;
+	  if (reg & 0xffffffe0)
+	    as_fatal (_("failed regnum sanity check."));
+	  else
+	    /* Got the register, now figure out where it goes in the opcode.  */
+	    opcode |= reg << reg_shift;
+
+	  switch (*args)
+	    {
+	    case 'a':
+	    case 'b':
+	    case 'c':
+	    case 'd':
+	    case 'e':
+	    case 'f':
+	    case 'p':
+	    case 'q':
+	      continue;
+	    }
+	  as_fatal (_("failed general register sanity check."));
+	  break;
+
+	default:
+	  BAD_CASE (*args);
+	}
+
+      /* Types or values of args don't match.  */
+      as_bad ("Invalid operands");
+      return;
+    }
+}
+
+/* This is identical to the md_atof in m68k.c.  I think this is right,
+   but I'm not sure.
+
+   Turn a string in input_line_pointer into a floating point constant
+   of type TYPE, and store the appropriate bytes in *LITP.  The number
+   of LITTLENUMS emitted is stored in *SIZEP.  An error message is
+   returned, or NULL on OK.  */
+/* Dlx will not use it anyway, so I just leave it here for now.  */
+
+/* Equal to MAX_PRECISION in atof-ieee.c.  */
+#define MAX_LITTLENUMS 6
+
+char *
+md_atof (type, litP, sizeP)
+     char type;
+     char *litP;
+     int *sizeP;
+{
+  int prec;
+  LITTLENUM_TYPE words[MAX_LITTLENUMS];
+  LITTLENUM_TYPE *wordP;
+  char *t;
+
+  switch (type)
+    {
+    case 'f':
+    case 'F':
+    case 's':
+    case 'S':
+      prec = 2;
+      break;
+
+    case 'd':
+    case 'D':
+    case 'r':
+    case 'R':
+      prec = 4;
+      break;
+
+    case 'x':
+    case 'X':
+      prec = 6;
+      break;
+
+    case 'p':
+    case 'P':
+      prec = 6;
+      break;
+
+    default:
+      *sizeP = 0;
+      return "Bad call to MD_ATOF()";
+    }
+
+  t = atof_ieee (input_line_pointer, type, words);
+  if (t)
+    input_line_pointer = t;
+
+  *sizeP = prec * sizeof (LITTLENUM_TYPE);
+
+  for (wordP = words; prec--;)
+    {
+      md_number_to_chars (litP, (valueT) (*wordP++), sizeof (LITTLENUM_TYPE));
+      litP += sizeof (LITTLENUM_TYPE);
+    }
+
+  return 0;
+}
+
+/* Write out big-endian.  */
+void
+md_number_to_chars (buf, val, n)
+     char *buf;
+     valueT val;
+     int n;
+{
+  if (flag_LittleEndian)
+      number_to_chars_littleendian (buf, val, n);
+  else
+     number_to_chars_bigendian (buf, val, n);
+}
+
+/* md_chars_to_number:  convert from target byte order to host byte order.  */
+
+int
+md_chars_to_number (val, n)
+     unsigned char *val;	/* Value in target byte order.  */
+     int n;			/* Number of bytes in the input.  */
+{
+  int retval;
+
+  for (retval = 0; n--;)
+    {
+      retval <<= 8;
+      retval |= val[n];
+    }
+
+  return retval;
+}
+
+bfd_boolean
+md_brownie32_fix_adjustable (fixP)
+   fixS *fixP;
+{
+  /* We need the symbol name for the VTABLE entries.  */
+  return (fixP->fx_r_type != BFD_RELOC_VTABLE_INHERIT
+          && fixP->fx_r_type != BFD_RELOC_VTABLE_ENTRY);
+}
+
+void
+md_apply_fix3 (fixP, valP, seg)
+     fixS *fixP;
+     valueT *valP;
+     segT seg ATTRIBUTE_UNUSED;
+{
+  long val = *valP;
+  char *place = fixP->fx_where + fixP->fx_frag->fr_literal;
+
+  switch (fixP->fx_r_type)
+    {
+    case RELOC_BROWNIE32_LO16:
+      if (fixP->fx_bit_fixP != (bit_fixS *) NULL)
+	{
+// AO_comment for Brownie32
+//	  val = (val & 0x0000FFFF) | fixP->fx_bit_fixP->fx_bit_base;
+ 	  val = ( (val << 16 ) & 0xFFFF0000) | fixP->fx_bit_fixP->fx_bit_base;
+// 	  val = 0;
+
+	  free (fixP->fx_bit_fixP);
+	  fixP->fx_bit_fixP = (bit_fixS *) NULL;
+	}
+#ifdef DEBUG
+      else
+	know ((fixP->fx_bit_fixP != (bit_fixS *) NULL));
+#endif
+      break;
+
+    case RELOC_BROWNIE32_REL16:
+      if (fixP->fx_bit_fixP != (bit_fixS *) NULL)
+	{
+
+// AO_comment for Brownie32
+//	  val = (val & 0x0000FFFF) | fixP->fx_bit_fixP->fx_bit_base;
+ 	  val = ( (val << 16 ) & 0xFFFF0000) | fixP->fx_bit_fixP->fx_bit_base;
+
+	  free (fixP->fx_bit_fixP);
+	  fixP->fx_bit_fixP = (bit_fixS *) NULL;
+	}
+#ifdef DEBUG
+      else
+	know ((fixP->fx_bit_fixP != (bit_fixS *) NULL));
+#endif
+      break;
+
+    case RELOC_BROWNIE32_HI16:
+      if (fixP->fx_bit_fixP != (bit_fixS *) NULL)
+	{
+
+// AO_comment for Brownie32
+//	  val = (val >> 16) | fixP->fx_bit_fixP->fx_bit_base;
+ 	  val = ( (val << 16 ) & 0xFFFF0000) | fixP->fx_bit_fixP->fx_bit_base;
+
+	  free (fixP->fx_bit_fixP);
+	  fixP->fx_bit_fixP = (bit_fixS *)NULL;
+	}
+#ifdef DEBUG
+      else
+	know ((fixP->fx_bit_fixP != (bit_fixS *) NULL));
+#endif
+      break;
+
+    case RELOC_BROWNIE32_REL26:
+
+      if (fixP->fx_bit_fixP != (bit_fixS *) NULL)
+	{
+
+
+// AO_debug
+//	printf("val rel26 1 = %x\n", val);
+
+
+// AO_comment for Brownie32
+//	  val = (val & 0x03FFFFFF) | fixP->fx_bit_fixP->fx_bit_base;
+ 	  val = ( (val << 6 ) & 0xFFFFFFC0) | fixP->fx_bit_fixP->fx_bit_base;
+
+
+// AO_debug
+//	printf("val rel26 2 = %x\n", val);
+
+
+	  free (fixP->fx_bit_fixP);
+	  fixP->fx_bit_fixP = (bit_fixS *) NULL;
+	}
+#ifdef DEBUG
+      else
+	know ((fixP->fx_bit_fixP != (bit_fixS *) NULL));
+#endif
+      break;
+
+    case BFD_RELOC_VTABLE_INHERIT:
+      /* This borrowed from tc-ppc.c on a whim.  */
+      fixP->fx_done = 0;
+      if (fixP->fx_addsy
+	  && !S_IS_DEFINED (fixP->fx_addsy)
+	  && !S_IS_WEAK (fixP->fx_addsy))
+	S_SET_WEAK (fixP->fx_addsy);
+      return;
+
+    case BFD_RELOC_VTABLE_ENTRY:
+      fixP->fx_done = 0;
+      return;
+
+    default:
+      break;
+    }
+
+  number_to_chars_bigendian (place, val, fixP->fx_size);
+  if (fixP->fx_addsy == NULL)
+    fixP->fx_done = 1;
+}
+
+const char *md_shortopts = "";
+
+struct option md_longopts[] =
+  {
+    {NULL, no_argument, NULL, 0}
+  };
+
+size_t md_longopts_size = sizeof (md_longopts);
+
+int
+md_parse_option (c, arg)
+     int c     ATTRIBUTE_UNUSED;
+     char *arg ATTRIBUTE_UNUSED;
+{
+  return 0;
+}
+
+void
+md_show_usage (stream)
+     FILE *stream ATTRIBUTE_UNUSED;
+{
+}
+
+/* This is called when a line is unrecognized.  */
+
+int
+brownie32_unrecognized_line (c)
+     int c;
+{
+  int lab;
+  char *s;
+
+  if (c != '$' || ! ISDIGIT ((unsigned char) input_line_pointer[0]))
+    return 0;
+
+  s = input_line_pointer;
+
+  lab = 0;
+  while (ISDIGIT ((unsigned char) *s))
+    {
+      lab = lab * 10 + *s - '0';
+      ++s;
+    }
+
+  if (*s != ':')
+    {
+      /* Not a label definition.  */
+      return 0;
+    }
+
+  if (dollar_label_defined (lab))
+    {
+      as_bad (_("label \"$%d\" redefined"), lab);
+      return 0;
+    }
+
+  define_dollar_label (lab);
+  colon (dollar_label_name (lab, 0));
+  input_line_pointer = s + 1;
+
+  return 1;
+}
+
+/* Default the values of symbols known that should be "predefined".  We
+   don't bother to predefine them unless you actually use one, since there
+   are a lot of them.  */
+
+symbolS *
+md_undefined_symbol (name)
+     char *name ATTRIBUTE_UNUSED;
+{
+  return NULL;
+}
+
+
+/* Parse an operand that is machine-specific, the function was called
+   in expr.c by operand() function, when everything failed before it
+   call a quit.  */
+
+void
+md_operand (expressionP)
+     expressionS* expressionP;
+{
+  /* Check for the #number representation    */
+  if (input_line_pointer[0] == '#' &&
+      ISDIGIT ((unsigned char) input_line_pointer[1]))
+    {
+      /* We have a numeric number expression.  No biggy.  */
+      input_line_pointer += 1;	/* Skip # */
+
+      (void) expression (expressionP);
+
+      if (expressionP->X_op != O_constant)
+	as_bad (_("Invalid expression after # number\n"));
+    }
+
+  return;
+}
+
+/* Round up a section size to the appropriate boundary.  */
+
+valueT
+md_section_align (segment, size)
+     segT segment ATTRIBUTE_UNUSED;
+     valueT size;
+{
+  /* Byte alignment is fine.  */
+  return size;
+}
+
+/* Exactly what point is a PC-relative offset relative TO?
+   On the 29000, they're relative to the address of the instruction,
+   which we have set up as the address of the fixup too.  */
+
+long
+md_pcrel_from (fixP)
+     fixS* fixP;
+{
+// AO_comment for Brownie32
+    return 4 + fixP->fx_where + fixP->fx_frag->fr_address;
+//    return fixP->fx_where + fixP->fx_frag->fr_address;
+
+}
+
+/* Translate internal representation of relocation info to BFD target
+   format.
+   FIXME: To what extent can we get all relevant targets to use this?
+   The above FIXME is from a29k, but I think it is also needed here.    */
+
+arelent *
+tc_gen_reloc (section, fixP)
+     asection *section ATTRIBUTE_UNUSED;
+     fixS *fixP;
+{
+  arelent * reloc;
+
+  reloc = (arelent *) xmalloc (sizeof (arelent));
+  reloc->howto = bfd_reloc_type_lookup (stdoutput, fixP->fx_r_type);
+
+  if (reloc->howto == (reloc_howto_type *) NULL)
+    {
+      as_bad_where (fixP->fx_file, fixP->fx_line,
+		    "internal error: can't export reloc type %d (`%s')",
+		    fixP->fx_r_type,
+		    bfd_get_reloc_code_name (fixP->fx_r_type));
+      return NULL;
+    }
+
+  assert (!fixP->fx_pcrel == !reloc->howto->pc_relative);
+
+  reloc->sym_ptr_ptr = (asymbol **) xmalloc (sizeof (asymbol *));
+
+  *reloc->sym_ptr_ptr = symbol_get_bfdsym (fixP->fx_addsy);
+
+  reloc->address = fixP->fx_frag->fr_address + fixP->fx_where;
+
+  if (fixP->fx_r_type == BFD_RELOC_VTABLE_ENTRY)
+    reloc->address = fixP->fx_offset;
+  reloc->addend = 0;
+
+  return reloc;
+}
+
+extern void pop_insert PARAMS ((const pseudo_typeS *));
+
+void
+brownie32_pop_insert ()
+{
+  pop_insert (brownie32_pseudo_table);
+  return ;
+}
Index: gas/config/tc-brownie32.h
===================================================================
RCS file: gas/config/tc-brownie32.h
diff -N gas/config/tc-brownie32.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ gas/config/tc-brownie32.h	8 Aug 2007 08:44:28 -0000	1.1
@@ -0,0 +1,94 @@
+/* tc-brownie32.h -- Assemble for the BROWNIE32
+   Copyright 2002, 2003 Free Software Foundation, Inc.
+
+   This file is part of GAS, the GNU Assembler.
+
+   GAS is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
+   GAS is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with GAS; see the file COPYING.  If not, write to the Free
+   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+   02111-1307, USA.  */
+
+/* Initially created by Kuang Hwa Lin, 3/20/2002.  */
+
+#define TC_BROWNIE32
+
+#ifndef BFD_ASSEMBLER
+ #error BROWNIE32 support requires BFD_ASSEMBLER
+#endif
+
+#ifndef  __BFD_H_SEEN__
+#include "bfd.h"
+#endif
+
+/* The target BFD architecture.  */
+#define TARGET_ARCH bfd_arch_brownie32
+#define TARGET_FORMAT "elf32-brownie32"
+#define TARGET_BYTES_BIG_ENDIAN	1
+
+#define WORKING_DOT_WORD
+
+#define LEX_DOLLAR 1
+
+/* #define md_operand(x) */
+extern void brownie32_pop_insert              PARAMS ((void));
+extern int set_brownie32_skip_hi16_flag       PARAMS ((int));
+
+#define md_pop_insert()		        brownie32_pop_insert ()
+
+#define md_convert_frag(b,s,f)		as_fatal ("convert_frag called\n")
+#define md_estimate_size_before_relax(f,s) \
+			(as_fatal ("estimate_size_before_relax called"),1)
+
+#define tc_unrecognized_line(c) brownie32_unrecognized_line (c)
+
+extern int brownie32_unrecognized_line PARAMS ((int));
+
+#define tc_headers_hook(a)		;	/* not used */
+#define tc_headers_hook(a)		;	/* not used */
+#define tc_crawl_symbol_chain(a)	;	/* not used */
+#define tc_coff_symbol_emit_hook(a)	;	/* not used */
+
+#define AOUT_MACHTYPE 101
+#define TC_COFF_FIX2RTYPE(fix_ptr) tc_coff_fix2rtype (fix_ptr)
+#define BFD_ARCH bfd_arch_brownie32
+#define COFF_MAGIC BROWNIE32MAGIC
+/* Should the reloc be output ?
+	on the 29k, this is true only if there is a symbol attached.
+	on the h8, this is always true, since no fixup is done
+        on brownie32, I have no idea!! but lets keep it here just for fun.
+*/
+#define TC_COUNT_RELOC(x) (x->fx_addsy)
+#define TC_CONS_RELOC BFD_RELOC_32_PCREL
+
+/* No shared lib support, so we don't need to ensure externally
+   visible symbols can be overridden.  */
+#define EXTERN_FORCE_RELOC 0
+
+#define tc_fix_adjustable(FIX) md_brownie32_fix_adjustable (FIX)
+extern bfd_boolean md_brownie32_fix_adjustable PARAMS ((struct fix *));
+
+/* Values passed to md_apply_fix3 don't include the symbol value.  */
+#define MD_APPLY_SYM_VALUE(FIX) 0
+
+#define NEED_FX_R_TYPE
+
+/* Zero Based Segment?? sound very dangerous to me!     */
+#define ZERO_BASED_SEGMENTS
+
+/* Permit temporary numeric labels.  */
+#define LOCAL_LABELS_FB 1
+
+#undef  LOCAL_LABELS_DOLLAR
+#define LOCAL_LABELS_DOLLAR 0
+
+#define DIFF_EXPR_OK		/* .-foo gets turned into PC relative relocs */
Index: gas/po/POTFILES.in
===================================================================
RCS file: /home/prj/asip/cvs/binutils/gas/po/POTFILES.in,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- gas/po/POTFILES.in	31 Jul 2007 11:39:32 -0000	1.1.1.1
+++ gas/po/POTFILES.in	8 Aug 2007 08:44:28 -0000	1.2
@@ -58,8 +58,13 @@ config/tc-d10v.c
 config/tc-d10v.h
 config/tc-d30v.c
 config/tc-d30v.h
+
 config/tc-dlx.c
+config/tc-brownie32.c
+
 config/tc-dlx.h
+config/tc-brownie32.h
+
 config/tc-fr30.c
 config/tc-fr30.h
 config/tc-frv.c
Index: gas/testsuite/gas/brownie32/alltests.exp
===================================================================
RCS file: gas/testsuite/gas/brownie32/alltests.exp
diff -N gas/testsuite/gas/brownie32/alltests.exp
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ gas/testsuite/gas/brownie32/alltests.exp	8 Aug 2007 08:44:28 -0000	1.1
@@ -0,0 +1,11 @@
+# BROWNIE32 assembler testsuite.
+
+if [istarget brownie32*-*-*] {
+    run_dump_test "branch"
+    run_dump_test "itype"
+    run_dump_test "lhi"
+    run_dump_test "load"
+    run_dump_test "lohi"
+    run_dump_test "rtype"
+    run_dump_test "store"
+}
Index: gas/testsuite/gas/brownie32/branch.d
===================================================================
RCS file: gas/testsuite/gas/brownie32/branch.d
diff -N gas/testsuite/gas/brownie32/branch.d
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ gas/testsuite/gas/brownie32/branch.d	8 Aug 2007 08:44:28 -0000	1.1
@@ -0,0 +1,43 @@
+#as:
+#objdump: -dr
+#name: branch
+
+.*: +file format .*
+
+Disassembly of section .text:
+
+00000000 <L1>:
+   0:	10 80 00 38 	beqz    r4,0x0000003c
+   4:	00 00 00 00 	nop
+   8:	14 a0 ff f4 	bnez    r5,0x00000000
+
+0000000c <L2>:
+   c:	20 04 00 44 	addi    r4,r0,0x0044
+			e: R_BROWNIE32_RELOC_16	.text
+  10:	08 00 00 30 	j       0x00000044
+  14:	00 00 00 00 	nop
+  18:	0c 00 00 20 	jal     0x0000003c
+  1c:	00 00 00 00 	nop
+  20:	50 00 00 18 	break   0x0000003c
+  24:	00 00 00 00 	nop
+  28:	47 ff ff d4 	trap    0x00000000
+  2c:	00 00 00 00 	nop
+  30:	4a 20 00 00 	jr      r17
+  34:	00 00 00 00 	nop
+  38:	4e 20 00 00 	jalr    r17
+
+0000003c <L4>:
+  3c:	8c 42 00 88 	lw      r2,0x0088\[r2\]
+  40:	40 00 00 00 	rfe     0x00000044
+
+00000044 <L5>:
+  44:	8c 02 00 00 	lw      r2,0x0000\[r0\]
+			46: R_BROWNIE32_RELOC_16	.text
+  48:	0b ff ff b4 	j       0x00000000
+  4c:	00 00 00 00 	nop
+  50:	4b e0 00 00 	jr      r31
+  54:	00 00 00 00 	nop
+  58:	4b e0 00 00 	jr      r31
+  5c:	00 00 00 00 	nop
+  60:	48 20 00 00 	jr      r1
+  64:	00 00 00 00 	nop
Index: gas/testsuite/gas/brownie32/itype.d
===================================================================
RCS file: gas/testsuite/gas/brownie32/itype.d
diff -N gas/testsuite/gas/brownie32/itype.d
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ gas/testsuite/gas/brownie32/itype.d	8 Aug 2007 08:44:28 -0000	1.1
@@ -0,0 +1,40 @@
+#as:
+#objdump: -dr
+#name: itype
+
+.*: +file format .*
+
+Disassembly of section .text:
+
+00000000 <.text>:
+   0:	20 23 7f ff 	addi    r3,r1,0x7fff
+   4:	24 23 ff fb 	addui   r3,r1,0xfffb
+   8:	28 44 00 30 	subi    r4,r2,0x0030
+   c:	2c 44 00 00 	subui   r4,r2,0x0000
+			e: R_BROWNIE32_RELOC_16_HI	.text
+  10:	30 c5 00 00 	andi    r5,r6,0x0000
+			12: R_BROWNIE32_RELOC_16	.text
+  14:	35 4c 00 78 	ori     r12,r10,0x0078
+  18:	39 af 00 00 	xori    r15,r13,0x0000
+			1a: R_BROWNIE32_RELOC_16_LO	.text
+  1c:	da 30 00 1c 	slli    r16,r17,0x001c
+			1e: R_BROWNIE32_RELOC_16	.text
+  20:	e2 93 00 0f 	srai    r19,r20,0x000f
+  24:	de f6 ff ff 	srli    r22,r23,0xffff
+  28:	63 0f 7f ff 	seqi    r15,r24,0x7fff
+  2c:	67 0f 7f ff 	snei    r15,r24,0x7fff
+  30:	6b 0f 7f ff 	slti    r15,r24,0x7fff
+  34:	6f 7a 00 00 	sgti    r26,r27,0x0000
+  38:	73 bc a3 29 	slei    r28,r29,0xa329
+  3c:	75 af 00 30 	sgei    r15,r13,0x0030
+  40:	c3 0f 7f ff 	sequi   r15,r24,0x7fff
+  44:	c7 0f 7f ff 	sneui   r15,r24,0x7fff
+  48:	cb 0f 7f ff 	sltui   r15,r24,0x7fff
+  4c:	cf 7a 00 00 	sgtui   r26,r27,0x0000
+  50:	d3 bc ff fd 	sleui   r28,r29,0xfffd
+  54:	d5 af 00 30 	sgeui   r15,r13,0x0030
+  58:	20 01 80 03 	addi    r1,r0,0x8003
+  5c:	21 28 00 00 	addi    r8,r9,0x0000
+  60:	24 01 00 00 	addui   r1,r0,0x0000
+			62: R_BROWNIE32_RELOC_16_HI	.text
+  64:	25 28 00 00 	addui   r8,r9,0x0000
Index: gas/testsuite/gas/brownie32/lhi.d
===================================================================
RCS file: gas/testsuite/gas/brownie32/lhi.d
diff -N gas/testsuite/gas/brownie32/lhi.d
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ gas/testsuite/gas/brownie32/lhi.d	8 Aug 2007 08:44:28 -0000	1.1
@@ -0,0 +1,23 @@
+#as:
+#objdump: -dr
+#name: lhi
+
+.*: +file format .*
+
+Disassembly of section .text:
+
+00000000 <.text>:
+   0:	3c 03 7f ff 	lhi     r3,0x7fff
+   4:	3c 03 00 00 	lhi     r3,0x0000
+			6: R_BROWNIE32_RELOC_16_HI	.text
+   8:	3c 04 00 00 	lhi     r4,0x0000
+			a: R_BROWNIE32_RELOC_16_LO	.text
+   c:	3c 04 ff fb 	lhi     r4,0xfffb
+			e: R_BROWNIE32_RELOC_16	.text
+  10:	3c 04 00 0c 	lhi     r4,0x000c
+  14:	20 04 00 00 	addi    r4,r0,0x0000
+  18:	20 04 00 00 	addi    r4,r0,0x0000
+			1a: R_BROWNIE32_RELOC_16_HI	.text
+  1c:	34 84 00 18 	ori     r4,r4,0x0018
+			1e: R_BROWNIE32_RELOC_16_LO	.text
+  20:	20 64 00 00 	addi    r4,r3,0x0000
Index: gas/testsuite/gas/brownie32/load.d
===================================================================
RCS file: gas/testsuite/gas/brownie32/load.d
diff -N gas/testsuite/gas/brownie32/load.d
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ gas/testsuite/gas/brownie32/load.d	8 Aug 2007 08:44:28 -0000	1.1
@@ -0,0 +1,33 @@
+#as:
+#objdump: -dr
+#name: load
+
+.*: +file format .*
+
+Disassembly of section .text:
+
+00000000 <L-0x10>:
+   0:	80 03 00 00 	lb      r3,0x0000\[r0\]
+			2: R_BROWNIE32_RELOC_16_HI	.text
+   4:	80 43 00 00 	lb      r3,0x0000\[r2\]
+   8:	80 03 00 00 	lb      r3,0x0000\[r0\]
+			a: R_BROWNIE32_RELOC_16_HI	.text
+   c:	90 43 00 00 	lbu     r3,0x0000\[r2\]
+
+00000010 <L>:
+  10:	84 a3 00 00 	lh      r3,0x0000\[r5\]
+			12: R_BROWNIE32_RELOC_16_HI	.text
+  14:	95 e3 00 08 	lhu     r3,0x0008\[r15\]
+  18:	8c 41 7f ff 	lw      r1,0x7fff\[r2\]
+  1c:	8c 01 00 08 	lw      r1,0x0008\[r0\]
+			1e: R_BROWNIE32_RELOC_16	.text
+  20:	00 00 10 00 	nop
+  24:	00 00 20 00 	nop
+  28:	74 68 69 73 	sgei    r8,r3,0x6973
+  2c:	20 69 73 20 	addi    r9,r3,0x7320
+  30:	61 20 74 65 	seqi    r0,r9,0x7465
+  34:	73 74 00 00 	slei    r20,r27,0x0000
+	...
+  40:	98 43 00 00 	ldstbu  r3,0x0000\[r2\]
+  44:	9c 43 00 00 	ldsthu  r3,0x0000\[r2\]
+  48:	b0 43 00 00 	ldstw   r3,0x0000\[r2\]
Index: gas/testsuite/gas/brownie32/lohi.d
===================================================================
RCS file: gas/testsuite/gas/brownie32/lohi.d
diff -N gas/testsuite/gas/brownie32/lohi.d
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ gas/testsuite/gas/brownie32/lohi.d	8 Aug 2007 08:44:28 -0000	1.1
@@ -0,0 +1,18 @@
+#as:
+#objdump: -dr
+#name: lohi
+
+.*: +file format .*
+
+Disassembly of section .text:
+
+00000000 <.text>:
+   0:	00 00 00 00 	nop
+   4:	3c 01 00 03 	lhi     r1,0x0003
+			6: R_BROWNIE32_RELOC_16_HI	.text
+   8:	34 01 0d 44 	ori     r1,r0,0x0d44
+			a: R_BROWNIE32_RELOC_16_LO	.text
+   c:	3c 01 0b eb 	lhi     r1,0x0beb
+			e: R_BROWNIE32_RELOC_16_HI	.text
+  10:	34 01 c2 04 	ori     r1,r0,0xc204
+			12: R_BROWNIE32_RELOC_16_LO	.text
Index: gas/testsuite/gas/brownie32/store.d
===================================================================
RCS file: gas/testsuite/gas/brownie32/store.d
diff -N gas/testsuite/gas/brownie32/store.d
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ gas/testsuite/gas/brownie32/store.d	8 Aug 2007 08:44:28 -0000	1.1
@@ -0,0 +1,22 @@
+#as:
+#objdump: -dr
+#name: store
+
+.*: +file format .*
+
+Disassembly of section .text:
+
+00000000 <L1-0x1c>:
+   0:	ac 03 00 1c 	sw      0x001c\[r0\],r3
+			2: R_BROWNIE32_RELOC_16	.text
+   4:	ac 03 00 00 	sw      0x0000\[r0\],r3
+			6: R_BROWNIE32_RELOC_16_HI	.text
+   8:	a4 43 ff 90 	sh      0xff90\[r2\],r3
+   c:	a0 03 00 3c 	sb      0x003c\[r0\],r3
+			e: R_BROWNIE32_RELOC_16	.text
+  10:	a0 03 00 30 	sb      0x0030\[r0\],r3
+  14:	ac 43 00 00 	sw      0x0000\[r2\],r3
+  18:	00 00 00 00 	nop
+
+0000001c <L1>:
+  1c:	00 00 00 00 	nop
Index: include/dis-asm.h
===================================================================
RCS file: /home/prj/asip/cvs/binutils/include/dis-asm.h,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- include/dis-asm.h	31 Jul 2007 11:39:32 -0000	1.1.1.1
+++ include/dis-asm.h	8 Aug 2007 08:44:28 -0000	1.2
@@ -223,7 +223,10 @@ extern int print_insn_little_a29k	(bfd_v
 extern int print_insn_avr		(bfd_vma, disassemble_info *);
 extern int print_insn_d10v		(bfd_vma, disassemble_info *);
 extern int print_insn_d30v		(bfd_vma, disassemble_info *);
+
 extern int print_insn_dlx 		(bfd_vma, disassemble_info *);
+extern int print_insn_brownie32 		(bfd_vma, disassemble_info *);
+
 extern int print_insn_fr30		(bfd_vma, disassemble_info *);
 extern int print_insn_hppa		(bfd_vma, disassemble_info *);
 extern int print_insn_i860		(bfd_vma, disassemble_info *);
Index: include/elf/brownie32.h
===================================================================
RCS file: include/elf/brownie32.h
diff -N include/elf/brownie32.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ include/elf/brownie32.h	8 Aug 2007 08:44:28 -0000	1.1
@@ -0,0 +1,53 @@
+/* BROWNIE32 support for BFD.
+   Copyright 2002 Free Software Foundation, Inc.
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software Foundation,
+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+
+#ifndef _ELF_BROWNIE32_H
+#define _ELF_BROWNIE32_H
+
+#include "elf/reloc-macros.h"
+
+#if 0
+START_RELOC_NUMBERS (elf_brownie32_reloc_type)
+     RELOC_NUMBER (R_BROWNIE32_NONE,            0)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_16,        1)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_26,        2)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_32,        3)
+     RELOC_NUMBER (R_BROWNIE32_GNU_VTINHERIT,   4)
+     RELOC_NUMBER (R_BROWNIE32_GNU_VTENTRY,     5)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_16_HI,     6)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_16_LO,     7)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_16_PCREL,  8)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_26_PCREL,  9)
+END_RELOC_NUMBERS (R_BROWNIE32_max)
+#else
+START_RELOC_NUMBERS (elf_brownie32_reloc_type)
+     RELOC_NUMBER (R_BROWNIE32_NONE,            0)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_8,         1)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_16,        2)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_32,        3)
+     RELOC_NUMBER (R_BROWNIE32_GNU_VTINHERIT,   4)
+     RELOC_NUMBER (R_BROWNIE32_GNU_VTENTRY,     5)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_16_HI,     6)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_16_LO,     7)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_16_PCREL,  8)
+     RELOC_NUMBER (R_BROWNIE32_RELOC_26_PCREL,  9)
+END_RELOC_NUMBERS (R_BROWNIE32_max)
+#endif /* 0 */
+
+#endif /* _ELF_BROWNIE32_H */
Index: include/elf/common.h
===================================================================
RCS file: /home/prj/asip/cvs/binutils/include/elf/common.h,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- include/elf/common.h	31 Jul 2007 11:39:32 -0000	1.1.1.1
+++ include/elf/common.h	8 Aug 2007 08:44:28 -0000	1.2
@@ -249,6 +249,10 @@
    Written in the absense of an ABI.  */
 #define EM_DLX			0x5aa5
 
+/* BROWNIE32 magic number
+   Written in the absense of an ABI.  */
+#define EM_BROWNIE32		0x1005
+
 #define EM_XSTORMY16		0xad45
 
 /* FRV magic number - no EABI available??.  */
Index: include/opcode/brownie32.h
===================================================================
RCS file: include/opcode/brownie32.h
diff -N include/opcode/brownie32.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ include/opcode/brownie32.h	11 Feb 2008 14:08:40 -0000	1.2
@@ -0,0 +1,201 @@
+/* Table of opcodes for the BROWNIE32 microprocess.
+   Copyright 2002 Free Software Foundation, Inc.
+
+   This file is part of GDB and GAS.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+
+   Initially created by Kuang Hwa Lin, 2002.   */
+
+/* Following 1 opecode is used for all RR-TYPE instructions */
+#define  RRTYPOP     0x00000001
+
+/* Following 9 opecode is used for RI-TYPE instructions */
+#define  ADDIOP      0x00000020
+#define  SUBIOP      0x00000021
+#define  ANDIOP      0x00000022
+#define  ORIOP       0x00000023
+#define  XORIOP      0x00000024
+#define  LLSIOP      0x00000025
+#define  LRSIOP      0x00000026
+#define  ARSIOP      0x00000027
+#define  LSOIOP      0x00000028
+
+/* Following 6 opecode is used for MA-TYPE instructions */
+#define  LBOP        0x00000002
+#define  LHOP        0x00000003
+#define  LWOP        0x00000004
+#define  SBOP        0x00000005
+#define  SHOP        0x00000006
+#define  SWOP        0x00000007
+
+/* Following 2 opecode is used for BR-TYPE instructions */
+#define  BRZOP       0x00000009
+#define  BRNZOP      0x0000000A
+
+/* Following 3 opecode is used for JP-TYPE instructions */
+#define  JPOP        0x0000000B
+#define  JPLOP       0x0000000C
+#define  TRAPOP      0x0000000D
+
+/* Following 2 opecode is used for JPR-TYPE instructions */
+#define  JPROP       0x0000000E
+#define  JPRLOP      0x0000000F
+
+/* Following 2 opecode is used for SP-TYPE instructions */
+#define  NOPOP       0x00000000
+#define  RETIOP      0x00000040
+
+/* Following opecode is used for RT-TYPE instructions */
+#define  EXBWOP      0x00000080
+#define  EXHWOP      0x00000880
+
+
+/* "func" and "ftype" are a inidication that kind of RR-tpye instrucitons  */
+#define  ADDFUNC     0x00000000
+#define  SUBFUNC     0x00000040
+#define  MULFUNC     0x00000080
+#define  DIVFUNC     0x000000C0
+#define  DIVUFUNC    0x00000140
+#define  MODFUNC     0x00000100
+#define  MODUFUNC    0x00000180
+#define  ANDFUNC     0x00000000
+#define  NANDFUNC    0x000000C0
+#define  ORFUNC      0x00000040
+#define  NORFUNC     0x00000100
+#define  XORFUNC     0x00000080
+#define  LLSFUNC     0x00000000
+#define  LRSFUNC     0x00000040
+#define  ARSFUNC     0x00000080
+#define  ELTFUNC     0x00000000
+#define  ELTUFUNC    0x00000040
+#define  EEQFUNC     0x00000080
+#define  ENEQFUNC    0x000000C0
+
+#define  ADDFTYP     0x00000000
+#define  SUBFTYP     0x00000000
+#define  MULFTYP     0x00000000
+#define  DIVFTYP     0x00000000
+#define  DIVUFTYP    0x00000000
+#define  MODFTYP     0x00000000
+#define  MODUFTYP    0x00000000
+#define  ANDFTYP     0x00004000
+#define  NANDFTYP    0x00004000
+#define  ORFTYP      0x00004000
+#define  NORFTYP     0x00004000
+#define  XORFTYP     0x00004000
+#define  LLSFTYP     0x00008000
+#define  LRSFTYP     0x00008000
+#define  ARSFTYP     0x00008000
+#define  ELTFTYP     0x0000C000
+#define  ELTUFTYP    0x0000C000
+#define  EEQFTYP     0x0000C000
+#define  ENEQFTYP    0x0000C000
+
+
+struct brownie32_opcode
+{
+  /* Name of the instruction.  */
+  char *name;
+
+  /* Opcode word.  */
+  unsigned long opcode;
+
+  /* A string of characters which describe the operands.
+     Valid characters are:
+     ,        Itself.  The character appears in the assembly code.
+     a        rs1      The register number is in bits 27-31 of the instruction. SOURCE
+     b        rs1      The register number is in bits 11-15 of the instruction. SOURCE
+     c        rs1      The register number is in bits  6-10 of the instruction. SOURCE
+     p        rs1      The register number is in bits 22-26 of the instruction. SOURCE
+     d        rs2      The register number is in bits 22-26 of the instruction. SOURCE
+     e        rd       The register number is in bits 17-21 of the instruction. Destination
+     f        rd       The register number is in bits  6-10 of the instruction. Destination
+     q        rd       The register number is in bits 27-31 of the instruction. Destination
+     i        An immediate operand is in bits 16-31 of the instruction. 0 extended
+     I        An immediate operand is in bits 16-31 of the instruction. sign extended
+     o	      An offset value is in bits 16-31 of the instruction.
+     O	      An offset value is in bits  6-31 of the instruction.
+     A        abusolute address
+     N	      No opperands needed, for nops.    */
+
+  char *args;
+
+};
+
+static const struct brownie32_opcode brownie32_opcodes[] =
+  {
+
+  /* Arithmetic and Logic RR-TYPE instructions.  */
+    { "add",      (RRTYPOP|ADDFUNC|ADDFTYP),     "e,a,d" }, /* ADD  (Rm + Rn)                    */
+    { "sub",      (RRTYPOP|SUBFUNC|SUBFTYP),     "e,a,d" }, /* SUB  (Rm - Rn)                    */
+    { "mul",      (RRTYPOP|MULFUNC|MULFTYP),     "e,a,d" }, /* MULTIPLY  (Rm * Rn)               */
+    { "div",      (RRTYPOP|DIVFUNC|DIVFTYP),     "e,a,d" }, /* DIVIDE    (Rm / Rn)               */
+    { "divu",     (RRTYPOP|DIVUFUNC|DIVUFTYP),   "e,a,d" }, /* DIVU      (Rm / Rn)               */
+    { "mod",      (RRTYPOP|MODFUNC|MODFTYP),     "e,a,d" }, /* MOD       (Rm % Rn)               */
+    { "modu",     (RRTYPOP|MODUFUNC|MODUFTYP),   "e,a,d" }, /* MODU      (Rm % Rn)               */
+    { "and",      (RRTYPOP|ANDFUNC|ANDFTYP),     "e,a,d" }, /* AND       (Rm & Rn)               */
+    { "nand",     (RRTYPOP|NANDFUNC|NANDFTYP),   "e,a,d" }, /* NAND      (Rm & Rn)               */
+    { "or",       (RRTYPOP|ORFUNC|ORFTYP),       "e,a,d" }, /* OR        (Rm | Rn)               */
+    { "nor",      (RRTYPOP|NORFUNC|NORFTYP),     "e,a,d" }, /* NOR       (Rm | Rn)               */
+    { "xor",      (RRTYPOP|XORFUNC|XORFTYP),     "e,a,d" }, /* EXCLUSIVE OR  (Rm ^ Rn)           */
+    { "lls",      (RRTYPOP|LLSFUNC|LLSFTYP),     "e,a,d" }, /* LOGICAL LEFT SHIFT                */
+    { "lrs",      (RRTYPOP|LRSFUNC|LRSFTYP),     "e,a,d" }, /* LOGICAL RIGHT SHIFT               */
+    { "ars",      (RRTYPOP|ARSFUNC|ARSFTYP),     "e,a,d" }, /* ARITHMETIC RIGHT SHIFT            */
+    { "elt",      (RRTYPOP|ELTFUNC|ELTFTYP),     "e,a,d" },  /* SET IF LESS   SIGNED             */
+    { "eltu",     (RRTYPOP|ELTUFUNC|ELTUFTYP),   "e,a,d" }, /* SET IF LESS UNSIGNED              */
+    { "eeq",      (RRTYPOP|EEQFUNC|EEQFTYP),     "e,a,d" }, /* SET IF EQUAL                      */
+    { "eneq",      (RRTYPOP|ENEQFUNC|ENEQFTYP),  "e,a,d" }, /* SET IF NOT EQUAL                  */
+  /* Arithmetic and Logic RI-TYPE instructions.  */
+    { "addi",     (ADDIOP),   "f,b,i" },                    /* ADD  (Rm + Immediate)             */
+    { "subi",     (SUBIOP),   "f,b,i" },                    /* SUB  (Rm - Immediate)             */
+    { "andi",     (ANDIOP),   "f,b,i" },                    /* AND  (Rm & Immediate)             */
+    { "ori",       (ORIOP),   "f,b,i" },                    /* OR   (Rm | Immediate)             */
+    { "xori",     (XORIOP),   "f,b,i" },                    /* EXCLUSIVE OR  (Rm ^ Immediate)    */
+    { "llsi",     (LLSIOP),   "f,b,i" },                    /* LOGICAL LEFT SHIFT Immediate      */
+    { "lrsi",     (LRSIOP),   "f,b,i" },                    /* LOGICAL LEFT SHIFT Immediate      */
+    { "arsi",     (ARSIOP),   "f,b,i" },                    /* ARITHMETIC RIGHT SHIFT Immediate  */
+    { "lsoi",     (LSOIOP),   "f,b,i" },                    /* 16bit LEFT SHIFT and OR Immediate */
+  /* Arithmetic and Logic MA-TYPE instructions.  */
+    { "lb",     (LBOP),    "f,b,A" },                       /* LOAD 1BYTE DATA                   */
+    { "lh",     (LHOP),    "f,b,A" },                       /* LOAD 2BYTE DATA                   */
+    { "lw",     (LWOP),    "f,b,A" },                       /* LOAD 4BYTE DATA                   */
+    { "sb",     (SBOP),    "b,f,A" },                       /* STORE 1BYTE DATA                  */
+    { "sh",     (SHOP),    "b,f,A" },                       /* STORE 2BYTE DATA                  */
+    { "sw",     (SWOP),    "b,f,A" },                       /* STORE 4BYTE DATA                  */
+  /* Arithmetic and Logic BR-TYPE instructions.  */
+    { "brz",     (BRZOP),   "b,o" },                        /* BRANCH IF RS1 == 0                */
+    { "brnz",    (BRNZOP),  "b,o" },                        /* BRANCH IF RS1 != 0                */
+  /* Arithmetic and Logic JP-TYPE instructions.  */
+    { "jp",     (JPOP),     "O" },                        /* RELATIVE JUMP                    */
+    { "jpl",    (JPLOP),    "O" },                        /* SET NEXT ADDR AND RELATIVE JUMP  */
+    { "trap",   (TRAPOP),   "O" },                        /* OCCURE SOFTWARE INTERRUPT        */
+  /* Arithmetic and Logic JPR-TYPE instructions.  */
+    { "jpr",     (JPROP),    "c" },                        /* ABSOLUTE JUMP                    */
+    { "jprl",    (JPRLOP),   "c" },                        /* SET NEXT ADDR AND ABSOLUTE JUMP  */
+  /* Arithmetic and Logic SP-TYPE instructions.  */
+    { "nop",     (NOPOP),   "N" },                        /* NOT OPERATTON                    */
+    { "reti",    (RETIOP),  "N" },                        /* RETURN FROM INTERRUPT ROUTINE    */
+  /* Arithmetic and Logic RT-TYPE instructions.  */
+    { "exbw",    (EXBWOP),  "q,p" },                      /* EXTEND BYTE TO WORD              */
+    { "exhw",    (EXHWOP),  "q,p" },                      /* EXTEND HALF WORD TO WORD         */
+
+    { "", 0x0, "" }		/* Dummy entry, not included in NUM_OPCODES.
+				   This lets code examine entry i + 1 without
+				   checking if we've run off the end of the table.  */
+
+  };
+
+const unsigned int num_brownie32_opcodes = (((sizeof brownie32_opcodes) / (sizeof brownie32_opcodes[0])) - 1);
Index: ld/Makefile.am
===================================================================
RCS file: /home/prj/asip/cvs/binutils/ld/Makefile.am,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- ld/Makefile.am	31 Jul 2007 11:39:33 -0000	1.1.1.1
+++ ld/Makefile.am	8 Aug 2007 08:44:28 -0000	1.2
@@ -147,6 +147,7 @@ ALL_EMULATIONS = \
 	ed30velf.o \
 	edelta68.o \
 	eelf32_dlx.o \
+	eelf32_brownie32.o \
 	eebmon29k.o \
 	eelf32_i960.o \
 	eelf32_i860.o \
@@ -611,6 +612,9 @@ edelta68.c: $(srcdir)/emulparams/delta68
 eelf32_dlx.c: $(srcdir)/emulparams/elf32_dlx.sh \
   $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/dlx.sc ${GEN_DEPENDS}
 	${GENSCRIPTS} elf32_dlx "$(tdir_elf32_dlx)"
+eelf32_brownie32.c: $(srcdir)/emulparams/elf32_brownie32.sh \
+  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/brownie32.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} elf32_brownie32 "$(tdir_elf32_brownie32)"
 eebmon29k.c: $(srcdir)/emulparams/ebmon29k.sh \
   $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/ebmon29k.sc ${GEN_DEPENDS}
 	${GENSCRIPTS} ebmon29k "$(tdir_ebmon29k)"
Index: ld/Makefile.in
===================================================================
RCS file: /home/prj/asip/cvs/binutils/ld/Makefile.in,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- ld/Makefile.in	31 Jul 2007 11:39:33 -0000	1.1.1.1
+++ ld/Makefile.in	8 Aug 2007 08:44:28 -0000	1.2
@@ -167,8 +167,7 @@ MANCONF = -Dman
 
 TEXI2POD = perl $(BASEDIR)/etc/texi2pod.pl
 
-POD2MAN = pod2man --center="GNU Development Tools" \
-	--release="binutils-$(VERSION)" --section=1
+POD2MAN = pod2man --center="GNU Development Tools" 	--release="binutils-$(VERSION)" --section=1
 
 
 #stuff for self hosting (can be overridden in config file).
@@ -177,49 +176,19 @@ HOSTING_LIBS = @HOSTING_LIBS@
 HOSTING_EMU = -m $(EMUL)
 
 # Setup the testing framework, if you have one
-EXPECT = `if [ -f $$r/../expect/expect ] ; \
-	then echo $$r/../expect/expect ; \
-	else echo expect ; fi`
+EXPECT = `if [ -f $$r/../expect/expect ] ; 	then echo $$r/../expect/expect ; 	else echo expect ; fi`
 
 
-RUNTEST = `if [ -f $${srcroot}/../dejagnu/runtest ] ; \
-	then echo $${srcroot}/../dejagnu/runtest ; \
-	else echo runtest ; fi`
+RUNTEST = `if [ -f $${srcroot}/../dejagnu/runtest ] ; 	then echo $${srcroot}/../dejagnu/runtest ; 	else echo runtest ; fi`
 
 
 RUNTESTFLAGS = 
 
-CC_FOR_TARGET = ` \
-  if [ -f $$r/../gcc/xgcc ] ; then \
-    if [ -f $$r/../newlib/Makefile ] ; then \
-      echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc; \
-    else \
-      echo $$r/../gcc/xgcc -B$$r/../gcc/; \
-    fi; \
-  else \
-    if [ "@host@" = "@target@" ] ; then \
-      echo $(CC); \
-    else \
-      echo gcc | sed '$(transform)'; \
-    fi; \
-  fi`
+CC_FOR_TARGET = `   if [ -f $$r/../gcc/xgcc ] ; then     if [ -f $$r/../newlib/Makefile ] ; then       echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc;     else       echo $$r/../gcc/xgcc -B$$r/../gcc/;     fi;   else     if [ "@host@" = "@target@" ] ; then       echo $(CC);     else       echo gcc | sed '$(transform)';     fi;   fi`
 
 
 CXX = gcc
-CXX_FOR_TARGET = ` \
-  if [ -f $$r/../gcc/xgcc ] ; then \
-    if [ -f $$r/../newlib/Makefile ] ; then \
-      echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc; \
-    else \
-      echo $$r/../gcc/xgcc -B$$r/../gcc/; \
-    fi; \
-  else \
-    if [ "@host@" = "@target@" ] ; then \
-      echo $(CXX); \
-    else \
-      echo gcc | sed '$(transform)'; \
-    fi; \
-  fi`
+CXX_FOR_TARGET = `   if [ -f $$r/../gcc/xgcc ] ; then     if [ -f $$r/../newlib/Makefile ] ; then       echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc;     else       echo $$r/../gcc/xgcc -B$$r/../gcc/;     fi;   else     if [ "@host@" = "@target@" ] ; then       echo $(CXX);     else       echo gcc | sed '$(transform)';     fi;   fi`
 
 
 noinst_PROGRAMS = ld-new
@@ -232,320 +201,25 @@ INCLUDES = -D_GNU_SOURCE -I. -I$(srcdir)
 BFDLIB = ../bfd/libbfd.la
 LIBIBERTY = ../libiberty/libiberty.a
 
-ALL_EMULATIONS = \
-	ea29k.o \
-	eaixppc.o \
-	eaixrs6.o \
-	ealpha.o \
-	earcelf.o \
-	earm_epoc_pe.o \
-	earmaoutb.o \
-	earmaoutl.o \
-	earmcoff.o \
-	earmelf.o \
-	earmelfb.o \
-	earmelf_fbsd.o \
-	earmelf_linux.o \
-	earmelf_linux_eabi.o \
-	earmelfb_linux.o \
-	earmelfb_linux_eabi.o \
-	earmelf_nbsd.o \
-	earmelfb_nbsd.o \
-	earmelf_vxworks.o \
-	earmnto.o \
-	earmnbsd.o \
-	earmpe.o \
-	earmsymbian.o \
-	eavr2.o \
-	eavr1.o \
-	eavr3.o \
-	eavr4.o \
-	eavr5.o \
-	ecoff_i860.o \
-	ecoff_sparc.o \
-	ecrisaout.o \
-	ecriself.o \
-	ecrislinux.o \
-	ed10velf.o \
-	ed30v_e.o \
-	ed30v_o.o \
-	ed30velf.o \
-	edelta68.o \
-	eelf32_dlx.o \
-	eebmon29k.o \
-	eelf32_i960.o \
-	eelf32_i860.o \
-	eelf32_sparc.o \
-	eelf32b4300.o \
-	eelf32cr16c.o \
-	eelf32bmip.o \
-	eelf32bmipn32.o \
-	eelf32btsmip.o \
-	eelf32crx.o \
-	eelf32btsmipn32.o \
-	eelf32ltsmip.o \
-	eelf32ltsmipn32.o \
-	eelf32ebmip.o \
-	eelf32elmip.o \
-	eelf32fr30.o \
-	eelf32frv.o \
-	eelf32i370.o \
-	eelf32ip2k.o \
-	eelf32iq2000.o \
-	eelf32iq10.o \
-	eelf32l4300.o \
-	eelf32lmip.o \
-	eelf32lppc.o \
-	eelf32lppcnto.o \
-	eelf32lppcsim.o \
-	eelf32mcore.o \
-	eelf32mipswindiss.o \
-	eelf32openrisc.o \
-	eelf32ppc.o \
-	eelf32ppc_fbsd.o \
-	eelf32ppclinux.o \
-	eelf32ppcnto.o \
-	eelf32ppcsim.o \
-	eelf32ppcwindiss.o \
-	eelf32vax.o \
-	eelf32xstormy16.o \
-	eelf32xtensa.o \
-	eelf_i386.o \
-	eelf_i386_be.o \
-	eelf_i386_chaos.o \
-	eelf_i386_fbsd.o \
-	eelf_i386_ldso.o \
-	eelf_s390.o \
-	egld960.o \
-	egld960coff.o \
-	eh8300.o \
-	eh8300h.o \
-	eh8300s.o \
-	eh8300elf.o \
-	eh8300hn.o \
-	eh8300sn.o \
-	eh8300sx.o \
-	eh8300helf.o \
-	eh8300self.o \
-	eh8300hnelf.o \
-	eh8300snelf.o \
-	eh8300sxelf.o \
-	eh8300sxn.o \
-	eh8300sxnelf.o \
-	eh8500.o \
-	eh8500b.o \
-	eh8500c.o \
-	eh8500m.o \
-	eh8500s.o \
-	ehp300bsd.o \
-	ehp3hpux.o \
-	ehppaelf.o \
-	ehppalinux.o \
-	ehppanbsd.o \
-	ehppaobsd.o \
-	ei386aout.o \
-	ei386beos.o \
-	ei386bsd.o \
-	ei386coff.o \
-	ei386go32.o \
-	ei386linux.o \
-	ei386lynx.o \
-	ei386mach.o \
-	ei386moss.o \
-	ei386msdos.o \
-	ei386nbsd.o \
-	ei386nto.o \
-	ei386nw.o \
-	ei386pe.o \
-	ei386pe_posix.o \
-	elnk960.o \
-	em32relf.o \
-	em32rlelf.o \
-	em32relf_linux.o \
-	em32rlelf_linux.o \
-	em68hc11elf.o \
-	em68hc11elfb.o \
-	em68hc12elf.o \
-	em68hc12elfb.o \
-	em68k4knbsd.o \
-	em68kaout.o \
-	em68kaux.o \
-	em68kcoff.o \
-	em68kelf.o \
-	em68kelfnbsd.o \
-	em68klinux.o \
-	em68klynx.o \
-	em68knbsd.o \
-	em68kpsos.o \
-	em88kbcs.o \
-	emaxqcoff.o \
-	emcorepe.o \
-	emipsbig.o \
-	emipsbsd.o \
-	emipsidt.o \
-	emipsidtl.o \
-	emipslit.o \
-	emipslnews.o \
-	emipspe.o \
-	emsp430x110.o \
-	emsp430x112.o \
-	emsp430x1101.o \
-	emsp430x1111.o \
-	emsp430x1121.o \
-	emsp430x1122.o \
-	emsp430x1132.o \
-	emsp430x122.o \
-	emsp430x123.o \
-	emsp430x1222.o \
-	emsp430x1232.o \
-	emsp430x133.o \
-	emsp430x135.o \
-	emsp430x1331.o \
-	emsp430x1351.o \
-	emsp430x147.o \
-	emsp430x148.o \
-	emsp430x149.o \
-	emsp430x155.o \
-	emsp430x156.o \
-	emsp430x157.o \
-	emsp430x167.o \
-	emsp430x168.o \
-	emsp430x169.o \
-	emsp430x1610.o \
-	emsp430x1611.o \
-	emsp430x1612.o \
-	emsp430x311.o \
-	emsp430x312.o \
-	emsp430x313.o \
-	emsp430x314.o \
-	emsp430x315.o \
-	emsp430x323.o \
-	emsp430x325.o \
-	emsp430x336.o \
-	emsp430x337.o \
-	emsp430x412.o \
-	emsp430x413.o \
-	emsp430x415.o \
-	emsp430x417.o \
-	emsp430xE423.o \
-	emsp430xE425.o \
-	emsp430xE427.o \
-	emsp430xW423.o \
-	emsp430xW425.o \
-	emsp430xW427.o \
-	emsp430xG437.o \
-	emsp430xG438.o \
-	emsp430xG439.o \
-	emsp430x435.o \
-	emsp430x436.o \
-	emsp430x437.o \
-	emsp430x447.o \
-	emsp430x448.o \
-	emsp430x449.o \
-	enews.o \
-	ens32knbsd.o \
-	eor32.o \
-	eor32elf.o \
-	epc532macha.o \
-	epdp11.o \
-	epjelf.o \
-	epjlelf.o \
-	eppcmacos.o \
-	eppcnw.o \
-	eppcpe.o \
-	eppclynx.o \
-	eriscix.o \
-	esa29200.o \
-	esh.o \
-	eshelf32.o \
-	eshlelf32.o \
-	eshelf32_linux.o \
-	eshlelf32_linux.o \
-	eshelf32_nbsd.o \
-	eshlelf32_nbsd.o \
-	eshelf.o \
-	eshelf_linux.o \
-	eshlelf_linux.o \
-	eshelf_nbsd.o \
-	eshlelf_nbsd.o \
-	eshelf_nto.o \
-	eshlelf_nto.o \
-	eshl.o \
-	eshlelf.o \
-	eshlsymbian.o \
-	eshpe.o \
-	esparcaout.o \
-	esparclinux.o \
-	esparclynx.o \
-	esparcnbsd.o \
-	est2000.o \
-	esun3.o \
-	esun4.o \
-	etic30aout.o \
-	etic30coff.o \
-	etic3xcoff.o \
-	etic3xcoff_onchip.o \
-	etic4xcoff.o \
-	etic54xcoff.o \
-	etic80coff.o \
-	evanilla.o \
-	evax.o \
-	evaxnbsd.o \
-	evsta.o \
-	ew65.o \
-	ez8001.o \
-	  eelf32frvfd.o \
-	ez8002.o
-
-
-ALL_64_EMULATIONS = \
-	eelf64_aix.o \
-	eelf64_ia64.o \
-	eelf64_ia64_fbsd.o \
-	eshelf64.o \
-	eshlelf64.o \
-	eshelf64_nbsd.o \
-	eshlelf64_nbsd.o \
-	eelf_x86_64.o \
-	eelf_x86_64_fbsd.o \
-	eelf64_s390.o \
-	eelf64_sparc.o \
-	eelf64_sparc_fbsd.o \
-	eelf64alpha.o \
-	eelf64alpha_fbsd.o \
-	eelf64alpha_nbsd.o \
-	eelf64bmip.o \
-	eelf64btsmip.o \
-	eelf64ltsmip.o \
-	eelf64hppa.o \
-	eelf64mmix.o \
-	emmo.o \
-	eelf64ppc.o \
-	eelf64lppc.o \
-	ehppa64linux.o
-
-
-ALL_EMUL_EXTRA_OFILES = \
-	deffilep.o \
-	pe-dll.o
-
-
-CFILES = ldctor.c ldemul.c ldexp.c ldfile.c ldlang.c \
-	ldmain.c ldmisc.c ldver.c ldwrite.c lexsup.c \
-	mri.c ldcref.c pe-dll.c
-
-
-HFILES = ld.h ldctor.h ldemul.h ldexp.h ldfile.h \
-	ldlang.h ldlex.h ldmain.h ldmisc.h ldver.h \
-	ldwrite.h mri.h deffile.h pe-dll.h
+ALL_EMULATIONS =  	ea29k.o 	eaixppc.o 	eaixrs6.o 	ealpha.o 	earcelf.o 	earm_epoc_pe.o 	earmaoutb.o 	earmaoutl.o 	earmcoff.o 	earmelf.o 	earmelfb.o 	earmelf_fbsd.o 	earmelf_linux.o 	earmelf_linux_eabi.o 	earmelfb_linux.o 	earmelfb_linux_eabi.o 	earmelf_nbsd.o 	earmelfb_nbsd.o 	earmelf_vxworks.o 	earmnto.o 	earmnbsd.o 	earmpe.o 	earmsymbian.o 	eavr2.o 	eavr1.o 	eavr3.o 	eavr4.o 	eavr5.o 	ecoff_i860.o 	ecoff_sparc.o 	ecrisaout.o 	ecriself.o 	ecrislinux.o 	ed10velf.o 	ed30v_e.o 	ed30v_o.o 	ed30velf.o 	edelta68.o 	eelf32_dlx.o 	eelf32_brownie32.o 	eebmon29k.o 	eelf32_i960.o 	eelf32_i860.o 	eelf32_sparc.o 	eelf32b4300.o 	eelf32cr16c.o 	eelf32bmip.o 	eelf32bmipn32.o 	eelf32btsmip.o 	eelf32crx.o 	eelf32btsmipn32.o 	eelf32ltsmip.o 	eelf32ltsmipn32.o 	eelf32ebmip.o 	eelf32elmip.o 	eelf32fr30.o 	eelf32frv.o 	eelf32i370.o 	eelf32ip2k.o 	eelf32iq2000.o 	eelf32iq10.o 	eelf32l4300.o 	eelf32lmip.o 	eelf32lppc.o 	eelf32lppcnto.o 	eelf32lppcsim.o 	eelf32mcore.o 	eelf32mipswindiss.o 	eelf32openrisc.o 	eelf32ppc.o 	eelf32ppc_fbsd.o 	eelf32ppclinux.o 	eelf32ppcnto.o 	eelf32ppcsim.o 	eelf32ppcwindiss.o 	eelf32vax.o 	eelf32xstormy16.o 	eelf32xtensa.o 	eelf_i386.o 	eelf_i386_be.o 	eelf_i386_chaos.o 	eelf_i386_fbsd.o 	eelf_i386_ldso.o 	eelf_s390.o 	egld960.o 	egld960coff.o 	eh8300.o 	eh8300h.o 	eh8300s.o 	eh8300elf.o 	eh8300hn.o 	eh8300sn.o 	eh8300sx.o 	eh8300helf.o 	eh8300self.o 	eh8300hnelf.o 	eh8300snelf.o 	eh8300sxelf.o 	eh8300sxn.o 	eh8300sxnelf.o 	eh8500.o 	eh8500b.o 	eh8500c.o 	eh8500m.o 	eh8500s.o 	ehp300bsd.o 	ehp3hpux.o 	ehppaelf.o 	ehppalinux.o 	ehppanbsd.o 	ehppaobsd.o 	ei386aout.o 	ei386beos.o 	ei386bsd.o 	ei386coff.o 	ei386go32.o 	ei386linux.o 	ei386lynx.o 	ei386mach.o 	ei386moss.o 	ei386msdos.o 	ei386nbsd.o 	ei386nto.o 	ei386nw.o 	ei386pe.o 	ei386pe_posix.o 	elnk960.o 	em32relf.o 	em32rlelf.o 	em32relf_linux.o 	em32rlelf_linux.o 	em68hc11elf.o 	em68hc11elfb.o 	em68hc12elf.o 	em68hc12elfb.o 	em68k4knbsd.o 	em68kaout.o 	em68kaux.o 	em68kcoff.o 	em68kelf.o 	em68kelfnbsd.o 	em68klinux.o 	em68klynx.o 	em68knbsd.o 	em68kpsos.o 	em88kbcs.o 	emaxqcoff.o 	emcorepe.o 	emipsbig.o 	emipsbsd.o 	emipsidt.o 	emipsidtl.o 	emipslit.o 	emipslnews.o 	emipspe.o 	emsp430x110.o 	emsp430x112.o 	emsp430x1101.o 	emsp430x1111.o 	emsp430x1121.o 	emsp430x1122.o 	emsp430x1132.o 	emsp430x122.o 	emsp430x123.o 	emsp430x1222.o 	emsp430x1232.o 	emsp430x133.o 	emsp430x135.o 	emsp430x1331.o 	emsp430x1351.o 	emsp430x147.o 	emsp430x148.o 	emsp430x149.o 	emsp430x155.o 	emsp430x156.o 	emsp430x157.o 	emsp430x167.o 	emsp430x168.o 	emsp430x169.o 	emsp430x1610.o 	emsp430x1611.o 	emsp430x1612.o 	emsp430x311.o 	emsp430x312.o 	emsp430x313.o 	emsp430x314.o 	emsp430x315.o 	emsp430x323.o 	emsp430x325.o 	emsp430x336.o 	emsp430x337.o 	emsp430x412.o 	emsp430x413.o 	emsp430x415.o 	emsp430x417.o 	emsp430xE423.o 	emsp430xE425.o 	emsp430xE427.o 	emsp430xW423.o 	emsp430xW425.o 	emsp430xW427.o 	emsp430xG437.o 	emsp430xG438.o 	emsp430xG439.o 	emsp430x435.o 	emsp430x436.o 	emsp430x437.o 	emsp430x447.o 	emsp430x448.o 	emsp430x449.o 	enews.o 	ens32knbsd.o 	eor32.o 	eor32elf.o 	epc532macha.o 	epdp11.o 	epjelf.o 	epjlelf.o 	eppcmacos.o 	eppcnw.o 	eppcpe.o 	eppclynx.o 	eriscix.o 	esa29200.o 	esh.o 	eshelf32.o 	eshlelf32.o 	eshelf32_linux.o 	eshlelf32_linux.o 	eshelf32_nbsd.o 	eshlelf32_nbsd.o 	eshelf.o 	eshelf_linux.o 	eshlelf_linux.o 	eshelf_nbsd.o 	eshlelf_nbsd.o 	eshelf_nto.o 	eshlelf_nto.o 	eshl.o 	eshlelf.o 	eshlsymbian.o 	eshpe.o 	esparcaout.o 	esparclinux.o 	esparclynx.o 	esparcnbsd.o 	est2000.o 	esun3.o 	esun4.o 	etic30aout.o 	etic30coff.o 	etic3xcoff.o 	etic3xcoff_onchip.o 	etic4xcoff.o 	etic54xcoff.o 	etic80coff.o 	evanilla.o 	evax.o 	evaxnbsd.o 	evsta.o 	ew65.o 	ez8001.o 	  eelf32frvfd.o 	ez8002.o
+
+
+ALL_64_EMULATIONS =  	eelf64_aix.o 	eelf64_ia64.o 	eelf64_ia64_fbsd.o 	eshelf64.o 	eshlelf64.o 	eshelf64_nbsd.o 	eshlelf64_nbsd.o 	eelf_x86_64.o 	eelf_x86_64_fbsd.o 	eelf64_s390.o 	eelf64_sparc.o 	eelf64_sparc_fbsd.o 	eelf64alpha.o 	eelf64alpha_fbsd.o 	eelf64alpha_nbsd.o 	eelf64bmip.o 	eelf64btsmip.o 	eelf64ltsmip.o 	eelf64hppa.o 	eelf64mmix.o 	emmo.o 	eelf64ppc.o 	eelf64lppc.o 	ehppa64linux.o
+
+
+ALL_EMUL_EXTRA_OFILES =  	deffilep.o 	pe-dll.o
+
+
+CFILES = ldctor.c ldemul.c ldexp.c ldfile.c ldlang.c 	ldmain.c ldmisc.c ldver.c ldwrite.c lexsup.c 	mri.c ldcref.c pe-dll.c
+
+
+HFILES = ld.h ldctor.h ldemul.h ldexp.h ldfile.h 	ldlang.h ldlex.h ldmain.h ldmisc.h ldver.h 	ldwrite.h mri.h deffile.h pe-dll.h
 
 
 GENERATED_CFILES = ldgram.c ldlex.c deffilep.c
 GENERATED_HFILES = ldgram.h ldemul-list.h deffilep.h
 
-OFILES = ldgram.o ldlex.o lexsup.o ldlang.o mri.o ldctor.o ldmain.o \
-	ldwrite.o ldexp.o  ldemul.o ldver.o ldmisc.o \
-	ldfile.o ldcref.o ${EMULATION_OFILES} ${EMUL_EXTRA_OFILES}
+OFILES = ldgram.o ldlex.o lexsup.o ldlang.o mri.o ldctor.o ldmain.o 	ldwrite.o ldexp.o  ldemul.o ldver.o ldmisc.o 	ldfile.o ldcref.o ${EMULATION_OFILES} ${EMUL_EXTRA_OFILES}
 
 
 STAGESTUFF = *.o ldscripts/* e*.c
@@ -564,8 +238,7 @@ GEN_DEPENDS = $(srcdir)/genscripts.sh st
 # We need this for automake to use YLWRAP.
 EXTRA_ld_new_SOURCES = deffilep.y
 
-ld_new_SOURCES = ldgram.y ldlex.l lexsup.c ldlang.c mri.c ldctor.c ldmain.c \
-	ldwrite.c ldexp.c ldemul.c ldver.c ldmisc.c ldfile.c ldcref.c
+ld_new_SOURCES = ldgram.y ldlex.l lexsup.c ldlang.c mri.c ldctor.c ldmain.c 	ldwrite.c ldexp.c ldemul.c ldver.c ldmisc.c ldfile.c ldcref.c
 
 ld_new_DEPENDENCIES = $(EMULATION_OFILES) $(EMUL_EXTRA_OFILES) $(BFDLIB) $(LIBIBERTY) $(INTLDEPS)
 ld_new_LDADD = $(EMULATION_OFILES) $(EMUL_EXTRA_OFILES) $(BFDLIB) $(LIBIBERTY) $(INTLLIBS)
@@ -578,8 +251,7 @@ MAINTAINERCLEANFILES = ldver.texi
 # We want to reconfigure if configure.host or configure.tgt changes.
 CONFIG_STATUS_DEPENDENCIES = $(srcdir)/configure.host $(srcdir)/configure.tgt
 
-MOSTLYCLEANFILES = $(STAGESTUFF) ld1$(EXEEXT) ld2$(EXEEXT) ld3$(EXEEXT) \
-	ldemul-list.h crtbegin.o crtend.o ld.log ld.sum
+MOSTLYCLEANFILES = $(STAGESTUFF) ld1$(EXEEXT) ld2$(EXEEXT) ld3$(EXEEXT) 	ldemul-list.h crtbegin.o crtend.o ld.log ld.sum
 
 CLEANFILES = dep.sed DEP DEPA DEP1 DEP2
 
@@ -1111,7 +783,7 @@ distclean-generic:
 	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)
 
 maintainer-clean-generic:
-	-test -z "ldlex.cdeffilep.hdeffilep.cldgram.hldgram.c$(MAINTAINERCLEANFILES)" || rm -f ldlex.c deffilep.h deffilep.c ldgram.h ldgram.c $(MAINTAINERCLEANFILES)
+	-test -z "ldlexcdeffilephdeffilepcldgramhldgramc$(MAINTAINERCLEANFILES)" || rm -f ldlexc deffileph deffilepc ldgramh ldgramc $(MAINTAINERCLEANFILES)
 mostlyclean-am:  mostlyclean-hdr mostlyclean-noinstPROGRAMS \
 		mostlyclean-compile mostlyclean-libtool \
 		mostlyclean-aminfo mostlyclean-tags mostlyclean-generic \
@@ -1348,6 +1020,9 @@ edelta68.c: $(srcdir)/emulparams/delta68
 eelf32_dlx.c: $(srcdir)/emulparams/elf32_dlx.sh \
   $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/dlx.sc ${GEN_DEPENDS}
 	${GENSCRIPTS} elf32_dlx "$(tdir_elf32_dlx)"
+eelf32_brownie32.c: $(srcdir)/emulparams/elf32_brownie32.sh \
+  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/brownie32.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} elf32_brownie32 "$(tdir_elf32_brownie32)"
 eebmon29k.c: $(srcdir)/emulparams/ebmon29k.sh \
   $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/ebmon29k.sc ${GEN_DEPENDS}
 	${GENSCRIPTS} ebmon29k "$(tdir_ebmon29k)"
Index: ld/configure.tgt
===================================================================
RCS file: /home/prj/asip/cvs/binutils/ld/configure.tgt,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- ld/configure.tgt	31 Jul 2007 11:39:33 -0000	1.1.1.1
+++ ld/configure.tgt	8 Aug 2007 08:44:28 -0000	1.2
@@ -40,7 +40,10 @@ d10v-*-*)		targ_emul=d10velf ;;
 d30v-*-*ext*)		targ_emul=d30v_e; targ_extra_emuls="d30velf d30v_o" ;;
 d30v-*-*onchip*)	targ_emul=d30v_o; targ_extra_emuls="d30velf d30v_e" ;;
 d30v-*-*)		targ_emul=d30velf; targ_extra_emuls="d30v_e d30v_o" ;;
+
 dlx-*-elf*)		targ_emul=elf32_dlx ;;
+brownie32-*-elf*)		targ_emul=elf32_brownie32 ;;
+
 sparc64-*-aout*)	targ_emul=sparcaout ;;
 sparc64-*-elf*)		targ_emul=elf64_sparc ;;
 sparc-sun-sunos4*) 	targ_emul=sun4 ;;
Index: ld/emulparams/elf32_brownie32.sh
===================================================================
RCS file: ld/emulparams/elf32_brownie32.sh
diff -N ld/emulparams/elf32_brownie32.sh
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ ld/emulparams/elf32_brownie32.sh	8 Aug 2007 08:44:28 -0000	1.1
@@ -0,0 +1,9 @@
+SCRIPT_NAME=brownie32
+TEMPLATE_NAME=generic
+OUTPUT_FORMAT="elf32-brownie32"
+ARCH=brownie32
+MACHINE=
+TEXT_START_ADDR=0x10000000
+TARGET_PAGE_SIZE=1
+EMBEDDED=yes
+MAXPAGESIZE=1
Index: ld/scripttempl/brownie32.sc
===================================================================
RCS file: ld/scripttempl/brownie32.sc
diff -N ld/scripttempl/brownie32.sc
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ ld/scripttempl/brownie32.sc	8 Aug 2007 08:44:28 -0000	1.1
@@ -0,0 +1,30 @@
+cat <<EOF
+OUTPUT_FORMAT("${OUTPUT_FORMAT}", "${BIG_OUTPUT_FORMAT}",
+	      "${LITTLE_OUTPUT_FORMAT}")
+OUTPUT_ARCH(${ARCH})
+
+${RELOCATING+${LIB_SEARCH_DIRS}}
+SECTIONS
+{
+  ${RELOCATING+. = ${TEXT_START_ADDR};}
+  .text :
+  {
+    CREATE_OBJECT_SYMBOLS
+    *(.text)
+    ${RELOCATING+etext = ${DATA_ALIGNMENT};}
+  }
+  ${RELOCATING+. = ${DATA_ALIGNMENT};}
+  .data :
+  {
+    *(.data)
+    ${CONSTRUCTING+CONSTRUCTORS}
+    ${RELOCATING+edata  =  .;}
+  }
+  .bss :
+  {
+   *(.bss)
+   *(COMMON)
+   ${RELOCATING+end = . };
+  }
+}
+EOF
Index: ld/testsuite/ld-discard/discard.exp
===================================================================
RCS file: /home/prj/asip/cvs/binutils/ld/testsuite/ld-discard/discard.exp,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- ld/testsuite/ld-discard/discard.exp	31 Jul 2007 11:39:33 -0000	1.1.1.1
+++ ld/testsuite/ld-discard/discard.exp	8 Aug 2007 08:44:28 -0000	1.2
@@ -41,7 +41,7 @@ for { set i 0 } { $i < [llength $test_li
     # We need to strip the ".d", but can leave the dirname.
     verbose [file rootname [lindex $test_list $i]]
     # These fail because they use the generic linker.
-    setup_xfail "arc-*" "d30v-*" "dlx-*" "i960-*" "m6812-*" "m68hc12-*"
+    setup_xfail "arc-*" "d30v-*" "dlx-*" "brownie32-*" "i960-*" "m6812-*" "m68hc12-*"
     setup_xfail "or32-*" "pj-*"
     run_dump_test [file rootname [lindex $test_list $i]]
 }
Index: ld/testsuite/ld-elf/merge.d
===================================================================
RCS file: /home/prj/asip/cvs/binutils/ld/testsuite/ld-elf/merge.d,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- ld/testsuite/ld-elf/merge.d	31 Jul 2007 11:39:33 -0000	1.1.1.1
+++ ld/testsuite/ld-elf/merge.d	8 Aug 2007 08:44:28 -0000	1.2
@@ -1,7 +1,7 @@
 #source: merge.s
 #ld: -T merge.ld
 #objdump: -s
-#xfail: "arc-*-*" "avr-*-*" "cris-*-*" "dlx-*-*" "fr30-*-*" "frv-*-*"
+#xfail: "arc-*-*" "avr-*-*" "cris-*-*" "dlx-*-*" "brownie32-*-*" "fr30-*-*" "frv-*-*"
 #xfail: "hppa*-*-*" "h8300-*-*" "i960-*-*" "ip2k-*-*" "m32r-*-*" "mcore-*-*"
 #xfail: "mn10*-*-*" "mips*-*-*" "openrisc-*-*" "pj-*-*" "sparc*-*-*"
 #xfail: "xtensa-*-*" "crisv32-*-*"
Index: ld/testsuite/ld-selective/sel-dump.exp
===================================================================
RCS file: /home/prj/asip/cvs/binutils/ld/testsuite/ld-selective/sel-dump.exp,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- ld/testsuite/ld-selective/sel-dump.exp	31 Jul 2007 11:39:33 -0000	1.1.1.1
+++ ld/testsuite/ld-selective/sel-dump.exp	8 Aug 2007 08:44:28 -0000	1.2
@@ -25,7 +25,7 @@ set test_list [lsort [glob -nocomplain $
 for { set i 0 } { $i < [llength $test_list] } { incr i } {
     # We need to strip the ".d", but can leave the dirname.
     verbose [file rootname [lindex $test_list $i]]
-    setup_xfail "alpha*-*" "arc*-*" "d30v*-*" "dlx*-*" "i370*-*" "i860*-*"
+    setup_xfail "alpha*-*" "arc*-*" "d30v*-*" "dlx*-*" "brownie32*-*" "i370*-*" "i860*-*"
     setup_xfail "i960*-*" "ia64*-*" "mn10200-*" "or32-*" "pj-*" "sparc64*-*"
     run_dump_test [file rootname [lindex $test_list $i]]
 }
Index: ld/testsuite/ld-selective/selective.exp
===================================================================
RCS file: /home/prj/asip/cvs/binutils/ld/testsuite/ld-selective/selective.exp,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- ld/testsuite/ld-selective/selective.exp	31 Jul 2007 11:39:33 -0000	1.1.1.1
+++ ld/testsuite/ld-selective/selective.exp	8 Aug 2007 08:44:28 -0000	1.2
@@ -84,7 +84,7 @@ foreach testitem $seltests {
     foreach xfail_target $xfails {
 	setup_xfail $xfail_target
     }
-    setup_xfail "arc*-*" "d30v*-*" "dlx*-*" "i370*-*" "i860*-*"
+    setup_xfail "arc*-*" "d30v*-*" "dlx*-*" "brownie32*-*" "i370*-*" "i860*-*"
     setup_xfail "i960*-*" "mn10200-*" "or32-*" "pj-*" "sparc64*-*"
 
     # It's either C or C++ at the moment.
Index: opcodes/Makefile.am
===================================================================
RCS file: /home/prj/asip/cvs/binutils/opcodes/Makefile.am,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- opcodes/Makefile.am	31 Jul 2007 11:39:32 -0000	1.1.1.1
+++ opcodes/Makefile.am	8 Aug 2007 08:44:28 -0000	1.2
@@ -64,6 +64,7 @@ CFILES = \
 	d30v-dis.c \
 	d30v-opc.c \
 	dlx-dis.c \
+	brownie32-dis.c \
 	dis-buf.c \
 	dis-init.c \
 	disassemble.c \
@@ -189,6 +190,7 @@ ALL_MACHINES = \
 	d30v-dis.lo \
 	d30v-opc.lo \
 	dlx-dis.lo \
+	brownie32-dis.lo \
 	fr30-asm.lo \
 	fr30-desc.lo \
 	fr30-dis.lo \
@@ -568,6 +570,8 @@ d30v-opc.lo: d30v-opc.c sysdep.h config.
   $(INCDIR)/opcode/d30v.h
 dlx-dis.lo: dlx-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
   $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/dlx.h
+brownie32-dis.lo: brownie32-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
+  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/brownie32.h
 dis-buf.lo: dis-buf.c sysdep.h config.h $(INCDIR)/ansidecl.h \
   $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h
 dis-init.lo: dis-init.c sysdep.h config.h $(INCDIR)/ansidecl.h \
Index: opcodes/Makefile.in
===================================================================
RCS file: /home/prj/asip/cvs/binutils/opcodes/Makefile.in,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- opcodes/Makefile.in	31 Jul 2007 11:39:32 -0000	1.1.1.1
+++ opcodes/Makefile.in	8 Aug 2007 08:44:28 -0000	1.2
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.2 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -15,8 +15,6 @@
 @SET_MAKE@
 
 
-SOURCES = libopcodes.c $(libopcodes_la_SOURCES)
-
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
 VPATH = @srcdir@
@@ -40,6 +38,7 @@ POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
 target_triplet = @target@
+LIBOBJDIR =
 DIST_COMMON = $(srcdir)/../config.guess $(srcdir)/../config.sub \
 	ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
 	$(top_srcdir)/configure $(am__configure_deps) \
@@ -287,6 +286,7 @@ CFILES = \
 	d30v-dis.c \
 	d30v-opc.c \
 	dlx-dis.c \
+	brownie32-dis.c \
 	dis-buf.c \
 	dis-init.c \
 	disassemble.c \
@@ -412,6 +412,7 @@ ALL_MACHINES = \
 	d30v-dis.lo \
 	d30v-opc.lo \
 	dlx-dis.lo \
+	brownie32-dis.lo \
 	fr30-asm.lo \
 	fr30-desc.lo \
 	fr30-dis.lo \
@@ -661,7 +662,13 @@ uninstall-info-am:
 #     (which will cause the Makefiles to be regenerated when you run `make');
 # (2) otherwise, pass the desired values on the `make' command line.
 $(RECURSIVE_TARGETS):
-	@set fnord $$MAKEFLAGS; amf=$$2; \
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
 	dot_seen=no; \
 	target=`echo $@ | sed s/-recursive//`; \
 	list='$(SUBDIRS)'; for subdir in $$list; do \
@@ -673,7 +680,7 @@ $(RECURSIVE_TARGETS):
 	    local_target="$$target"; \
 	  fi; \
 	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
-	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	  || eval $$failcom; \
 	done; \
 	if test "$$dot_seen" = "no"; then \
 	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
@@ -681,7 +688,13 @@ $(RECURSIVE_TARGETS):
 
 mostlyclean-recursive clean-recursive distclean-recursive \
 maintainer-clean-recursive:
-	@set fnord $$MAKEFLAGS; amf=$$2; \
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
 	dot_seen=no; \
 	case "$@" in \
 	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
@@ -702,7 +715,7 @@ maintainer-clean-recursive:
 	    local_target="$$target"; \
 	  fi; \
 	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
-	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	  || eval $$failcom; \
 	done && test -z "$$fail"
 tags-recursive:
 	list='$(SUBDIRS)'; for subdir in $$list; do \
@@ -1099,6 +1112,8 @@ d30v-opc.lo: d30v-opc.c sysdep.h config.
   $(INCDIR)/opcode/d30v.h
 dlx-dis.lo: dlx-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
   $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/dlx.h
+brownie32-dis.lo: brownie32-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
+  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/brownie32.h
 dis-buf.lo: dis-buf.c sysdep.h config.h $(INCDIR)/ansidecl.h \
   $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h
 dis-init.lo: dis-init.c sysdep.h config.h $(INCDIR)/ansidecl.h \
Index: opcodes/aclocal.m4
===================================================================
RCS file: /home/prj/asip/cvs/binutils/opcodes/aclocal.m4,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- opcodes/aclocal.m4	31 Jul 2007 11:39:32 -0000	1.1.1.1
+++ opcodes/aclocal.m4	8 Aug 2007 08:44:28 -0000	1.2
@@ -1,7 +1,7 @@
-# generated automatically by aclocal 1.9.2 -*- Autoconf -*-
+# generated automatically by aclocal 1.9.6 -*- Autoconf -*-
 
-# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004
-# Free Software Foundation, Inc.
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
+# 2005  Free Software Foundation, Inc.
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -11,23 +11,11 @@
 # even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 # PARTICULAR PURPOSE.
 
-#                                                        -*- Autoconf -*-
-# Copyright (C) 2002, 2003  Free Software Foundation, Inc.
-# Generated from amversion.in; do not edit by hand.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+# Copyright (C) 2002, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
 # AM_AUTOMAKE_VERSION(VERSION)
 # ----------------------------
@@ -40,26 +28,15 @@ AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api
 # Call AM_AUTOMAKE_VERSION so it can be traced.
 # This function is AC_REQUIREd by AC_INIT_AUTOMAKE.
 AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],
-	 [AM_AUTOMAKE_VERSION([1.9.2])])
-
-# AM_AUX_DIR_EXPAND
+	 [AM_AUTOMAKE_VERSION([1.9.6])])
 
-# Copyright (C) 2001, 2003 Free Software Foundation, Inc.
+# AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
 # For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets
 # $ac_aux_dir to `$srcdir/foo'.  In other projects, it is set to
@@ -106,26 +83,16 @@ AC_PREREQ([2.50])dnl
 am_aux_dir=`cd $ac_aux_dir && pwd`
 ])
 
-# AM_CONDITIONAL                                              -*- Autoconf -*-
-
-# Copyright (C) 1997, 2000, 2001, 2003, 2004 Free Software Foundation, Inc.
+# AM_CONDITIONAL                                            -*- Autoconf -*-
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 1997, 2000, 2001, 2003, 2004, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# serial 6
+# serial 7
 
 # AM_CONDITIONAL(NAME, SHELL-CONDITION)
 # -------------------------------------
@@ -149,26 +116,15 @@ AC_CONFIG_COMMANDS_PRE(
 Usually this means the macro was only invoked conditionally.]])
 fi])])
 
-# serial 7						-*- Autoconf -*-
 
-# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004
+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005
 # Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
-
+# serial 8
 
 # There are a few dirty hacks below to avoid letting `AC_PROG_CC' be
 # written in clear, in which case automake, when reading aclocal.m4,
@@ -177,7 +133,6 @@ fi])])
 # CC etc. in the Makefile, will ask for an AC_PROG_CC use...
 
 
-
 # _AM_DEPENDENCIES(NAME)
 # ----------------------
 # See how the compiler implements dependency checking.
@@ -317,27 +272,16 @@ AM_CONDITIONAL([AMDEP], [test "x$enable_
 AC_SUBST([AMDEPBACKSLASH])
 ])
 
-# Generate code to set up dependency tracking.   -*- Autoconf -*-
-
-# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004
-#   Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
+# Generate code to set up dependency tracking.              -*- Autoconf -*-
 
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-#serial 2
+#serial 3
 
 # _AM_OUTPUT_DEPENDENCY_COMMANDS
 # ------------------------------
@@ -396,54 +340,31 @@ AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS]
      [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
 ])
 
-# Like AC_CONFIG_HEADER, but automatically create stamp file. -*- Autoconf -*-
-
-# Copyright (C) 1996, 1997, 2000, 2001, 2003 Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 1996, 1997, 2000, 2001, 2003, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# serial 7
+# serial 8
 
 # AM_CONFIG_HEADER is obsolete.  It has been replaced by AC_CONFIG_HEADERS.
 AU_DEFUN([AM_CONFIG_HEADER], [AC_CONFIG_HEADERS($@)])
 
-# Do all the work for Automake.                            -*- Autoconf -*-
+# Do all the work for Automake.                             -*- Autoconf -*-
 
-# This macro actually does too much some checks are only needed if
-# your package does certain things.  But this isn't really a big deal.
-
-# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005
 # Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# serial 12
 
-# serial 11
+# This macro actually does too much.  Some checks are only needed if
+# your package does certain things.  But this isn't really a big deal.
 
 # AM_INIT_AUTOMAKE(PACKAGE, VERSION, [NO-DEFINE])
 # AM_INIT_AUTOMAKE([OPTIONS])
@@ -545,51 +466,27 @@ for _am_header in $config_headers :; do
 done
 echo "timestamp for $1" >`AS_DIRNAME([$1])`/stamp-h[]$_am_stamp_count])
 
+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
 # AM_PROG_INSTALL_SH
 # ------------------
 # Define $install_sh.
-
-# Copyright (C) 2001, 2003 Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
-
 AC_DEFUN([AM_PROG_INSTALL_SH],
 [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
 install_sh=${install_sh-"$am_aux_dir/install-sh"}
 AC_SUBST(install_sh)])
 
-#                                                          -*- Autoconf -*-
-# Copyright (C) 2003  Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# serial 1
+# serial 2
 
 # Check whether the underlying file-system supports filenames
 # with a leading dot.  For instance MS-DOS doesn't.
@@ -604,28 +501,17 @@ fi
 rmdir .tst 2>/dev/null
 AC_SUBST([am__leading_dot])])
 
-# Add --enable-maintainer-mode option to configure.
+# Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-
 # From Jim Meyering
 
-# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004
+# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005
 # Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
-
-# serial 3
+# serial 4
 
 AC_DEFUN([AM_MAINTAINER_MODE],
 [AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])
@@ -644,26 +530,15 @@ AC_DEFUN([AM_MAINTAINER_MODE],
 
 AU_DEFUN([jm_MAINTAINER_MODE], [AM_MAINTAINER_MODE])
 
-# Check to see how 'make' treats includes.	-*- Autoconf -*-
-
-# Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.
+# Check to see how 'make' treats includes.	            -*- Autoconf -*-
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# serial 2
+# serial 3
 
 # AM_MAKE_INCLUDE()
 # -----------------
@@ -707,27 +582,16 @@ AC_MSG_RESULT([$_am_result])
 rm -f confinc confmf
 ])
 
-#  -*- Autoconf -*-
-
-
-# Copyright (C) 1997, 1999, 2000, 2001, 2003 Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
+# Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-
 
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 1997, 1999, 2000, 2001, 2003, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# serial 3
+# serial 4
 
 # AM_MISSING_PROG(NAME, PROGRAM)
 # ------------------------------
@@ -753,27 +617,16 @@ else
 fi
 ])
 
+# Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
 # AM_PROG_MKDIR_P
 # ---------------
 # Check whether `mkdir -p' is supported, fallback to mkinstalldirs otherwise.
-
-# Copyright (C) 2003, 2004 Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
-
+#
 # Automake 1.8 used `mkdir -m 0755 -p --' to ensure that directories
 # created by `make install' are always world readable, even if the
 # installer happens to have an overly restrictive umask (e.g. 077).
@@ -827,26 +680,15 @@ else
 fi
 AC_SUBST([mkdir_p])])
 
-# Helper functions for option handling.                    -*- Autoconf -*-
-
-# Copyright (C) 2001, 2002, 2003  Free Software Foundation, Inc.
+# Helper functions for option handling.                     -*- Autoconf -*-
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# serial 2
+# serial 3
 
 # _AM_MANGLE_OPTION(NAME)
 # -----------------------
@@ -871,28 +713,16 @@ AC_DEFUN([_AM_SET_OPTIONS],
 AC_DEFUN([_AM_IF_OPTION],
 [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
 
-#
-# Check to make sure that the build environment is sane.
-#
+# Check to make sure that the build environment is sane.    -*- Autoconf -*-
 
-# Copyright (C) 1996, 1997, 2000, 2001, 2003 Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 1996, 1997, 2000, 2001, 2003, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# serial 3
+# serial 4
 
 # AM_SANITY_CHECK
 # ---------------
@@ -935,25 +765,14 @@ Check your system clock])
 fi
 AC_MSG_RESULT(yes)])
 
-# AM_PROG_INSTALL_STRIP
-
-# Copyright (C) 2001, 2003 Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
+# AM_PROG_INSTALL_STRIP
+# ---------------------
 # One issue with vendor `install' (even GNU) is that you can't
 # specify the program used to strip binaries.  This is especially
 # annoying in cross-compiling environments, where the build's strip
@@ -976,25 +795,13 @@ AC_SUBST([INSTALL_STRIP_PROGRAM])])
 
 # Check how to create a tarball.                            -*- Autoconf -*-
 
-# Copyright (C) 2004  Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
-
-# serial 1
+# Copyright (C) 2004, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
+# serial 2
 
 # _AM_PROG_TAR(FORMAT)
 # --------------------
Index: opcodes/brownie32-dis.c
===================================================================
RCS file: opcodes/brownie32-dis.c
diff -N opcodes/brownie32-dis.c
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ opcodes/brownie32-dis.c	11 Feb 2008 14:15:40 -0000	1.2
@@ -0,0 +1,755 @@
+/* Instruction printing code for the BROWNIE32 Microprocessor
+   Copyright 2002 Free Software Foundation, Inc.
+   Contributed by Kuang Hwa Lin.  Written by Kuang Hwa Lin, 03/2002.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+
+#include "sysdep.h"
+#include "dis-asm.h"
+#include "opcode/brownie32.h"
+
+#define R_ERROR     0x1
+#define R_TYPE      0x2
+#define ILD_TYPE    0x3
+#define IST_TYPE    0x4
+#define IRI_TYPE    0x5
+#define IBR_TYPE    0x6
+#define IJ_TYPE     0x7
+#define IJR_TYPE    0x8
+#define ISP_TYPE    0xA
+#define IRT_TYPE    0xB
+#define NIL         0x9
+
+#define OPC(x)      (x & 0x3F)
+
+// AO_patch
+unsigned char rs1, rs2, rd;
+unsigned long imm26, current_insn_addr;
+
+
+unsigned char opc, rs1_31, rs1_26, rs1_15, rs1_10;
+unsigned char rs2_26, rd_31, rd_21, rd_10;
+unsigned long imm16, offset16, offset26, func, func21;
+unsigned long current_insn_addr;
+
+// AO_patch
+//static unsigned char brownie32_get_opcode PARAMS ((unsigned long));
+//static unsigned char brownie32_get_rs1    PARAMS ((unsigned long));
+//static unsigned char brownie32_get_rs2    PARAMS ((unsigned long));
+//static unsigned char brownie32_get_rdR    PARAMS ((unsigned long));
+//static unsigned long brownie32_get_func   PARAMS ((unsigned long)); 
+//static unsigned long brownie32_get_imm16  PARAMS ((unsigned long));
+//static unsigned long brownie32_get_imm26  PARAMS ((unsigned long));
+static unsigned char brownie32_get_opcode PARAMS ((unsigned long));
+static unsigned char brownie32_get_rs1_31 PARAMS ((unsigned long));
+static unsigned char brownie32_get_rs1_15 PARAMS ((unsigned long));
+static unsigned char brownie32_get_rs1_10 PARAMS ((unsigned long));
+static unsigned char brownie32_get_rs2_26 PARAMS ((unsigned long));
+static unsigned char brownie32_get_rd_21  PARAMS ((unsigned long));
+static unsigned char brownie32_get_rd_10  PARAMS ((unsigned long));
+static unsigned long brownie32_get_imm16  PARAMS ((unsigned long));
+static unsigned long brownie32_get_offset16 PARAMS ((unsigned long));
+static unsigned long brownie32_get_offset26 PARAMS ((unsigned long));
+static unsigned long brownie32_get_func PARAMS ((unsigned long));
+static unsigned long brownie32_get_func21 PARAMS ((unsigned long));
+
+static void     operand_deliminator PARAMS ((struct disassemble_info *, char *));
+static unsigned char brownie32_r_type     PARAMS ((struct disassemble_info *));
+static unsigned char brownie32_load_type  PARAMS ((struct disassemble_info *));
+static unsigned char brownie32_store_type PARAMS ((struct disassemble_info *));
+static unsigned char brownie32_ri_type    PARAMS ((struct disassemble_info *));
+static unsigned char brownie32_br_type    PARAMS ((struct disassemble_info *));
+static unsigned char brownie32_jmp_type   PARAMS ((struct disassemble_info *));
+static unsigned char brownie32_jr_type    PARAMS ((struct disassemble_info *));
+static unsigned char brownie32_sp_type    PARAMS ((struct disassemble_info *));
+
+/* Print one instruction from MEMADDR on INFO->STREAM.
+   Return the size of the instruction (always 4 on brownie32).  */
+
+static unsigned char
+brownie32_get_opcode (opcode)
+     unsigned long opcode;
+{
+  return (unsigned char) (opcode & 0x3F);
+}
+
+static unsigned char
+brownie32_get_rs1_31 (opcode)
+     unsigned long opcode;
+{
+  return (unsigned char) ((opcode >> 27) & 0x1F);
+}
+
+static unsigned char
+brownie32_get_rs1_26 (opcode)
+     unsigned long opcode;
+{
+  return (unsigned char) ((opcode >> 22) & 0x1F);
+}
+
+static unsigned char
+brownie32_get_rs1_15 (opcode)
+     unsigned long opcode;
+{
+  return (unsigned char) ((opcode >> 11) & 0x1F);
+}
+
+static unsigned char
+brownie32_get_rs1_10 (opcode)
+     unsigned long opcode;
+{
+  return (unsigned char) ((opcode >> 6) & 0x1F);
+}
+
+static unsigned char
+brownie32_get_rs2_26 (opcode)
+     unsigned long opcode;
+{
+  return (unsigned char) ((opcode >> 22) & 0x1F);
+}
+
+static unsigned char
+brownie32_get_rd_31 (opcode)
+     unsigned long opcode;
+{
+  return (unsigned char) ((opcode >> 27) & 0x1F);
+}
+
+static unsigned char
+brownie32_get_rd_21 (opcode)
+     unsigned long opcode;
+{
+  return (unsigned char) ((opcode >> 17) & 0x1F);
+}
+
+static unsigned char
+brownie32_get_rd_10 (opcode)
+     unsigned long opcode;
+{
+  return (unsigned char) ((opcode >> 6) & 0x1F);
+}
+
+static unsigned long
+brownie32_get_imm16 (opcode)
+     unsigned long opcode;
+{
+  return (unsigned long) ((opcode >> 16) & 0xFFFF);
+}
+
+static unsigned long
+brownie32_get_offset16 (opcode)
+     unsigned long opcode;
+{
+  return (unsigned long) ((opcode >> 16) & 0xFFFF);
+}
+
+static unsigned long
+brownie32_get_offset26 (opcode)
+     unsigned long opcode;
+{
+//  return (unsigned long) ((opcode >> 6) & 0xFFFF);  //C.Katano 
+  return (unsigned long) ((long)opcode >> 6);    
+}
+
+static unsigned long
+brownie32_get_func (opcode)
+     unsigned long opcode;
+{
+  return (unsigned long) (opcode & 0xFFFF);
+}
+
+static unsigned long
+brownie32_get_func21 (opcode)
+     unsigned long opcode;
+{
+  return (unsigned long) ((opcode >> 11) & 0x7FF); /* FIXMEE */
+}
+
+
+/* Fill the opcode to the max length.  */
+static void
+operand_deliminator (info, ptr)
+     struct disassemble_info *info;
+     char *ptr;
+{
+  int difft = 8 - (int) strlen (ptr);
+
+  while (difft > 0)
+    {
+      (*info->fprintf_func) (info->stream, "%c", ' ');
+      difft -= 1;
+    }
+}
+
+/* Process the R-type opcode.  */
+static unsigned char
+brownie32_r_type (info)
+     struct disassemble_info *info;
+{
+  unsigned char r_opc[] = { OPC(RRTYPOP) }; /* Fix ME */
+  int r_opc_num = (sizeof r_opc) / (sizeof (char));
+  struct _r_opcode
+  {
+    unsigned long func;
+    char *name;
+  }
+  brownie32_r_opcode[] =
+       {
+	{ (ADDFTYP|ADDFUNC|RRTYPOP),	"add"	}, /* ADD  (Rm + Rn)               */
+	{ (SUBFTYP|SUBFUNC|RRTYPOP),	"sub"	}, /* SUB  (Rm - Rn)               */
+	{ (MULFTYP|MULFUNC|RRTYPOP),	"mul"	}, /* MULTIPLY  (Rm * Rn)          */
+	{ (DIVFTYP|DIVFUNC|RRTYPOP),	"div"	}, /* DIVIDE    (Rm / Rn)          */
+	{ (DIVUFTYP|DIVUFUNC|RRTYPOP),	"divu"	}, /* DIVU      (Rm / Rn)          */
+	{ (MODFTYP|MODFUNC|RRTYPOP), 	"mod"	}, /* MOD       (Rm % Rn)          */
+	{ (MODUFTYP|MODUFUNC|RRTYPOP), 	"modu"	}, /* MODU      (Rm % Rn)          */
+	{ (ANDFTYP|ANDFUNC|RRTYPOP), 	"and"	}, /* AND       (Rm & Rn)          */
+	{ (NANDFTYP|NANDFUNC|RRTYPOP), 	"nand"	}, /* NAND      (Rm & Rn)          */
+	{ (ORFTYP|ORFUNC|RRTYPOP),	"or"	}, /* OR        (Rm | Rn)          */
+	{ (NORFTYP|NORFUNC|RRTYPOP),	"nor"	}, /* NOR       (Rm | Rn)          */
+	{ (XORFTYP|XORFUNC|RRTYPOP),	"xor"	}, /* EXCLUSIVE OR  (Rm ^ Rn)      */
+	{ (LLSFTYP|LLSFUNC|RRTYPOP),	"lls"	}, /* LOGICAL LEFT SHIFT           */
+	{ (LRSFTYP|LRSFUNC|RRTYPOP), 	"lrs"	}, /* LOGICAL RIGHT SHIFT          */
+	{ (ARSFTYP|ARSFUNC|RRTYPOP), 	"ars"	}, /* ARITHMETIC RIGHT SHIFT       */
+	{ (ELTFTYP|ELTFUNC|RRTYPOP), 	"elt"	}, /* SET IF LESS   SIGNED         */
+	{ (ELTUFTYP|ELTUFUNC|RRTYPOP), 	"eltu"	}, /* SET IF LESS UNSIGNED         */
+	{ (EEQFTYP|EEQFUNC|RRTYPOP),  	"eeq" 	}, /* SET IF EQUAL                 */
+	{ (ENEQFTYP|ENEQFUNC|RRTYPOP), 	"eneq"	}  /* SET IF NOT EQUAL             */
+       };
+// AO_patch
+//  {
+//    { NOPF,     "nop"    },  /* NOP                          */
+//    { ADDF,     "add"    },  /* Add                          */
+//    { ADDUF,    "addu"   },  /* Add Unsigned                 */
+//    { SUBF,     "sub"    },  /* SUB                          */
+//    { SUBUF,    "subu"   },  /* Sub Unsigned                 */
+//    { MULTF,    "mult"   },  /* MULTIPLY                     */
+//    { MULTUF,   "multu"  },  /* MULTIPLY Unsigned            */
+//    { DIVF,     "div"    },  /* DIVIDE                       */
+//    { DIVUF,    "divu"   },  /* DIVIDE Unsigned              */
+//    { ANDF,     "and"    },  /* AND                          */
+//    { ORF,      "or"     },  /* OR                           */
+//    { XORF,     "xor"    },  /* Exclusive OR                 */
+//    { SLLF,     "sll"    },  /* SHIFT LEFT LOGICAL           */
+//    { SRAF,     "sra"    },  /* SHIFT RIGHT ARITHMETIC       */
+//    { SRLF,     "srl"    },  /* SHIFT RIGHT LOGICAL          */
+//    { SEQF,     "seq"    },  /* Set if equal                 */
+//    { SNEF,     "sne"    },  /* Set if not equal             */
+//    { SLTF,     "slt"    },  /* Set if less                  */
+//    { SGTF,     "sgt"    },  /* Set if greater               */
+//    { SLEF,     "sle"    },  /* Set if less or equal         */
+//    { SGEF,     "sge"    },  /* Set if greater or equal      */
+//    { SEQUF,    "sequ"   },  /* Set if equal                 */
+//    { SNEUF,    "sneu"   },  /* Set if not equal             */
+//    { SLTUF,    "sltu"   },  /* Set if less                  */
+//    { SGTUF,    "sgtu"   },  /* Set if greater               */
+//    { SLEUF,    "sleu"   },  /* Set if less or equal         */
+//    { SGEUF,    "sgeu"   },  /* Set if greater or equal      */
+//    { MVTSF,    "mvts"   },  /* Move to special register     */
+//    { MVFSF,    "mvfs"   },  /* Move from special register   */
+//    { BSWAPF,   "bswap"  },  /* Byte swap ??                 */
+//    { LUTF,     "lut"    }   /* ????????? ??                 */
+//  };
+
+  int brownie32_r_opcode_num = (sizeof brownie32_r_opcode) / (sizeof brownie32_r_opcode[0]);
+  int idx;
+
+  for (idx = 0; idx < r_opc_num; idx++)
+    {
+      if (r_opc[idx] != opc)
+	continue;
+      else
+	break;
+  }
+
+  if (idx == r_opc_num)
+    return NIL;
+
+  for (idx = 0 ; idx < brownie32_r_opcode_num; idx++)
+    if (brownie32_r_opcode[idx].func == func)
+      {
+	(*info->fprintf_func) (info->stream, "%s", brownie32_r_opcode[idx].name);
+	if (func != NOPOP)
+	  {
+	    /* This is not a nop.  */
+	    operand_deliminator (info, brownie32_r_opcode[idx].name);
+	    (*info->fprintf_func) (info->stream, "r%d,", (int)rd_21);
+	    (*info->fprintf_func) (info->stream, "r%d", (int)rs1_31);
+            (*info->fprintf_func) (info->stream, ",r%d", (int)rs2_26);
+	  }
+	return (unsigned char) R_TYPE;
+      }
+  return (unsigned char) R_ERROR;
+}
+
+/* Process the memory read opcode.  */
+
+static unsigned char
+brownie32_load_type (info)
+     struct disassemble_info* info;
+{
+  struct _load_opcode
+  {
+    unsigned long opcode;
+    char *name;
+  }
+  brownie32_load_opcode[] =
+    {
+      { OPC(LBOP),     "lb" },  /* load byte sign extended.       */
+      { OPC(LHOP),     "lh" },  /* load halfword sign extended.   */
+      { OPC(LWOP),     "lw" }   /* load halfword sign extended.   */
+    };
+// AO_patch
+//  {
+//      { OPC(LHIOP),   "lhi" },  /* Load HI to register.           */
+//      { OPC(LBOP),     "lb" },  /* load byte sign extended.       */
+//      { OPC(LBUOP),   "lbu" },  /* load byte unsigned.            */
+//      { OPC(LSBUOP),"ldstbu"},  /* load store byte unsigned.      */
+//      { OPC(LHOP),     "lh" },  /* load halfword sign extended.   */
+//      { OPC(LHUOP),   "lhu" },  /* load halfword unsigned.        */
+//      { OPC(LSHUOP),"ldsthu"},  /* load store halfword unsigned.  */
+//      { OPC(LWOP),     "lw" },  /* load word.                     */
+//      { OPC(LSWOP), "ldstw" }   /* load store word.               */
+//    };
+
+  int brownie32_load_opcode_num =
+    (sizeof brownie32_load_opcode) / (sizeof brownie32_load_opcode[0]);
+  int idx;
+
+  for (idx = 0 ; idx < brownie32_load_opcode_num; idx++)
+    if (brownie32_load_opcode[idx].opcode == opc)
+      {
+         (*info->fprintf_func) (info->stream, "%s", brownie32_load_opcode[idx].name);
+         operand_deliminator (info, brownie32_load_opcode[idx].name);
+         (*info->fprintf_func) (info->stream, "r%d,", (int)rd_10);
+         (*info->fprintf_func) (info->stream, "0x%04x[r%d]", (int)offset16, (int)rs1_15);
+         return (unsigned char) ILD_TYPE;
+       }
+     return (unsigned char) NIL;
+     }
+
+/* Process the memory store opcode.  */
+
+static unsigned char
+brownie32_store_type (info)
+     struct disassemble_info* info;
+{
+  struct _store_opcode
+  {
+    unsigned long opcode;
+    char *name;
+  }
+  brownie32_store_opcode[] =
+    {
+      { OPC(SBOP),     "sb" },  /* store byte sign extended.       */
+      { OPC(SHOP),     "sh" },  /* store halfword sign extended.   */
+      { OPC(SWOP),     "sw" }   /* store halfword sign extended.   */
+    };
+// AO_patch
+//    {
+//      { OPC(SBOP),     "sb" },  /* Store byte.      */
+//      { OPC(SHOP),     "sh" },  /* Store halfword.  */
+//      { OPC(SWOP),     "sw" },  /* Store word.      */
+//    };
+  int brownie32_store_opcode_num =
+    (sizeof brownie32_store_opcode) / (sizeof brownie32_store_opcode[0]);
+  int idx;
+
+  for (idx = 0 ; idx < brownie32_store_opcode_num; idx++)
+    if (brownie32_store_opcode[idx].opcode == opc)
+      {
+         (*info->fprintf_func) (info->stream, "%s", brownie32_store_opcode[idx].name);
+         operand_deliminator (info, brownie32_store_opcode[idx].name);
+         (*info->fprintf_func) (info->stream, "0x%04x[r%d],", (int)offset16, (int)rd_10);
+         (*info->fprintf_func) (info->stream, "r%d", (int)rs1_15);
+	return (unsigned char) IST_TYPE;
+      }
+  return (unsigned char) NIL;
+}
+
+/* Process the Arithmetic and Logical RI-TYPE opcode.  */
+
+static unsigned char
+brownie32_ri_type (info)
+     struct disassemble_info* info;
+{
+  struct _aluI_opcode
+  {
+    unsigned long opcode;
+    char *name;
+  }
+  brownie32_aluI_opcode[] =
+       {
+           { OPC(ADDIOP),   "addi" },                    /* ADD  (Rm + Immediate)             */
+           { OPC(SUBIOP),   "subi" },                    /* SUB  (Rm - Immediate)             */
+           { OPC(ANDIOP),   "andi" },                    /* AND  (Rm & Immediate)             */
+           { OPC(ORIOP) ,   "ori"  },                    /* OR   (Rm | Immediate)             */
+           { OPC(XORIOP),   "xori" },                    /* EXCLUSIVE OR  (Rm ^ Immediate)    */
+           { OPC(LLSIOP),   "llsi" },                    /* LOGICAL LEFT SHIFT Immediate      */
+           { OPC(LRSIOP),   "lrsi" },                    /* LOGICAL LEFT SHIFT Immediate      */
+           { OPC(ARSIOP),   "arsi" },                    /* ARITHMETIC RIGHT SHIFT Immediate  */
+           { OPC(LSOIOP),   "lsoi" }                     /* 16bit LEFT SHIFT and OR Immediate */
+       };
+// AO_patch
+//
+//    {
+//      { OPC(ADDIOP),   "addi"  },  /* Store byte.      */
+//      { OPC(ADDUIOP),  "addui" },  /* Store halfword.  */
+//      { OPC(SUBIOP),   "subi"  },  /* Store word.      */
+//      { OPC(SUBUIOP),  "subui" },  /* Store word.      */
+//      { OPC(ANDIOP),   "andi"  },  /* Store word.      */
+//      { OPC(ORIOP),    "ori"   },  /* Store word.      */
+//      { OPC(XORIOP),   "xori"  },  /* Store word.      */
+//      { OPC(SLLIOP),   "slli"  },  /* Store word.      */
+//      { OPC(SRAIOP),   "srai"  },  /* Store word.      */
+//      { OPC(SRLIOP),   "srli"  },  /* Store word.      */
+//      { OPC(SEQIOP),   "seqi"  },  /* Store word.      */
+//      { OPC(SNEIOP),   "snei"  },  /* Store word.      */
+//      { OPC(SLTIOP),   "slti"  },  /* Store word.      */
+//      { OPC(SGTIOP),   "sgti"  },  /* Store word.      */
+//      { OPC(SLEIOP),   "slei"  },  /* Store word.      */
+//      { OPC(SGEIOP),   "sgei"  },  /* Store word.      */
+//      { OPC(SEQUIOP),  "sequi" },  /* Store word.      */
+//      { OPC(SNEUIOP),  "sneui" },  /* Store word.      */
+//      { OPC(SLTUIOP),  "sltui" },  /* Store word.      */
+//      { OPC(SGTUIOP),  "sgtui" },  /* Store word.      */
+//      { OPC(SLEUIOP),  "sleui" },  /* Store word.      */
+//      { OPC(SGEUIOP),  "sgeui" },  /* Store word.      */
+//#if 0						       
+//      { OPC(MVTSOP),   "mvts"  },  /* Store word.      */
+//      { OPC(MVFSOP),   "mvfs"  },  /* Store word.      */
+//#endif
+//    };
+
+
+  int brownie32_aluI_opcode_num =
+    (sizeof brownie32_aluI_opcode) / (sizeof brownie32_aluI_opcode[0]);
+  int idx;
+  for (idx = 0 ; idx < brownie32_aluI_opcode_num; idx++)
+    if (brownie32_aluI_opcode[idx].opcode == opc)
+      {
+	(*info->fprintf_func) (info->stream, "%s", brownie32_aluI_opcode[idx].name);
+	operand_deliminator (info, brownie32_aluI_opcode[idx].name);
+	(*info->fprintf_func) (info->stream, "r%d,", (int)rd_10);
+	(*info->fprintf_func) (info->stream, "r%d,", (int)rs1_15);
+	(*info->fprintf_func) (info->stream, "0x%04x", (int)imm16);
+	return (unsigned char) IRI_TYPE;
+      }
+
+  return (unsigned char) NIL;
+}
+
+/* Process the branch instruction.  */
+
+static unsigned char
+brownie32_br_type (info)
+     struct disassemble_info* info;
+{
+  struct _br_opcode
+  {
+    unsigned long opcode;
+    char *name;
+  }
+  brownie32_br_opcode[] =
+      {
+        { OPC(BRZOP),   "brz" },
+        { OPC(BRNZOP),  "brnz" }
+      };
+// AO_patch
+//
+//    {
+//      { OPC(BEQOP), "beqz" }, /* Store byte.  */
+//      { OPC(BNEOP), "bnez" }  /* Store halfword.  */
+//    };
+
+  int brownie32_br_opcode_num =
+    (sizeof brownie32_br_opcode) / (sizeof brownie32_br_opcode[0]);
+  int idx;
+
+  for (idx = 0 ; idx < brownie32_br_opcode_num; idx++)
+    if (brownie32_br_opcode[idx].opcode == opc)
+      {
+	if (offset16 & 0x00008000)
+	  offset16 |= 0xFFFF0000;
+
+	imm16 += (current_insn_addr + 4);
+	(*info->fprintf_func) (info->stream, "%s", brownie32_br_opcode[idx].name);
+	operand_deliminator (info, brownie32_br_opcode[idx].name);
+	(*info->fprintf_func) (info->stream, "r%d,", (int)rs1_15);
+	(*info->fprintf_func) (info->stream, "0x%08x", (int)offset16);
+
+	return (unsigned char) IBR_TYPE;
+      }
+
+  return (unsigned char) NIL;
+}
+
+/* Process the jump instruction.  */
+
+static unsigned char
+brownie32_jmp_type (info)
+     struct disassemble_info* info;
+{
+  struct _jmp_opcode
+  {
+    unsigned long opcode;
+    char *name;
+  }
+  brownie32_jmp_opcode[] =
+       {
+           { OPC(JPOP),     "jp"   },                    /* RELATIVE JUMP                    */
+           { OPC(JPLOP),    "jpl"  },                    /* SET NEXT ADDR AND RELATIVE JUMP  */
+           { OPC(TRAPOP),   "trap" }                     /* OCCURE SOFTWARE INTERRUPT        */
+       };
+// AO_patch
+//
+//      { OPC(JOP),         "j" },  /* Store byte.      */
+//      { OPC(JALOP),     "jal" },  /* Store halfword.  */
+//      { OPC(BREAKOP), "break" },  /* Store halfword.  */
+//      { OPC(TRAPOP),   "trap" },  /* Store halfword.  */
+//      { OPC(RFEOP),     "rfe" }   /* Store halfword.  */
+//    };
+
+  int brownie32_jmp_opcode_num =
+    (sizeof brownie32_jmp_opcode) / (sizeof brownie32_jmp_opcode[0]);
+  int idx;
+
+  for (idx = 0 ; idx < brownie32_jmp_opcode_num; idx++)
+    if (brownie32_jmp_opcode[idx].opcode == opc)
+      {
+	if (offset26 & 0x02000000)
+	  offset26 |= 0xFC000000;
+
+	imm26 += (current_insn_addr + 4);
+
+	(*info->fprintf_func) (info->stream, "%s", brownie32_jmp_opcode[idx].name);
+	operand_deliminator (info, brownie32_jmp_opcode[idx].name);
+	(*info->fprintf_func) (info->stream, "0x%08x", (int)offset26);
+
+	return (unsigned char) IJ_TYPE;
+      }
+
+  return (unsigned char) NIL;
+}
+
+/* Process the jump register instruction.  */
+
+static unsigned char
+brownie32_jr_type (info)
+     struct disassemble_info* info;
+{
+  struct _jr_opcode
+  {
+    unsigned long opcode;
+    char *name;
+  }
+  brownie32_jr_opcode[] = 
+       {
+          { OPC(JPROP),    "jpr"  },                   /* ABSOLUTE JUMP                    */
+          { OPC(JPRLOP),   "jprl" }                    /* SET NEXT ADDR AND ABSOLUTE JUMP  */
+       };
+// AO_patch
+//
+//    { OPC(JROP),   "jr"    },  /* Store byte.  */
+//    { OPC(JALROP), "jalr"  }   /* Store halfword.  */
+//  };
+
+
+  int brownie32_jr_opcode_num =
+    (sizeof brownie32_jr_opcode) / (sizeof brownie32_jr_opcode[0]);
+  int idx;
+
+  for (idx = 0 ; idx < brownie32_jr_opcode_num; idx++)
+    if (brownie32_jr_opcode[idx].opcode == opc)
+      {
+	(*info->fprintf_func) (info->stream, "%s", brownie32_jr_opcode[idx].name);
+	operand_deliminator (info, brownie32_jr_opcode[idx].name);
+	(*info->fprintf_func) (info->stream, "r%d", (int)rs1_10);
+	return (unsigned char) IJR_TYPE;
+      }
+
+  return (unsigned char) NIL;
+}
+
+
+/* Process the Special instruction.  */
+
+static unsigned char
+brownie32_sp_type (info)
+     struct disassemble_info* info;
+{
+  struct _sp_opcode
+  {
+    unsigned long opcode;
+    char *name;
+  }
+  brownie32_sp_opcode[] = 
+       {
+          { RETIOP&0x7F,   "reti" },                    /* RETI                   */
+          { NOPOP&0x7F,    "nop"  }                     /* NOP                    */
+       };
+
+  int brownie32_sp_opcode_num =
+    (sizeof brownie32_sp_opcode) / (sizeof brownie32_sp_opcode[0]);
+  int idx;
+
+  for (idx = 0 ; idx < brownie32_sp_opcode_num; idx++)
+    if (brownie32_sp_opcode[idx].opcode == (func&0xFF) )
+      {
+	(*info->fprintf_func) (info->stream, "%s", brownie32_sp_opcode[idx].name);
+	operand_deliminator (info, brownie32_sp_opcode[idx].name);
+	return (unsigned char) ISP_TYPE;
+      }
+
+  return (unsigned char) NIL;
+}
+
+/* Process the extend to word instruction.  */
+
+static unsigned char
+brownie32_rt_type (info)
+     struct disassemble_info* info;
+{
+  struct _rt_opcode
+  {
+    unsigned long opcode;
+    char *name;
+  }
+  brownie32_rt_opcode[] = 
+       {
+          { EXBWOP&0xFFF,   "exbw" },                   /* EXBW                   */
+          { EXHWOP&0xFFF,   "exhw" }                    /* NOP                    */
+       };
+
+  int brownie32_rt_opcode_num =
+    (sizeof brownie32_rt_opcode) / (sizeof brownie32_rt_opcode[0]);
+  int idx;
+
+  for (idx = 0 ; idx < brownie32_rt_opcode_num; idx++)
+    if (brownie32_rt_opcode[idx].opcode == (func&0xFFF) )
+      {
+	(*info->fprintf_func) (info->stream, "%s", brownie32_rt_opcode[idx].name);
+	operand_deliminator (info, brownie32_rt_opcode[idx].name);
+	(*info->fprintf_func) (info->stream, "r%d,", (int)rd_31);
+	(*info->fprintf_func) (info->stream, "r%d", (int)rs1_26);
+	return (unsigned char) IRT_TYPE;
+      }
+
+  return (unsigned char) NIL;
+}
+
+typedef unsigned char (* brownie32_insn) PARAMS ((struct disassemble_info *));
+
+/* This is the main BROWNIE32 insn handling routine.  */
+
+int
+print_insn_brownie32 (memaddr, info)
+     bfd_vma memaddr;
+     struct disassemble_info* info;
+{
+  bfd_byte buffer[4];
+  int insn_idx;
+  unsigned long insn_word;
+  unsigned char rtn_code;
+  unsigned long brownie32_insn_type[] =
+    {
+      (unsigned long) brownie32_r_type,
+      (unsigned long) brownie32_load_type,
+      (unsigned long) brownie32_store_type,
+      (unsigned long) brownie32_ri_type,
+      (unsigned long) brownie32_br_type,
+      (unsigned long) brownie32_jmp_type,
+      (unsigned long) brownie32_jr_type,
+      (unsigned long) brownie32_sp_type,
+      (unsigned long) brownie32_rt_type,
+      (unsigned long) NULL
+  };
+  int brownie32_insn_type_num = ((sizeof brownie32_insn_type) / (sizeof (unsigned long))) - 1;
+  int status =
+    (*info->read_memory_func) (memaddr, (bfd_byte *) &buffer[0], 4, info);
+
+  if (status != 0)
+    {
+      (*info->memory_error_func) (status, memaddr, info);
+      return -1;
+    }
+
+  /* Now decode the insn    */
+  insn_word = bfd_getb32 (buffer);
+  opc  = brownie32_get_opcode (insn_word);
+  rs1_31 = brownie32_get_rs1_31 (insn_word);
+  rs1_26 = brownie32_get_rs1_26 (insn_word);
+  rs1_15 = brownie32_get_rs1_15 (insn_word);
+  rs1_10 = brownie32_get_rs1_10 (insn_word);
+  rs2_26 = brownie32_get_rs2_26 (insn_word);
+  rd_31  = brownie32_get_rd_31 (insn_word);
+  rd_21  = brownie32_get_rd_21 (insn_word);
+  rd_10  = brownie32_get_rd_10 (insn_word);
+  imm16  = brownie32_get_imm16 (insn_word);
+  offset16 = brownie32_get_offset16 (insn_word);
+  offset26 = brownie32_get_offset26 (insn_word);
+  func     = brownie32_get_func (insn_word);
+  func21   = brownie32_get_func21 (insn_word);
+// AO_patch
+//  rs2  = brownie32_get_rs2 (insn_word);
+//  rd   = brownie32_get_rdR (insn_word);
+//  func = brownie32_get_func (insn_word);
+//  imm16= brownie32_get_imm16 (insn_word);
+//  imm26= brownie32_get_imm26 (insn_word);
+
+#if 0
+  printf ("print_insn_big_brownie32: opc = 0x%02x\n"
+	  "                    rs1_31 = 0x%02x\n"
+	  "                    rs2_26 = 0x%02x\n"
+	  "                    rd_21  = 0x%02x\n"
+	  "                    func  = 0x%08x\n",
+	  opc, rs1_31, rs2_26, rd_21, func);
+#endif
+
+  /* Scan through all the insn type and print the insn out.  */
+  rtn_code = 0;
+  current_insn_addr = (unsigned long) memaddr;
+
+  for (insn_idx = 0; brownie32_insn_type[insn_idx] != 0x0; insn_idx++)
+    switch (((brownie32_insn) (brownie32_insn_type[insn_idx])) (info))
+      {
+	/* Found the correct opcode   */
+      case R_TYPE:
+      case ILD_TYPE:
+      case IST_TYPE:
+      case IRI_TYPE:
+      case IBR_TYPE:
+      case IJ_TYPE:
+      case IJR_TYPE:
+      case ISP_TYPE:
+      case IRT_TYPE:
+	return 4;
+
+	/* Wrong insn type check next one. */
+      default:
+      case NIL:
+	continue;
+
+	/* All rest of the return code are not recongnized, treat it as error */
+	/* we should never get here,  I hope! */
+      case R_ERROR:
+	return -1;
+      }
+
+  if (insn_idx ==  brownie32_insn_type_num)
+    /* Well, does not recoganize this opcode.  */
+    (*info->fprintf_func) (info->stream, "<%s>", "Unrecognized Opcode");
+
+  return 4;
+}
Index: opcodes/configure
===================================================================
RCS file: /home/prj/asip/cvs/binutils/opcodes/configure,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- opcodes/configure	31 Jul 2007 11:39:32 -0000	1.1.1.1
+++ opcodes/configure	8 Aug 2007 08:44:28 -0000	1.2
@@ -8605,6 +8605,7 @@ if test x${all_targets} = xfalse ; then
 	bfd_d10v_arch)		ta="$ta d10v-dis.lo d10v-opc.lo" ;;
 	bfd_d30v_arch)		ta="$ta d30v-dis.lo d30v-opc.lo" ;;
 	bfd_dlx_arch)		ta="$ta dlx-dis.lo" ;;
+	bfd_brownie32_arch)	ta="$ta brownie32-dis.lo" ;;
 	bfd_fr30_arch)          ta="$ta fr30-asm.lo fr30-desc.lo fr30-dis.lo fr30-ibld.lo fr30-opc.lo" using_cgen=yes ;;
 	bfd_h8300_arch)		ta="$ta h8300-dis.lo" ;;
 	bfd_h8500_arch)		ta="$ta h8500-dis.lo" ;;
@@ -8798,9 +8799,10 @@ for ac_i in : $LIBOBJS; do test "x$ac_i"
   # 1. Remove the extension, and $U if already installed.
   ac_i=`echo "$ac_i" |
 	 sed 's/\$U\././;s/\.o$//;s/\.obj$//'`
-  # 2. Add them.
-  ac_libobjs="$ac_libobjs $ac_i\$U.$ac_objext"
-  ac_ltlibobjs="$ac_ltlibobjs $ac_i"'$U.lo'
+  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
+  #    will be set to the directory where LIBOBJS objects are built.
+  ac_libobjs="$ac_libobjs \${LIBOBJDIR}$ac_i\$U.$ac_objext"
+  ac_ltlibobjs="$ac_ltlibobjs \${LIBOBJDIR}$ac_i"'$U.lo'
 done
 LIBOBJS=$ac_libobjs
 
Index: opcodes/configure.in
===================================================================
RCS file: /home/prj/asip/cvs/binutils/opcodes/configure.in,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- opcodes/configure.in	31 Jul 2007 11:39:32 -0000	1.1.1.1
+++ opcodes/configure.in	8 Aug 2007 08:44:28 -0000	1.2
@@ -182,6 +182,7 @@ if test x${all_targets} = xfalse ; then
 	bfd_d10v_arch)		ta="$ta d10v-dis.lo d10v-opc.lo" ;;
 	bfd_d30v_arch)		ta="$ta d30v-dis.lo d30v-opc.lo" ;;
 	bfd_dlx_arch)		ta="$ta dlx-dis.lo" ;;
+	bfd_brownie32_arch)	ta="$ta brownie32-dis.lo" ;;
 	bfd_fr30_arch)          ta="$ta fr30-asm.lo fr30-desc.lo fr30-dis.lo fr30-ibld.lo fr30-opc.lo" using_cgen=yes ;;
 	bfd_h8300_arch)		ta="$ta h8300-dis.lo" ;;
 	bfd_h8500_arch)		ta="$ta h8500-dis.lo" ;;
Index: opcodes/disassemble.c
===================================================================
RCS file: /home/prj/asip/cvs/binutils/opcodes/disassemble.c,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- opcodes/disassemble.c	31 Jul 2007 11:39:32 -0000	1.1.1.1
+++ opcodes/disassemble.c	8 Aug 2007 08:44:28 -0000	1.2
@@ -30,6 +30,7 @@
 #define ARCH_d10v
 #define ARCH_d30v
 #define ARCH_dlx
+#define ARCH_brownie32
 #define ARCH_h8300
 #define ARCH_h8500
 #define ARCH_hppa
@@ -140,12 +141,22 @@ disassembler (abfd)
       disassemble = print_insn_d30v;
       break;
 #endif
+
 #ifdef ARCH_dlx
     case bfd_arch_dlx:
       /* As far as I know we only handle big-endian DLX objects.  */
       disassemble = print_insn_dlx;
       break;
 #endif
+
+#ifdef ARCH_brownie32
+    case bfd_arch_brownie32:
+      /* As far as I know we only handle big-endian BROWNIE32 objects.  */
+      disassemble = print_insn_brownie32;
+      break;
+#endif
+
+
 #ifdef ARCH_h8300
     case bfd_arch_h8300:
       if (bfd_get_mach (abfd) == bfd_mach_h8300h
Index: opcodes/po/POTFILES.in
===================================================================
RCS file: /home/prj/asip/cvs/binutils/opcodes/po/POTFILES.in,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -r1.1.1.1 -r1.2
--- opcodes/po/POTFILES.in	31 Jul 2007 11:39:32 -0000	1.1.1.1
+++ opcodes/po/POTFILES.in	8 Aug 2007 08:44:28 -0000	1.2
@@ -21,7 +21,10 @@ d30v-opc.c
 disassemble.c
 dis-buf.c
 dis-init.c
+
 dlx-dis.c
+brownie32-dis.c
+
 fr30-asm.c
 fr30-desc.c
 fr30-desc.h
